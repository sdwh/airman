(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function i(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=i(o);fetch(o.href,s)}})();/**
* @vue/shared v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Un(e){const n=Object.create(null);for(const i of e.split(","))n[i]=1;return i=>i in n}const Q={},xa=[],Fe=()=>{},Ot=()=>!1,an=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),_n=e=>e.startsWith("onUpdate:"),me=Object.assign,Kn=(e,n)=>{const i=e.indexOf(n);i>-1&&e.splice(i,1)},Ft=Object.prototype.hasOwnProperty,V=(e,n)=>Ft.call(e,n),U=Array.isArray,ba=e=>nn(e)==="[object Map]",Li=e=>nn(e)==="[object Set]",_=e=>typeof e=="function",re=e=>typeof e=="string",aa=e=>typeof e=="symbol",ne=e=>e!==null&&typeof e=="object",Gi=e=>(ne(e)||_(e))&&_(e.then)&&_(e.catch),Hi=Object.prototype.toString,nn=e=>Hi.call(e),Ut=e=>nn(e).slice(8,-1),Di=e=>nn(e)==="[object Object]",qn=e=>re(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Na=Un(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),tn=e=>{const n=Object.create(null);return i=>n[i]||(n[i]=e(i))},_t=/-(\w)/g,ea=tn(e=>e.replace(_t,(n,i)=>i?i.toUpperCase():"")),Kt=/\B([A-Z])/g,ma=tn(e=>e.replace(Kt,"-$1").toLowerCase()),ki=tn(e=>e.charAt(0).toUpperCase()+e.slice(1)),mn=tn(e=>e?`on${ki(e)}`:""),ca=(e,n)=>!Object.is(e,n),un=(e,...n)=>{for(let i=0;i<e.length;i++)e[i](...n)},Oi=(e,n,i,r=!1)=>{Object.defineProperty(e,n,{configurable:!0,enumerable:!1,writable:r,value:i})},qt=e=>{const n=parseFloat(e);return isNaN(n)?e:n};let ri;const rn=()=>ri||(ri=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Wn(e){if(U(e)){const n={};for(let i=0;i<e.length;i++){const r=e[i],o=re(r)?Vt(r):Wn(r);if(o)for(const s in o)n[s]=o[s]}return n}else if(re(e)||ne(e))return e}const Wt=/;(?![^(]*\))/g,zt=/:([^]+)/,Jt=/\/\*[^]*?\*\//g;function Vt(e){const n={};return e.replace(Jt,"").split(Wt).forEach(i=>{if(i){const r=i.split(zt);r.length>1&&(n[r[0].trim()]=r[1].trim())}}),n}function Ga(e){let n="";if(re(e))n=e;else if(U(e))for(let i=0;i<e.length;i++){const r=Ga(e[i]);r&&(n+=r+" ")}else if(ne(e))for(const i in e)e[i]&&(n+=i+" ");return n.trim()}const Yt="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",jt=Un(Yt);function Fi(e){return!!e||e===""}const Ui=e=>!!(e&&e.__v_isRef===!0),ze=e=>re(e)?e:e==null?"":U(e)||ne(e)&&(e.toString===Hi||!_(e.toString))?Ui(e)?ze(e.value):JSON.stringify(e,_i,2):String(e),_i=(e,n)=>Ui(n)?_i(e,n.value):ba(n)?{[`Map(${n.size})`]:[...n.entries()].reduce((i,[r,o],s)=>(i[pn(r,s)+" =>"]=o,i),{})}:Li(n)?{[`Set(${n.size})`]:[...n.values()].map(i=>pn(i))}:aa(n)?pn(n):ne(n)&&!U(n)&&!Di(n)?String(n):n,pn=(e,n="")=>{var i;return aa(e)?`Symbol(${(i=e.description)!=null?i:n})`:e};/**
* @vue/reactivity v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Me;class Zt{constructor(n=!1){this.detached=n,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Me,!n&&Me&&(this.index=(Me.scopes||(Me.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let n,i;if(this.scopes)for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].pause();for(n=0,i=this.effects.length;n<i;n++)this.effects[n].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let n,i;if(this.scopes)for(n=0,i=this.scopes.length;n<i;n++)this.scopes[n].resume();for(n=0,i=this.effects.length;n<i;n++)this.effects[n].resume()}}run(n){if(this._active){const i=Me;try{return Me=this,n()}finally{Me=i}}}on(){Me=this}off(){Me=this.parent}stop(n){if(this._active){let i,r;for(i=0,r=this.effects.length;i<r;i++)this.effects[i].stop();for(i=0,r=this.cleanups.length;i<r;i++)this.cleanups[i]();if(this.scopes)for(i=0,r=this.scopes.length;i<r;i++)this.scopes[i].stop(!0);if(!this.detached&&this.parent&&!n){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function Xt(){return Me}let ee;const hn=new WeakSet;class Ki{constructor(n){this.fn=n,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,Me&&Me.active&&Me.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,hn.has(this)&&(hn.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Wi(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,oi(this),zi(this);const n=ee,i=we;ee=this,we=!0;try{return this.fn()}finally{Ji(this),ee=n,we=i,this.flags&=-3}}stop(){if(this.flags&1){for(let n=this.deps;n;n=n.nextDep)Vn(n);this.deps=this.depsTail=void 0,oi(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?hn.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Rn(this)&&this.run()}get dirty(){return Rn(this)}}let qi=0,Pa,Ba;function Wi(e,n=!1){if(e.flags|=8,n){e.next=Ba,Ba=e;return}e.next=Pa,Pa=e}function zn(){qi++}function Jn(){if(--qi>0)return;if(Ba){let n=Ba;for(Ba=void 0;n;){const i=n.next;n.next=void 0,n.flags&=-9,n=i}}let e;for(;Pa;){let n=Pa;for(Pa=void 0;n;){const i=n.next;if(n.next=void 0,n.flags&=-9,n.flags&1)try{n.trigger()}catch(r){e||(e=r)}n=i}}if(e)throw e}function zi(e){for(let n=e.deps;n;n=n.nextDep)n.version=-1,n.prevActiveLink=n.dep.activeLink,n.dep.activeLink=n}function Ji(e){let n,i=e.depsTail,r=i;for(;r;){const o=r.prevDep;r.version===-1?(r===i&&(i=o),Vn(r),Qt(r)):n=r,r.dep.activeLink=r.prevActiveLink,r.prevActiveLink=void 0,r=o}e.deps=n,e.depsTail=i}function Rn(e){for(let n=e.deps;n;n=n.nextDep)if(n.dep.version!==n.version||n.dep.computed&&(Vi(n.dep.computed)||n.dep.version!==n.version))return!0;return!!e._dirty}function Vi(e){if(e.flags&4&&!(e.flags&16)||(e.flags&=-17,e.globalVersion===Ha))return;e.globalVersion=Ha;const n=e.dep;if(e.flags|=2,n.version>0&&!e.isSSR&&e.deps&&!Rn(e)){e.flags&=-3;return}const i=ee,r=we;ee=e,we=!0;try{zi(e);const o=e.fn(e._value);(n.version===0||ca(o,e._value))&&(e._value=o,n.version++)}catch(o){throw n.version++,o}finally{ee=i,we=r,Ji(e),e.flags&=-3}}function Vn(e,n=!1){const{dep:i,prevSub:r,nextSub:o}=e;if(r&&(r.nextSub=o,e.prevSub=void 0),o&&(o.prevSub=r,e.nextSub=void 0),i.subs===e&&(i.subs=r,!r&&i.computed)){i.computed.flags&=-5;for(let s=i.computed.deps;s;s=s.nextDep)Vn(s,!0)}!n&&!--i.sc&&i.map&&i.map.delete(i.key)}function Qt(e){const{prevDep:n,nextDep:i}=e;n&&(n.nextDep=i,e.prevDep=void 0),i&&(i.prevDep=n,e.nextDep=void 0)}let we=!0;const Yi=[];function na(){Yi.push(we),we=!1}function ia(){const e=Yi.pop();we=e===void 0?!0:e}function oi(e){const{cleanup:n}=e;if(e.cleanup=void 0,n){const i=ee;ee=void 0;try{n()}finally{ee=i}}}let Ha=0;class $t{constructor(n,i){this.sub=n,this.dep=i,this.version=i.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class ji{constructor(n){this.computed=n,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(n){if(!ee||!we||ee===this.computed)return;let i=this.activeLink;if(i===void 0||i.sub!==ee)i=this.activeLink=new $t(ee,this),ee.deps?(i.prevDep=ee.depsTail,ee.depsTail.nextDep=i,ee.depsTail=i):ee.deps=ee.depsTail=i,Zi(i);else if(i.version===-1&&(i.version=this.version,i.nextDep)){const r=i.nextDep;r.prevDep=i.prevDep,i.prevDep&&(i.prevDep.nextDep=r),i.prevDep=ee.depsTail,i.nextDep=void 0,ee.depsTail.nextDep=i,ee.depsTail=i,ee.deps===i&&(ee.deps=r)}return i}trigger(n){this.version++,Ha++,this.notify(n)}notify(n){zn();try{for(let i=this.subs;i;i=i.prevSub)i.sub.notify()&&i.sub.dep.notify()}finally{Jn()}}}function Zi(e){if(e.dep.sc++,e.sub.flags&4){const n=e.dep.computed;if(n&&!e.dep.subs){n.flags|=20;for(let r=n.deps;r;r=r.nextDep)Zi(r)}const i=e.dep.subs;i!==e&&(e.prevSub=i,i&&(i.nextSub=e)),e.dep.subs=e}}const Nn=new WeakMap,da=Symbol(""),Pn=Symbol(""),Da=Symbol("");function he(e,n,i){if(we&&ee){let r=Nn.get(e);r||Nn.set(e,r=new Map);let o=r.get(i);o||(r.set(i,o=new ji),o.map=r,o.key=i),o.track()}}function Ye(e,n,i,r,o,s){const d=Nn.get(e);if(!d){Ha++;return}const m=p=>{p&&p.trigger()};if(zn(),n==="clear")d.forEach(m);else{const p=U(e),S=p&&qn(i);if(p&&i==="length"){const c=Number(r);d.forEach((b,H)=>{(H==="length"||H===Da||!aa(H)&&H>=c)&&m(b)})}else switch((i!==void 0||d.has(void 0))&&m(d.get(i)),S&&m(d.get(Da)),n){case"add":p?S&&m(d.get("length")):(m(d.get(da)),ba(e)&&m(d.get(Pn)));break;case"delete":p||(m(d.get(da)),ba(e)&&m(d.get(Pn)));break;case"set":ba(e)&&m(d.get(da));break}}Jn()}function pa(e){const n=Z(e);return n===e?n:(he(n,"iterate",Da),Ee(e)?n:n.map(Ae))}function on(e){return he(e=Z(e),"iterate",Da),e}const er={__proto__:null,[Symbol.iterator](){return xn(this,Symbol.iterator,Ae)},concat(...e){return pa(this).concat(...e.map(n=>U(n)?pa(n):n))},entries(){return xn(this,"entries",e=>(e[1]=Ae(e[1]),e))},every(e,n){return We(this,"every",e,n,void 0,arguments)},filter(e,n){return We(this,"filter",e,n,i=>i.map(Ae),arguments)},find(e,n){return We(this,"find",e,n,Ae,arguments)},findIndex(e,n){return We(this,"findIndex",e,n,void 0,arguments)},findLast(e,n){return We(this,"findLast",e,n,Ae,arguments)},findLastIndex(e,n){return We(this,"findLastIndex",e,n,void 0,arguments)},forEach(e,n){return We(this,"forEach",e,n,void 0,arguments)},includes(...e){return bn(this,"includes",e)},indexOf(...e){return bn(this,"indexOf",e)},join(e){return pa(this).join(e)},lastIndexOf(...e){return bn(this,"lastIndexOf",e)},map(e,n){return We(this,"map",e,n,void 0,arguments)},pop(){return Ia(this,"pop")},push(...e){return Ia(this,"push",e)},reduce(e,...n){return li(this,"reduce",e,n)},reduceRight(e,...n){return li(this,"reduceRight",e,n)},shift(){return Ia(this,"shift")},some(e,n){return We(this,"some",e,n,void 0,arguments)},splice(...e){return Ia(this,"splice",e)},toReversed(){return pa(this).toReversed()},toSorted(e){return pa(this).toSorted(e)},toSpliced(...e){return pa(this).toSpliced(...e)},unshift(...e){return Ia(this,"unshift",e)},values(){return xn(this,"values",Ae)}};function xn(e,n,i){const r=on(e),o=r[n]();return r!==e&&!Ee(e)&&(o._next=o.next,o.next=()=>{const s=o._next();return s.value&&(s.value=i(s.value)),s}),o}const ar=Array.prototype;function We(e,n,i,r,o,s){const d=on(e),m=d!==e&&!Ee(e),p=d[n];if(p!==ar[n]){const b=p.apply(e,s);return m?Ae(b):b}let S=i;d!==e&&(m?S=function(b,H){return i.call(this,Ae(b),H,e)}:i.length>2&&(S=function(b,H){return i.call(this,b,H,e)}));const c=p.call(d,S,r);return m&&o?o(c):c}function li(e,n,i,r){const o=on(e);let s=i;return o!==e&&(Ee(e)?i.length>3&&(s=function(d,m,p){return i.call(this,d,m,p,e)}):s=function(d,m,p){return i.call(this,d,Ae(m),p,e)}),o[n](s,...r)}function bn(e,n,i){const r=Z(e);he(r,"iterate",Da);const o=r[n](...i);return(o===-1||o===!1)&&Xn(i[0])?(i[0]=Z(i[0]),r[n](...i)):o}function Ia(e,n,i=[]){na(),zn();const r=Z(e)[n].apply(e,i);return Jn(),ia(),r}const nr=Un("__proto__,__v_isRef,__isVue"),Xi=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(aa));function ir(e){aa(e)||(e=String(e));const n=Z(this);return he(n,"has",e),n.hasOwnProperty(e)}class Qi{constructor(n=!1,i=!1){this._isReadonly=n,this._isShallow=i}get(n,i,r){const o=this._isReadonly,s=this._isShallow;if(i==="__v_isReactive")return!o;if(i==="__v_isReadonly")return o;if(i==="__v_isShallow")return s;if(i==="__v_raw")return r===(o?s?ur:nt:s?at:et).get(n)||Object.getPrototypeOf(n)===Object.getPrototypeOf(r)?n:void 0;const d=U(n);if(!o){let p;if(d&&(p=er[i]))return p;if(i==="hasOwnProperty")return ir}const m=Reflect.get(n,i,Ce(n)?n:r);return(aa(i)?Xi.has(i):nr(i))||(o||he(n,"get",i),s)?m:Ce(m)?d&&qn(i)?m:m.value:ne(m)?o?it(m):jn(m):m}}class $i extends Qi{constructor(n=!1){super(!1,n)}set(n,i,r,o){let s=n[i];if(!this._isShallow){const p=ya(s);if(!Ee(r)&&!ya(r)&&(s=Z(s),r=Z(r)),!U(n)&&Ce(s)&&!Ce(r))return p?!1:(s.value=r,!0)}const d=U(n)&&qn(i)?Number(i)<n.length:V(n,i),m=Reflect.set(n,i,r,Ce(n)?n:o);return n===Z(o)&&(d?ca(r,s)&&Ye(n,"set",i,r):Ye(n,"add",i,r)),m}deleteProperty(n,i){const r=V(n,i);n[i];const o=Reflect.deleteProperty(n,i);return o&&r&&Ye(n,"delete",i,void 0),o}has(n,i){const r=Reflect.has(n,i);return(!aa(i)||!Xi.has(i))&&he(n,"has",i),r}ownKeys(n){return he(n,"iterate",U(n)?"length":da),Reflect.ownKeys(n)}}class tr extends Qi{constructor(n=!1){super(!0,n)}set(n,i){return!0}deleteProperty(n,i){return!0}}const rr=new $i,or=new tr,lr=new $i(!0);const Bn=e=>e,Ka=e=>Reflect.getPrototypeOf(e);function sr(e,n,i){return function(...r){const o=this.__v_raw,s=Z(o),d=ba(s),m=e==="entries"||e===Symbol.iterator&&d,p=e==="keys"&&d,S=o[e](...r),c=i?Bn:n?wn:Ae;return!n&&he(s,"iterate",p?Pn:da),{next(){const{value:b,done:H}=S.next();return H?{value:b,done:H}:{value:m?[c(b[0]),c(b[1])]:c(b),done:H}},[Symbol.iterator](){return this}}}}function qa(e){return function(...n){return e==="delete"?!1:e==="clear"?void 0:this}}function cr(e,n){const i={get(o){const s=this.__v_raw,d=Z(s),m=Z(o);e||(ca(o,m)&&he(d,"get",o),he(d,"get",m));const{has:p}=Ka(d),S=n?Bn:e?wn:Ae;if(p.call(d,o))return S(s.get(o));if(p.call(d,m))return S(s.get(m));s!==d&&s.get(o)},get size(){const o=this.__v_raw;return!e&&he(Z(o),"iterate",da),Reflect.get(o,"size",o)},has(o){const s=this.__v_raw,d=Z(s),m=Z(o);return e||(ca(o,m)&&he(d,"has",o),he(d,"has",m)),o===m?s.has(o):s.has(o)||s.has(m)},forEach(o,s){const d=this,m=d.__v_raw,p=Z(m),S=n?Bn:e?wn:Ae;return!e&&he(p,"iterate",da),m.forEach((c,b)=>o.call(s,S(c),S(b),d))}};return me(i,e?{add:qa("add"),set:qa("set"),delete:qa("delete"),clear:qa("clear")}:{add(o){!n&&!Ee(o)&&!ya(o)&&(o=Z(o));const s=Z(this);return Ka(s).has.call(s,o)||(s.add(o),Ye(s,"add",o,o)),this},set(o,s){!n&&!Ee(s)&&!ya(s)&&(s=Z(s));const d=Z(this),{has:m,get:p}=Ka(d);let S=m.call(d,o);S||(o=Z(o),S=m.call(d,o));const c=p.call(d,o);return d.set(o,s),S?ca(s,c)&&Ye(d,"set",o,s):Ye(d,"add",o,s),this},delete(o){const s=Z(this),{has:d,get:m}=Ka(s);let p=d.call(s,o);p||(o=Z(o),p=d.call(s,o)),m&&m.call(s,o);const S=s.delete(o);return p&&Ye(s,"delete",o,void 0),S},clear(){const o=Z(this),s=o.size!==0,d=o.clear();return s&&Ye(o,"clear",void 0,void 0),d}}),["keys","values","entries",Symbol.iterator].forEach(o=>{i[o]=sr(o,e,n)}),i}function Yn(e,n){const i=cr(e,n);return(r,o,s)=>o==="__v_isReactive"?!e:o==="__v_isReadonly"?e:o==="__v_raw"?r:Reflect.get(V(i,o)&&o in r?i:r,o,s)}const dr={get:Yn(!1,!1)},fr={get:Yn(!1,!0)},mr={get:Yn(!0,!1)};const et=new WeakMap,at=new WeakMap,nt=new WeakMap,ur=new WeakMap;function pr(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function hr(e){return e.__v_skip||!Object.isExtensible(e)?0:pr(Ut(e))}function jn(e){return ya(e)?e:Zn(e,!1,rr,dr,et)}function xr(e){return Zn(e,!1,lr,fr,at)}function it(e){return Zn(e,!0,or,mr,nt)}function Zn(e,n,i,r,o){if(!ne(e)||e.__v_raw&&!(n&&e.__v_isReactive))return e;const s=o.get(e);if(s)return s;const d=hr(e);if(d===0)return e;const m=new Proxy(e,d===2?r:i);return o.set(e,m),m}function ga(e){return ya(e)?ga(e.__v_raw):!!(e&&e.__v_isReactive)}function ya(e){return!!(e&&e.__v_isReadonly)}function Ee(e){return!!(e&&e.__v_isShallow)}function Xn(e){return e?!!e.__v_raw:!1}function Z(e){const n=e&&e.__v_raw;return n?Z(n):e}function br(e){return!V(e,"__v_skip")&&Object.isExtensible(e)&&Oi(e,"__v_skip",!0),e}const Ae=e=>ne(e)?jn(e):e,wn=e=>ne(e)?it(e):e;function Ce(e){return e?e.__v_isRef===!0:!1}function gr(e){return Ce(e)?e.value:e}const Cr={get:(e,n,i)=>n==="__v_raw"?e:gr(Reflect.get(e,n,i)),set:(e,n,i,r)=>{const o=e[n];return Ce(o)&&!Ce(i)?(o.value=i,!0):Reflect.set(e,n,i,r)}};function tt(e){return ga(e)?e:new Proxy(e,Cr)}class Ar{constructor(n,i,r){this.fn=n,this.setter=i,this._value=void 0,this.dep=new ji(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Ha-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!i,this.isSSR=r}notify(){if(this.flags|=16,!(this.flags&8)&&ee!==this)return Wi(this,!0),!0}get value(){const n=this.dep.track();return Vi(this),n&&(n.version=this.dep.version),this._value}set value(n){this.setter&&this.setter(n)}}function yr(e,n,i=!1){let r,o;return _(e)?r=e:(r=e.get,o=e.set),new Ar(r,o,i)}const Wa={},ja=new WeakMap;let sa;function Sr(e,n=!1,i=sa){if(i){let r=ja.get(i);r||ja.set(i,r=[]),r.push(e)}}function Tr(e,n,i=Q){const{immediate:r,deep:o,once:s,scheduler:d,augmentJob:m,call:p}=i,S=D=>o?D:Ee(D)||o===!1||o===0?je(D,1):je(D);let c,b,H,M,K=!1,q=!1;if(Ce(e)?(b=()=>e.value,K=Ee(e)):ga(e)?(b=()=>S(e),K=!0):U(e)?(q=!0,K=e.some(D=>ga(D)||Ee(D)),b=()=>e.map(D=>{if(Ce(D))return D.value;if(ga(D))return S(D);if(_(D))return p?p(D,2):D()})):_(e)?n?b=p?()=>p(e,2):e:b=()=>{if(H){na();try{H()}finally{ia()}}const D=sa;sa=c;try{return p?p(e,3,[M]):e(M)}finally{sa=D}}:b=Fe,n&&o){const D=b,ie=o===!0?1/0:o;b=()=>je(D(),ie)}const oe=Xt(),J=()=>{c.stop(),oe&&Kn(oe.effects,c)};if(s&&n){const D=n;n=(...ie)=>{D(...ie),J()}}let ae=q?new Array(e.length).fill(Wa):Wa;const z=D=>{if(!(!(c.flags&1)||!c.dirty&&!D))if(n){const ie=c.run();if(o||K||(q?ie.some((Le,Ne)=>ca(Le,ae[Ne])):ca(ie,ae))){H&&H();const Le=sa;sa=c;try{const Ne=[ie,ae===Wa?void 0:q&&ae[0]===Wa?[]:ae,M];p?p(n,3,Ne):n(...Ne),ae=ie}finally{sa=Le}}}else c.run()};return m&&m(z),c=new Ki(b),c.scheduler=d?()=>d(z,!1):z,M=D=>Sr(D,!1,c),H=c.onStop=()=>{const D=ja.get(c);if(D){if(p)p(D,4);else for(const ie of D)ie();ja.delete(c)}},n?r?z(!0):ae=c.run():d?d(z.bind(null,!0),!0):c.run(),J.pause=c.pause.bind(c),J.resume=c.resume.bind(c),J.stop=J,J}function je(e,n=1/0,i){if(n<=0||!ne(e)||e.__v_skip||(i=i||new Set,i.has(e)))return e;if(i.add(e),n--,Ce(e))je(e.value,n,i);else if(U(e))for(let r=0;r<e.length;r++)je(e[r],n,i);else if(Li(e)||ba(e))e.forEach(r=>{je(r,n,i)});else if(Di(e)){for(const r in e)je(e[r],n,i);for(const r of Object.getOwnPropertySymbols(e))Object.prototype.propertyIsEnumerable.call(e,r)&&je(e[r],n,i)}return e}/**
* @vue/runtime-core v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Ua(e,n,i,r){try{return r?e(...r):e()}catch(o){ln(o,n,i)}}function _e(e,n,i,r){if(_(e)){const o=Ua(e,n,i,r);return o&&Gi(o)&&o.catch(s=>{ln(s,n,i)}),o}if(U(e)){const o=[];for(let s=0;s<e.length;s++)o.push(_e(e[s],n,i,r));return o}}function ln(e,n,i,r=!0){const o=n?n.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:d}=n&&n.appContext.config||Q;if(n){let m=n.parent;const p=n.proxy,S=`https://vuejs.org/error-reference/#runtime-${i}`;for(;m;){const c=m.ec;if(c){for(let b=0;b<c.length;b++)if(c[b](e,p,S)===!1)return}m=m.parent}if(s){na(),Ua(s,null,10,[e,p,S]),ia();return}}Ir(e,i,o,r,d)}function Ir(e,n,i,r=!0,o=!1){if(o)throw e;console.error(e)}const be=[];let ke=-1;const Ca=[];let Qe=null,ha=0;const rt=Promise.resolve();let Za=null;function Mr(e){const n=Za||rt;return e?n.then(this?e.bind(this):e):n}function vr(e){let n=ke+1,i=be.length;for(;n<i;){const r=n+i>>>1,o=be[r],s=ka(o);s<e||s===e&&o.flags&2?n=r+1:i=r}return n}function Qn(e){if(!(e.flags&1)){const n=ka(e),i=be[be.length-1];!i||!(e.flags&2)&&n>=ka(i)?be.push(e):be.splice(vr(n),0,e),e.flags|=1,ot()}}function ot(){Za||(Za=rt.then(st))}function Rr(e){U(e)?Ca.push(...e):Qe&&e.id===-1?Qe.splice(ha+1,0,e):e.flags&1||(Ca.push(e),e.flags|=1),ot()}function si(e,n,i=ke+1){for(;i<be.length;i++){const r=be[i];if(r&&r.flags&2){if(e&&r.id!==e.uid)continue;be.splice(i,1),i--,r.flags&4&&(r.flags&=-2),r(),r.flags&4||(r.flags&=-2)}}}function lt(e){if(Ca.length){const n=[...new Set(Ca)].sort((i,r)=>ka(i)-ka(r));if(Ca.length=0,Qe){Qe.push(...n);return}for(Qe=n,ha=0;ha<Qe.length;ha++){const i=Qe[ha];i.flags&4&&(i.flags&=-2),i.flags&8||i(),i.flags&=-2}Qe=null,ha=0}}const ka=e=>e.id==null?e.flags&2?-1:1/0:e.id;function st(e){try{for(ke=0;ke<be.length;ke++){const n=be[ke];n&&!(n.flags&8)&&(n.flags&4&&(n.flags&=-2),Ua(n,n.i,n.i?15:14),n.flags&4||(n.flags&=-2))}}finally{for(;ke<be.length;ke++){const n=be[ke];n&&(n.flags&=-2)}ke=-1,be.length=0,lt(),Za=null,(be.length||Ca.length)&&st()}}let Pe=null,ct=null;function Xa(e){const n=Pe;return Pe=e,ct=e&&e.type.__scopeId||null,n}function Nr(e,n=Pe,i){if(!n||e._n)return e;const r=(...o)=>{r._d&&bi(-1);const s=Xa(n);let d;try{d=e(...o)}finally{Xa(s),r._d&&bi(1)}return d};return r._n=!0,r._c=!0,r._d=!0,r}function Pr(e,n){if(Pe===null)return e;const i=fn(Pe),r=e.dirs||(e.dirs=[]);for(let o=0;o<n.length;o++){let[s,d,m,p=Q]=n[o];s&&(_(s)&&(s={mounted:s,updated:s}),s.deep&&je(d),r.push({dir:s,instance:i,value:d,oldValue:void 0,arg:m,modifiers:p}))}return e}function oa(e,n,i,r){const o=e.dirs,s=n&&n.dirs;for(let d=0;d<o.length;d++){const m=o[d];s&&(m.oldValue=s[d].value);let p=m.dir[r];p&&(na(),_e(p,i,8,[e.el,m,e,n]),ia())}}const Br=Symbol("_vte"),wr=e=>e.__isTeleport;function $n(e,n){e.shapeFlag&6&&e.component?(e.transition=n,$n(e.component.subTree,n)):e.shapeFlag&128?(e.ssContent.transition=n.clone(e.ssContent),e.ssFallback.transition=n.clone(e.ssFallback)):e.transition=n}function dt(e){e.ids=[e.ids[0]+e.ids[2]+++"-",0,0]}function En(e,n,i,r,o=!1){if(U(e)){e.forEach((K,q)=>En(K,n&&(U(n)?n[q]:n),i,r,o));return}if(wa(r)&&!o)return;const s=r.shapeFlag&4?fn(r.component):r.el,d=o?null:s,{i:m,r:p}=e,S=n&&n.r,c=m.refs===Q?m.refs={}:m.refs,b=m.setupState,H=Z(b),M=b===Q?()=>!1:K=>V(H,K);if(S!=null&&S!==p&&(re(S)?(c[S]=null,M(S)&&(b[S]=null)):Ce(S)&&(S.value=null)),_(p))Ua(p,m,12,[d,c]);else{const K=re(p),q=Ce(p);if(K||q){const oe=()=>{if(e.f){const J=K?M(p)?b[p]:c[p]:p.value;o?U(J)&&Kn(J,s):U(J)?J.includes(s)||J.push(s):K?(c[p]=[s],M(p)&&(b[p]=c[p])):(p.value=[s],e.k&&(c[e.k]=p.value))}else K?(c[p]=d,M(p)&&(b[p]=d)):q&&(p.value=d,e.k&&(c[e.k]=d))};d?(oe.id=-1,Ie(oe,i)):oe()}}}rn().requestIdleCallback;rn().cancelIdleCallback;const wa=e=>!!e.type.__asyncLoader,ft=e=>e.type.__isKeepAlive;function Er(e,n){mt(e,"a",n)}function Lr(e,n){mt(e,"da",n)}function mt(e,n,i=ge){const r=e.__wdc||(e.__wdc=()=>{let o=i;for(;o;){if(o.isDeactivated)return;o=o.parent}return e()});if(sn(n,r,i),i){let o=i.parent;for(;o&&o.parent;)ft(o.parent.vnode)&&Gr(r,n,i,o),o=o.parent}}function Gr(e,n,i,r){const o=sn(n,e,r,!0);ut(()=>{Kn(r[n],o)},i)}function sn(e,n,i=ge,r=!1){if(i){const o=i[e]||(i[e]=[]),s=n.__weh||(n.__weh=(...d)=>{na();const m=_a(i),p=_e(n,i,e,d);return m(),ia(),p});return r?o.unshift(s):o.push(s),s}}const Ze=e=>(n,i=ge)=>{(!Fa||e==="sp")&&sn(e,(...r)=>n(...r),i)},Hr=Ze("bm"),Dr=Ze("m"),kr=Ze("bu"),Or=Ze("u"),Fr=Ze("bum"),ut=Ze("um"),Ur=Ze("sp"),_r=Ze("rtg"),Kr=Ze("rtc");function qr(e,n=ge){sn("ec",e,n)}const Wr=Symbol.for("v-ndc");function ci(e,n,i,r){let o;const s=i,d=U(e);if(d||re(e)){const m=d&&ga(e);let p=!1;m&&(p=!Ee(e),e=on(e)),o=new Array(e.length);for(let S=0,c=e.length;S<c;S++)o[S]=n(p?Ae(e[S]):e[S],S,void 0,s)}else if(typeof e=="number"){o=new Array(e);for(let m=0;m<e;m++)o[m]=n(m+1,m,void 0,s)}else if(ne(e))if(e[Symbol.iterator])o=Array.from(e,(m,p)=>n(m,p,void 0,s));else{const m=Object.keys(e);o=new Array(m.length);for(let p=0,S=m.length;p<S;p++){const c=m[p];o[p]=n(e[c],c,p,s)}}else o=[];return o}const Ln=e=>e?Gt(e)?fn(e):Ln(e.parent):null,Ea=me(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ln(e.parent),$root:e=>Ln(e.root),$host:e=>e.ce,$emit:e=>e.emit,$options:e=>ei(e),$forceUpdate:e=>e.f||(e.f=()=>{Qn(e.update)}),$nextTick:e=>e.n||(e.n=Mr.bind(e.proxy)),$watch:e=>uo.bind(e)}),gn=(e,n)=>e!==Q&&!e.__isScriptSetup&&V(e,n),zr={get({_:e},n){if(n==="__v_skip")return!0;const{ctx:i,setupState:r,data:o,props:s,accessCache:d,type:m,appContext:p}=e;let S;if(n[0]!=="$"){const M=d[n];if(M!==void 0)switch(M){case 1:return r[n];case 2:return o[n];case 4:return i[n];case 3:return s[n]}else{if(gn(r,n))return d[n]=1,r[n];if(o!==Q&&V(o,n))return d[n]=2,o[n];if((S=e.propsOptions[0])&&V(S,n))return d[n]=3,s[n];if(i!==Q&&V(i,n))return d[n]=4,i[n];Gn&&(d[n]=0)}}const c=Ea[n];let b,H;if(c)return n==="$attrs"&&he(e.attrs,"get",""),c(e);if((b=m.__cssModules)&&(b=b[n]))return b;if(i!==Q&&V(i,n))return d[n]=4,i[n];if(H=p.config.globalProperties,V(H,n))return H[n]},set({_:e},n,i){const{data:r,setupState:o,ctx:s}=e;return gn(o,n)?(o[n]=i,!0):r!==Q&&V(r,n)?(r[n]=i,!0):V(e.props,n)||n[0]==="$"&&n.slice(1)in e?!1:(s[n]=i,!0)},has({_:{data:e,setupState:n,accessCache:i,ctx:r,appContext:o,propsOptions:s}},d){let m;return!!i[d]||e!==Q&&V(e,d)||gn(n,d)||(m=s[0])&&V(m,d)||V(r,d)||V(Ea,d)||V(o.config.globalProperties,d)},defineProperty(e,n,i){return i.get!=null?e._.accessCache[n]=0:V(i,"value")&&this.set(e,n,i.value,null),Reflect.defineProperty(e,n,i)}};function di(e){return U(e)?e.reduce((n,i)=>(n[i]=null,n),{}):e}let Gn=!0;function Jr(e){const n=ei(e),i=e.proxy,r=e.ctx;Gn=!1,n.beforeCreate&&fi(n.beforeCreate,e,"bc");const{data:o,computed:s,methods:d,watch:m,provide:p,inject:S,created:c,beforeMount:b,mounted:H,beforeUpdate:M,updated:K,activated:q,deactivated:oe,beforeDestroy:J,beforeUnmount:ae,destroyed:z,unmounted:D,render:ie,renderTracked:Le,renderTriggered:Ne,errorCaptured:Ge,serverPrefetch:ta,expose:se,inheritAttrs:X,components:a,directives:t,filters:l}=n;if(S&&Vr(S,r,null),d)for(const C in d){const v=d[C];_(v)&&(r[C]=v.bind(i))}if(o){const C=o.call(i,i);ne(C)&&(e.data=jn(C))}if(Gn=!0,s)for(const C in s){const v=s[C],g=_(v)?v.bind(i,i):_(v.get)?v.get.bind(i,i):Fe,I=!_(v)&&_(v.set)?v.set.bind(i):Fe,T=Go({get:g,set:I});Object.defineProperty(r,C,{enumerable:!0,configurable:!0,get:()=>T.value,set:A=>T.value=A})}if(m)for(const C in m)pt(m[C],r,i,C);if(p){const C=_(p)?p.call(i):p;Reflect.ownKeys(C).forEach(v=>{$r(v,C[v])})}c&&fi(c,e,"c");function x(C,v){U(v)?v.forEach(g=>C(g.bind(i))):v&&C(v.bind(i))}if(x(Hr,b),x(Dr,H),x(kr,M),x(Or,K),x(Er,q),x(Lr,oe),x(qr,Ge),x(Kr,Le),x(_r,Ne),x(Fr,ae),x(ut,D),x(Ur,ta),U(se))if(se.length){const C=e.exposed||(e.exposed={});se.forEach(v=>{Object.defineProperty(C,v,{get:()=>i[v],set:g=>i[v]=g})})}else e.exposed||(e.exposed={});ie&&e.render===Fe&&(e.render=ie),X!=null&&(e.inheritAttrs=X),a&&(e.components=a),t&&(e.directives=t),ta&&dt(e)}function Vr(e,n,i=Fe){U(e)&&(e=Hn(e));for(const r in e){const o=e[r];let s;ne(o)?"default"in o?s=za(o.from||r,o.default,!0):s=za(o.from||r):s=za(o),Ce(s)?Object.defineProperty(n,r,{enumerable:!0,configurable:!0,get:()=>s.value,set:d=>s.value=d}):n[r]=s}}function fi(e,n,i){_e(U(e)?e.map(r=>r.bind(n.proxy)):e.bind(n.proxy),n,i)}function pt(e,n,i,r){let o=r.includes(".")?Nt(i,r):()=>i[r];if(re(e)){const s=n[e];_(s)&&An(o,s)}else if(_(e))An(o,e.bind(i));else if(ne(e))if(U(e))e.forEach(s=>pt(s,n,i,r));else{const s=_(e.handler)?e.handler.bind(i):n[e.handler];_(s)&&An(o,s,e)}}function ei(e){const n=e.type,{mixins:i,extends:r}=n,{mixins:o,optionsCache:s,config:{optionMergeStrategies:d}}=e.appContext,m=s.get(n);let p;return m?p=m:!o.length&&!i&&!r?p=n:(p={},o.length&&o.forEach(S=>Qa(p,S,d,!0)),Qa(p,n,d)),ne(n)&&s.set(n,p),p}function Qa(e,n,i,r=!1){const{mixins:o,extends:s}=n;s&&Qa(e,s,i,!0),o&&o.forEach(d=>Qa(e,d,i,!0));for(const d in n)if(!(r&&d==="expose")){const m=Yr[d]||i&&i[d];e[d]=m?m(e[d],n[d]):n[d]}return e}const Yr={data:mi,props:ui,emits:ui,methods:Ra,computed:Ra,beforeCreate:xe,created:xe,beforeMount:xe,mounted:xe,beforeUpdate:xe,updated:xe,beforeDestroy:xe,beforeUnmount:xe,destroyed:xe,unmounted:xe,activated:xe,deactivated:xe,errorCaptured:xe,serverPrefetch:xe,components:Ra,directives:Ra,watch:Zr,provide:mi,inject:jr};function mi(e,n){return n?e?function(){return me(_(e)?e.call(this,this):e,_(n)?n.call(this,this):n)}:n:e}function jr(e,n){return Ra(Hn(e),Hn(n))}function Hn(e){if(U(e)){const n={};for(let i=0;i<e.length;i++)n[e[i]]=e[i];return n}return e}function xe(e,n){return e?[...new Set([].concat(e,n))]:n}function Ra(e,n){return e?me(Object.create(null),e,n):n}function ui(e,n){return e?U(e)&&U(n)?[...new Set([...e,...n])]:me(Object.create(null),di(e),di(n??{})):n}function Zr(e,n){if(!e)return n;if(!n)return e;const i=me(Object.create(null),e);for(const r in n)i[r]=xe(e[r],n[r]);return i}function ht(){return{app:null,config:{isNativeTag:Ot,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Xr=0;function Qr(e,n){return function(r,o=null){_(r)||(r=me({},r)),o!=null&&!ne(o)&&(o=null);const s=ht(),d=new WeakSet,m=[];let p=!1;const S=s.app={_uid:Xr++,_component:r,_props:o,_container:null,_context:s,_instance:null,version:Ho,get config(){return s.config},set config(c){},use(c,...b){return d.has(c)||(c&&_(c.install)?(d.add(c),c.install(S,...b)):_(c)&&(d.add(c),c(S,...b))),S},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),S},component(c,b){return b?(s.components[c]=b,S):s.components[c]},directive(c,b){return b?(s.directives[c]=b,S):s.directives[c]},mount(c,b,H){if(!p){const M=S._ceVNode||Ue(r,o);return M.appContext=s,H===!0?H="svg":H===!1&&(H=void 0),b&&n?n(M,c):e(M,c,H),p=!0,S._container=c,c.__vue_app__=S,fn(M.component)}},onUnmount(c){m.push(c)},unmount(){p&&(_e(m,S._instance,16),e(null,S._container),delete S._container.__vue_app__)},provide(c,b){return s.provides[c]=b,S},runWithContext(c){const b=Aa;Aa=S;try{return c()}finally{Aa=b}}};return S}}let Aa=null;function $r(e,n){if(ge){let i=ge.provides;const r=ge.parent&&ge.parent.provides;r===i&&(i=ge.provides=Object.create(r)),i[e]=n}}function za(e,n,i=!1){const r=ge||Pe;if(r||Aa){const o=Aa?Aa._context.provides:r?r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides:void 0;if(o&&e in o)return o[e];if(arguments.length>1)return i&&_(n)?n.call(r&&r.proxy):n}}const xt={},bt=()=>Object.create(xt),gt=e=>Object.getPrototypeOf(e)===xt;function eo(e,n,i,r=!1){const o={},s=bt();e.propsDefaults=Object.create(null),Ct(e,n,o,s);for(const d in e.propsOptions[0])d in o||(o[d]=void 0);i?e.props=r?o:xr(o):e.type.props?e.props=o:e.props=s,e.attrs=s}function ao(e,n,i,r){const{props:o,attrs:s,vnode:{patchFlag:d}}=e,m=Z(o),[p]=e.propsOptions;let S=!1;if((r||d>0)&&!(d&16)){if(d&8){const c=e.vnode.dynamicProps;for(let b=0;b<c.length;b++){let H=c[b];if(cn(e.emitsOptions,H))continue;const M=n[H];if(p)if(V(s,H))M!==s[H]&&(s[H]=M,S=!0);else{const K=ea(H);o[K]=Dn(p,m,K,M,e,!1)}else M!==s[H]&&(s[H]=M,S=!0)}}}else{Ct(e,n,o,s)&&(S=!0);let c;for(const b in m)(!n||!V(n,b)&&((c=ma(b))===b||!V(n,c)))&&(p?i&&(i[b]!==void 0||i[c]!==void 0)&&(o[b]=Dn(p,m,b,void 0,e,!0)):delete o[b]);if(s!==m)for(const b in s)(!n||!V(n,b))&&(delete s[b],S=!0)}S&&Ye(e.attrs,"set","")}function Ct(e,n,i,r){const[o,s]=e.propsOptions;let d=!1,m;if(n)for(let p in n){if(Na(p))continue;const S=n[p];let c;o&&V(o,c=ea(p))?!s||!s.includes(c)?i[c]=S:(m||(m={}))[c]=S:cn(e.emitsOptions,p)||(!(p in r)||S!==r[p])&&(r[p]=S,d=!0)}if(s){const p=Z(i),S=m||Q;for(let c=0;c<s.length;c++){const b=s[c];i[b]=Dn(o,p,b,S[b],e,!V(S,b))}}return d}function Dn(e,n,i,r,o,s){const d=e[i];if(d!=null){const m=V(d,"default");if(m&&r===void 0){const p=d.default;if(d.type!==Function&&!d.skipFactory&&_(p)){const{propsDefaults:S}=o;if(i in S)r=S[i];else{const c=_a(o);r=S[i]=p.call(null,n),c()}}else r=p;o.ce&&o.ce._setProp(i,r)}d[0]&&(s&&!m?r=!1:d[1]&&(r===""||r===ma(i))&&(r=!0))}return r}const no=new WeakMap;function At(e,n,i=!1){const r=i?no:n.propsCache,o=r.get(e);if(o)return o;const s=e.props,d={},m=[];let p=!1;if(!_(e)){const c=b=>{p=!0;const[H,M]=At(b,n,!0);me(d,H),M&&m.push(...M)};!i&&n.mixins.length&&n.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}if(!s&&!p)return ne(e)&&r.set(e,xa),xa;if(U(s))for(let c=0;c<s.length;c++){const b=ea(s[c]);pi(b)&&(d[b]=Q)}else if(s)for(const c in s){const b=ea(c);if(pi(b)){const H=s[c],M=d[b]=U(H)||_(H)?{type:H}:me({},H),K=M.type;let q=!1,oe=!0;if(U(K))for(let J=0;J<K.length;++J){const ae=K[J],z=_(ae)&&ae.name;if(z==="Boolean"){q=!0;break}else z==="String"&&(oe=!1)}else q=_(K)&&K.name==="Boolean";M[0]=q,M[1]=oe,(q||V(M,"default"))&&m.push(b)}}const S=[d,m];return ne(e)&&r.set(e,S),S}function pi(e){return e[0]!=="$"&&!Na(e)}const yt=e=>e[0]==="_"||e==="$stable",ai=e=>U(e)?e.map(Oe):[Oe(e)],io=(e,n,i)=>{if(n._n)return n;const r=Nr((...o)=>ai(n(...o)),i);return r._c=!1,r},St=(e,n,i)=>{const r=e._ctx;for(const o in e){if(yt(o))continue;const s=e[o];if(_(s))n[o]=io(o,s,r);else if(s!=null){const d=ai(s);n[o]=()=>d}}},Tt=(e,n)=>{const i=ai(n);e.slots.default=()=>i},It=(e,n,i)=>{for(const r in n)(i||r!=="_")&&(e[r]=n[r])},to=(e,n,i)=>{const r=e.slots=bt();if(e.vnode.shapeFlag&32){const o=n._;o?(It(r,n,i),i&&Oi(r,"_",o,!0)):St(n,r)}else n&&Tt(e,n)},ro=(e,n,i)=>{const{vnode:r,slots:o}=e;let s=!0,d=Q;if(r.shapeFlag&32){const m=n._;m?i&&m===1?s=!1:It(o,n,i):(s=!n.$stable,St(n,o)),d=n}else n&&(Tt(e,n),d={default:1});if(s)for(const m in o)!yt(m)&&d[m]==null&&delete o[m]},Ie=Ao;function oo(e){return lo(e)}function lo(e,n){const i=rn();i.__VUE__=!0;const{insert:r,remove:o,patchProp:s,createElement:d,createText:m,createComment:p,setText:S,setElementText:c,parentNode:b,nextSibling:H,setScopeId:M=Fe,insertStaticContent:K}=e,q=(u,h,y,P=null,R=null,N=null,L=void 0,E=null,w=!!h.dynamicChildren)=>{if(u===h)return;u&&!Ma(u,h)&&(P=ce(u),A(u,R,N,!0),u=null),h.patchFlag===-2&&(w=!1,h.dynamicChildren=null);const{type:B,ref:O,shapeFlag:G}=h;switch(B){case dn:oe(u,h,y,P);break;case fa:J(u,h,y,P);break;case Sn:u==null&&ae(h,y,P,L);break;case ve:a(u,h,y,P,R,N,L,E,w);break;default:G&1?ie(u,h,y,P,R,N,L,E,w):G&6?t(u,h,y,P,R,N,L,E,w):(G&64||G&128)&&B.process(u,h,y,P,R,N,L,E,w,Ke)}O!=null&&R&&En(O,u&&u.ref,N,h||u,!h)},oe=(u,h,y,P)=>{if(u==null)r(h.el=m(h.children),y,P);else{const R=h.el=u.el;h.children!==u.children&&S(R,h.children)}},J=(u,h,y,P)=>{u==null?r(h.el=p(h.children||""),y,P):h.el=u.el},ae=(u,h,y,P)=>{[u.el,u.anchor]=K(u.children,h,y,P,u.el,u.anchor)},z=({el:u,anchor:h},y,P)=>{let R;for(;u&&u!==h;)R=H(u),r(u,y,P),u=R;r(h,y,P)},D=({el:u,anchor:h})=>{let y;for(;u&&u!==h;)y=H(u),o(u),u=y;o(h)},ie=(u,h,y,P,R,N,L,E,w)=>{h.type==="svg"?L="svg":h.type==="math"&&(L="mathml"),u==null?Le(h,y,P,R,N,L,E,w):ta(u,h,R,N,L,E,w)},Le=(u,h,y,P,R,N,L,E)=>{let w,B;const{props:O,shapeFlag:G,transition:k,dirs:F}=u;if(w=u.el=d(u.type,N,O&&O.is,O),G&8?c(w,u.children):G&16&&Ge(u.children,w,null,P,R,Cn(u,N),L,E),F&&oa(u,null,P,"created"),Ne(w,u,u.scopeId,L,P),O){for(const $ in O)$!=="value"&&!Na($)&&s(w,$,null,O[$],N,P);"value"in O&&s(w,"value",null,O.value,N),(B=O.onVnodeBeforeMount)&&De(B,P,u)}F&&oa(u,null,P,"beforeMount");const W=so(R,k);W&&k.beforeEnter(w),r(w,h,y),((B=O&&O.onVnodeMounted)||W||F)&&Ie(()=>{B&&De(B,P,u),W&&k.enter(w),F&&oa(u,null,P,"mounted")},R)},Ne=(u,h,y,P,R)=>{if(y&&M(u,y),P)for(let N=0;N<P.length;N++)M(u,P[N]);if(R){let N=R.subTree;if(h===N||Bt(N.type)&&(N.ssContent===h||N.ssFallback===h)){const L=R.vnode;Ne(u,L,L.scopeId,L.slotScopeIds,R.parent)}}},Ge=(u,h,y,P,R,N,L,E,w=0)=>{for(let B=w;B<u.length;B++){const O=u[B]=E?$e(u[B]):Oe(u[B]);q(null,O,h,y,P,R,N,L,E)}},ta=(u,h,y,P,R,N,L)=>{const E=h.el=u.el;let{patchFlag:w,dynamicChildren:B,dirs:O}=h;w|=u.patchFlag&16;const G=u.props||Q,k=h.props||Q;let F;if(y&&la(y,!1),(F=k.onVnodeBeforeUpdate)&&De(F,y,h,u),O&&oa(h,u,y,"beforeUpdate"),y&&la(y,!0),(G.innerHTML&&k.innerHTML==null||G.textContent&&k.textContent==null)&&c(E,""),B?se(u.dynamicChildren,B,E,y,P,Cn(h,R),N):L||v(u,h,E,null,y,P,Cn(h,R),N,!1),w>0){if(w&16)X(E,G,k,y,R);else if(w&2&&G.class!==k.class&&s(E,"class",null,k.class,R),w&4&&s(E,"style",G.style,k.style,R),w&8){const W=h.dynamicProps;for(let $=0;$<W.length;$++){const Y=W[$],ye=G[Y],pe=k[Y];(pe!==ye||Y==="value")&&s(E,Y,ye,pe,R,y)}}w&1&&u.children!==h.children&&c(E,h.children)}else!L&&B==null&&X(E,G,k,y,R);((F=k.onVnodeUpdated)||O)&&Ie(()=>{F&&De(F,y,h,u),O&&oa(h,u,y,"updated")},P)},se=(u,h,y,P,R,N,L)=>{for(let E=0;E<h.length;E++){const w=u[E],B=h[E],O=w.el&&(w.type===ve||!Ma(w,B)||w.shapeFlag&70)?b(w.el):y;q(w,B,O,null,P,R,N,L,!0)}},X=(u,h,y,P,R)=>{if(h!==y){if(h!==Q)for(const N in h)!Na(N)&&!(N in y)&&s(u,N,h[N],null,R,P);for(const N in y){if(Na(N))continue;const L=y[N],E=h[N];L!==E&&N!=="value"&&s(u,N,E,L,R,P)}"value"in y&&s(u,"value",h.value,y.value,R)}},a=(u,h,y,P,R,N,L,E,w)=>{const B=h.el=u?u.el:m(""),O=h.anchor=u?u.anchor:m("");let{patchFlag:G,dynamicChildren:k,slotScopeIds:F}=h;F&&(E=E?E.concat(F):F),u==null?(r(B,y,P),r(O,y,P),Ge(h.children||[],y,O,R,N,L,E,w)):G>0&&G&64&&k&&u.dynamicChildren?(se(u.dynamicChildren,k,y,R,N,L,E),(h.key!=null||R&&h===R.subTree)&&Mt(u,h,!0)):v(u,h,y,O,R,N,L,E,w)},t=(u,h,y,P,R,N,L,E,w)=>{h.slotScopeIds=E,u==null?h.shapeFlag&512?R.ctx.activate(h,y,P,L,w):l(h,y,P,R,N,L,w):f(u,h,w)},l=(u,h,y,P,R,N,L)=>{const E=u.component=No(u,P,R);if(ft(u)&&(E.ctx.renderer=Ke),Po(E,!1,L),E.asyncDep){if(R&&R.registerDep(E,x,L),!u.el){const w=E.subTree=Ue(fa);J(null,w,h,y)}}else x(E,u,h,y,R,N,L)},f=(u,h,y)=>{const P=h.component=u.component;if(go(u,h,y))if(P.asyncDep&&!P.asyncResolved){C(P,h,y);return}else P.next=h,P.update();else h.el=u.el,P.vnode=h},x=(u,h,y,P,R,N,L)=>{const E=()=>{if(u.isMounted){let{next:G,bu:k,u:F,parent:W,vnode:$}=u;{const Se=vt(u);if(Se){G&&(G.el=$.el,C(u,G,L)),Se.asyncDep.then(()=>{u.isUnmounted||E()});return}}let Y=G,ye;la(u,!1),G?(G.el=$.el,C(u,G,L)):G=$,k&&un(k),(ye=G.props&&G.props.onVnodeBeforeUpdate)&&De(ye,W,G,$),la(u,!0);const pe=yn(u),Be=u.subTree;u.subTree=pe,q(Be,pe,b(Be.el),ce(Be),u,R,N),G.el=pe.el,Y===null&&Co(u,pe.el),F&&Ie(F,R),(ye=G.props&&G.props.onVnodeUpdated)&&Ie(()=>De(ye,W,G,$),R)}else{let G;const{el:k,props:F}=h,{bm:W,m:$,parent:Y,root:ye,type:pe}=u,Be=wa(h);if(la(u,!1),W&&un(W),!Be&&(G=F&&F.onVnodeBeforeMount)&&De(G,Y,h),la(u,!0),k&&qe){const Se=()=>{u.subTree=yn(u),qe(k,u.subTree,u,R,null)};Be&&pe.__asyncHydrate?pe.__asyncHydrate(k,u,Se):Se()}else{ye.ce&&ye.ce._injectChildStyle(pe);const Se=u.subTree=yn(u);q(null,Se,y,P,u,R,N),h.el=Se.el}if($&&Ie($,R),!Be&&(G=F&&F.onVnodeMounted)){const Se=h;Ie(()=>De(G,Y,Se),R)}(h.shapeFlag&256||Y&&wa(Y.vnode)&&Y.vnode.shapeFlag&256)&&u.a&&Ie(u.a,R),u.isMounted=!0,h=y=P=null}};u.scope.on();const w=u.effect=new Ki(E);u.scope.off();const B=u.update=w.run.bind(w),O=u.job=w.runIfDirty.bind(w);O.i=u,O.id=u.uid,w.scheduler=()=>Qn(O),la(u,!0),B()},C=(u,h,y)=>{h.component=u;const P=u.vnode.props;u.vnode=h,u.next=null,ao(u,h.props,P,y),ro(u,h.children,y),na(),si(u),ia()},v=(u,h,y,P,R,N,L,E,w=!1)=>{const B=u&&u.children,O=u?u.shapeFlag:0,G=h.children,{patchFlag:k,shapeFlag:F}=h;if(k>0){if(k&128){I(B,G,y,P,R,N,L,E,w);return}else if(k&256){g(B,G,y,P,R,N,L,E,w);return}}F&8?(O&16&&ue(B,R,N),G!==B&&c(y,G)):O&16?F&16?I(B,G,y,P,R,N,L,E,w):ue(B,R,N,!0):(O&8&&c(y,""),F&16&&Ge(G,y,P,R,N,L,E,w))},g=(u,h,y,P,R,N,L,E,w)=>{u=u||xa,h=h||xa;const B=u.length,O=h.length,G=Math.min(B,O);let k;for(k=0;k<G;k++){const F=h[k]=w?$e(h[k]):Oe(h[k]);q(u[k],F,y,null,R,N,L,E,w)}B>O?ue(u,R,N,!0,!1,G):Ge(h,y,P,R,N,L,E,w,G)},I=(u,h,y,P,R,N,L,E,w)=>{let B=0;const O=h.length;let G=u.length-1,k=O-1;for(;B<=G&&B<=k;){const F=u[B],W=h[B]=w?$e(h[B]):Oe(h[B]);if(Ma(F,W))q(F,W,y,null,R,N,L,E,w);else break;B++}for(;B<=G&&B<=k;){const F=u[G],W=h[k]=w?$e(h[k]):Oe(h[k]);if(Ma(F,W))q(F,W,y,null,R,N,L,E,w);else break;G--,k--}if(B>G){if(B<=k){const F=k+1,W=F<O?h[F].el:P;for(;B<=k;)q(null,h[B]=w?$e(h[B]):Oe(h[B]),y,W,R,N,L,E,w),B++}}else if(B>k)for(;B<=G;)A(u[B],R,N,!0),B++;else{const F=B,W=B,$=new Map;for(B=W;B<=k;B++){const Te=h[B]=w?$e(h[B]):Oe(h[B]);Te.key!=null&&$.set(Te.key,B)}let Y,ye=0;const pe=k-W+1;let Be=!1,Se=0;const Ta=new Array(pe);for(B=0;B<pe;B++)Ta[B]=0;for(B=F;B<=G;B++){const Te=u[B];if(ye>=pe){A(Te,R,N,!0);continue}let He;if(Te.key!=null)He=$.get(Te.key);else for(Y=W;Y<=k;Y++)if(Ta[Y-W]===0&&Ma(Te,h[Y])){He=Y;break}He===void 0?A(Te,R,N,!0):(Ta[He-W]=B+1,He>=Se?Se=He:Be=!0,q(Te,h[He],y,null,R,N,L,E,w),ye++)}const ii=Be?co(Ta):xa;for(Y=ii.length-1,B=pe-1;B>=0;B--){const Te=W+B,He=h[Te],ti=Te+1<O?h[Te+1].el:P;Ta[B]===0?q(null,He,y,ti,R,N,L,E,w):Be&&(Y<0||B!==ii[Y]?T(He,y,ti,2):Y--)}}},T=(u,h,y,P,R=null)=>{const{el:N,type:L,transition:E,children:w,shapeFlag:B}=u;if(B&6){T(u.component.subTree,h,y,P);return}if(B&128){u.suspense.move(h,y,P);return}if(B&64){L.move(u,h,y,Ke);return}if(L===ve){r(N,h,y);for(let G=0;G<w.length;G++)T(w[G],h,y,P);r(u.anchor,h,y);return}if(L===Sn){z(u,h,y);return}if(P!==2&&B&1&&E)if(P===0)E.beforeEnter(N),r(N,h,y),Ie(()=>E.enter(N),R);else{const{leave:G,delayLeave:k,afterLeave:F}=E,W=()=>r(N,h,y),$=()=>{G(N,()=>{W(),F&&F()})};k?k(N,W,$):$()}else r(N,h,y)},A=(u,h,y,P=!1,R=!1)=>{const{type:N,props:L,ref:E,children:w,dynamicChildren:B,shapeFlag:O,patchFlag:G,dirs:k,cacheIndex:F}=u;if(G===-2&&(R=!1),E!=null&&En(E,null,y,u,!0),F!=null&&(h.renderCache[F]=void 0),O&256){h.ctx.deactivate(u);return}const W=O&1&&k,$=!wa(u);let Y;if($&&(Y=L&&L.onVnodeBeforeUnmount)&&De(Y,h,u),O&6)le(u.component,y,P);else{if(O&128){u.suspense.unmount(y,P);return}W&&oa(u,null,h,"beforeUnmount"),O&64?u.type.remove(u,h,y,Ke,P):B&&!B.hasOnce&&(N!==ve||G>0&&G&64)?ue(B,h,y,!1,!0):(N===ve&&G&384||!R&&O&16)&&ue(w,h,y),P&&te(u)}($&&(Y=L&&L.onVnodeUnmounted)||W)&&Ie(()=>{Y&&De(Y,h,u),W&&oa(u,null,h,"unmounted")},y)},te=u=>{const{type:h,el:y,anchor:P,transition:R}=u;if(h===ve){j(y,P);return}if(h===Sn){D(u);return}const N=()=>{o(y),R&&!R.persisted&&R.afterLeave&&R.afterLeave()};if(u.shapeFlag&1&&R&&!R.persisted){const{leave:L,delayLeave:E}=R,w=()=>L(y,N);E?E(u.el,N,w):w()}else N()},j=(u,h)=>{let y;for(;u!==h;)y=H(u),o(u),u=y;o(h)},le=(u,h,y)=>{const{bum:P,scope:R,job:N,subTree:L,um:E,m:w,a:B}=u;hi(w),hi(B),P&&un(P),R.stop(),N&&(N.flags|=8,A(L,u,h,y)),E&&Ie(E,h),Ie(()=>{u.isUnmounted=!0},h),h&&h.pendingBranch&&!h.isUnmounted&&u.asyncDep&&!u.asyncResolved&&u.suspenseId===h.pendingId&&(h.deps--,h.deps===0&&h.resolve())},ue=(u,h,y,P=!1,R=!1,N=0)=>{for(let L=N;L<u.length;L++)A(u[L],h,y,P,R)},ce=u=>{if(u.shapeFlag&6)return ce(u.component.subTree);if(u.shapeFlag&128)return u.suspense.next();const h=H(u.anchor||u.el),y=h&&h[Br];return y?H(y):h};let de=!1;const ra=(u,h,y)=>{u==null?h._vnode&&A(h._vnode,null,null,!0):q(h._vnode||null,u,h,null,null,null,y),h._vnode=u,de||(de=!0,si(),lt(),de=!1)},Ke={p:q,um:A,m:T,r:te,mt:l,mc:Ge,pc:v,pbc:se,n:ce,o:e};let ua,qe;return{render:ra,hydrate:ua,createApp:Qr(ra,ua)}}function Cn({type:e,props:n},i){return i==="svg"&&e==="foreignObject"||i==="mathml"&&e==="annotation-xml"&&n&&n.encoding&&n.encoding.includes("html")?void 0:i}function la({effect:e,job:n},i){i?(e.flags|=32,n.flags|=4):(e.flags&=-33,n.flags&=-5)}function so(e,n){return(!e||e&&!e.pendingBranch)&&n&&!n.persisted}function Mt(e,n,i=!1){const r=e.children,o=n.children;if(U(r)&&U(o))for(let s=0;s<r.length;s++){const d=r[s];let m=o[s];m.shapeFlag&1&&!m.dynamicChildren&&((m.patchFlag<=0||m.patchFlag===32)&&(m=o[s]=$e(o[s]),m.el=d.el),!i&&m.patchFlag!==-2&&Mt(d,m)),m.type===dn&&(m.el=d.el)}}function co(e){const n=e.slice(),i=[0];let r,o,s,d,m;const p=e.length;for(r=0;r<p;r++){const S=e[r];if(S!==0){if(o=i[i.length-1],e[o]<S){n[r]=o,i.push(r);continue}for(s=0,d=i.length-1;s<d;)m=s+d>>1,e[i[m]]<S?s=m+1:d=m;S<e[i[s]]&&(s>0&&(n[r]=i[s-1]),i[s]=r)}}for(s=i.length,d=i[s-1];s-- >0;)i[s]=d,d=n[d];return i}function vt(e){const n=e.subTree.component;if(n)return n.asyncDep&&!n.asyncResolved?n:vt(n)}function hi(e){if(e)for(let n=0;n<e.length;n++)e[n].flags|=8}const fo=Symbol.for("v-scx"),mo=()=>za(fo);function An(e,n,i){return Rt(e,n,i)}function Rt(e,n,i=Q){const{immediate:r,deep:o,flush:s,once:d}=i,m=me({},i),p=n&&r||!n&&s!=="post";let S;if(Fa){if(s==="sync"){const M=mo();S=M.__watcherHandles||(M.__watcherHandles=[])}else if(!p){const M=()=>{};return M.stop=Fe,M.resume=Fe,M.pause=Fe,M}}const c=ge;m.call=(M,K,q)=>_e(M,c,K,q);let b=!1;s==="post"?m.scheduler=M=>{Ie(M,c&&c.suspense)}:s!=="sync"&&(b=!0,m.scheduler=(M,K)=>{K?M():Qn(M)}),m.augmentJob=M=>{n&&(M.flags|=4),b&&(M.flags|=2,c&&(M.id=c.uid,M.i=c))};const H=Tr(e,n,m);return Fa&&(S?S.push(H):p&&H()),H}function uo(e,n,i){const r=this.proxy,o=re(e)?e.includes(".")?Nt(r,e):()=>r[e]:e.bind(r,r);let s;_(n)?s=n:(s=n.handler,i=n);const d=_a(this),m=Rt(o,s.bind(r),i);return d(),m}function Nt(e,n){const i=n.split(".");return()=>{let r=e;for(let o=0;o<i.length&&r;o++)r=r[i[o]];return r}}const po=(e,n)=>n==="modelValue"||n==="model-value"?e.modelModifiers:e[`${n}Modifiers`]||e[`${ea(n)}Modifiers`]||e[`${ma(n)}Modifiers`];function ho(e,n,...i){if(e.isUnmounted)return;const r=e.vnode.props||Q;let o=i;const s=n.startsWith("update:"),d=s&&po(r,n.slice(7));d&&(d.trim&&(o=i.map(c=>re(c)?c.trim():c)),d.number&&(o=i.map(qt)));let m,p=r[m=mn(n)]||r[m=mn(ea(n))];!p&&s&&(p=r[m=mn(ma(n))]),p&&_e(p,e,6,o);const S=r[m+"Once"];if(S){if(!e.emitted)e.emitted={};else if(e.emitted[m])return;e.emitted[m]=!0,_e(S,e,6,o)}}function Pt(e,n,i=!1){const r=n.emitsCache,o=r.get(e);if(o!==void 0)return o;const s=e.emits;let d={},m=!1;if(!_(e)){const p=S=>{const c=Pt(S,n,!0);c&&(m=!0,me(d,c))};!i&&n.mixins.length&&n.mixins.forEach(p),e.extends&&p(e.extends),e.mixins&&e.mixins.forEach(p)}return!s&&!m?(ne(e)&&r.set(e,null),null):(U(s)?s.forEach(p=>d[p]=null):me(d,s),ne(e)&&r.set(e,d),d)}function cn(e,n){return!e||!an(n)?!1:(n=n.slice(2).replace(/Once$/,""),V(e,n[0].toLowerCase()+n.slice(1))||V(e,ma(n))||V(e,n))}function yn(e){const{type:n,vnode:i,proxy:r,withProxy:o,propsOptions:[s],slots:d,attrs:m,emit:p,render:S,renderCache:c,props:b,data:H,setupState:M,ctx:K,inheritAttrs:q}=e,oe=Xa(e);let J,ae;try{if(i.shapeFlag&4){const D=o||r,ie=D;J=Oe(S.call(ie,D,c,b,M,H,K)),ae=m}else{const D=n;J=Oe(D.length>1?D(b,{attrs:m,slots:d,emit:p}):D(b,null)),ae=n.props?m:xo(m)}}catch(D){La.length=0,ln(D,e,1),J=Ue(fa)}let z=J;if(ae&&q!==!1){const D=Object.keys(ae),{shapeFlag:ie}=z;D.length&&ie&7&&(s&&D.some(_n)&&(ae=bo(ae,s)),z=Sa(z,ae,!1,!0))}return i.dirs&&(z=Sa(z,null,!1,!0),z.dirs=z.dirs?z.dirs.concat(i.dirs):i.dirs),i.transition&&$n(z,i.transition),J=z,Xa(oe),J}const xo=e=>{let n;for(const i in e)(i==="class"||i==="style"||an(i))&&((n||(n={}))[i]=e[i]);return n},bo=(e,n)=>{const i={};for(const r in e)(!_n(r)||!(r.slice(9)in n))&&(i[r]=e[r]);return i};function go(e,n,i){const{props:r,children:o,component:s}=e,{props:d,children:m,patchFlag:p}=n,S=s.emitsOptions;if(n.dirs||n.transition)return!0;if(i&&p>=0){if(p&1024)return!0;if(p&16)return r?xi(r,d,S):!!d;if(p&8){const c=n.dynamicProps;for(let b=0;b<c.length;b++){const H=c[b];if(d[H]!==r[H]&&!cn(S,H))return!0}}}else return(o||m)&&(!m||!m.$stable)?!0:r===d?!1:r?d?xi(r,d,S):!0:!!d;return!1}function xi(e,n,i){const r=Object.keys(n);if(r.length!==Object.keys(e).length)return!0;for(let o=0;o<r.length;o++){const s=r[o];if(n[s]!==e[s]&&!cn(i,s))return!0}return!1}function Co({vnode:e,parent:n},i){for(;n;){const r=n.subTree;if(r.suspense&&r.suspense.activeBranch===e&&(r.el=e.el),r===e)(e=n.vnode).el=i,n=n.parent;else break}}const Bt=e=>e.__isSuspense;function Ao(e,n){n&&n.pendingBranch?U(e)?n.effects.push(...e):n.effects.push(e):Rr(e)}const ve=Symbol.for("v-fgt"),dn=Symbol.for("v-txt"),fa=Symbol.for("v-cmt"),Sn=Symbol.for("v-stc"),La=[];let Re=null;function Je(e=!1){La.push(Re=e?null:[])}function yo(){La.pop(),Re=La[La.length-1]||null}let Oa=1;function bi(e){Oa+=e,e<0&&Re&&(Re.hasOnce=!0)}function wt(e){return e.dynamicChildren=Oa>0?Re||xa:null,yo(),Oa>0&&Re&&Re.push(e),e}function Xe(e,n,i,r,o,s){return wt(fe(e,n,i,r,o,s,!0))}function So(e,n,i,r,o){return wt(Ue(e,n,i,r,o,!0))}function Et(e){return e?e.__v_isVNode===!0:!1}function Ma(e,n){return e.type===n.type&&e.key===n.key}const Lt=({key:e})=>e??null,Ja=({ref:e,ref_key:n,ref_for:i})=>(typeof e=="number"&&(e=""+e),e!=null?re(e)||Ce(e)||_(e)?{i:Pe,r:e,k:n,f:!!i}:e:null);function fe(e,n=null,i=null,r=0,o=null,s=e===ve?0:1,d=!1,m=!1){const p={__v_isVNode:!0,__v_skip:!0,type:e,props:n,key:n&&Lt(n),ref:n&&Ja(n),scopeId:ct,slotScopeIds:null,children:i,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:r,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:Pe};return m?(ni(p,i),s&128&&e.normalize(p)):i&&(p.shapeFlag|=re(i)?8:16),Oa>0&&!d&&Re&&(p.patchFlag>0||s&6)&&p.patchFlag!==32&&Re.push(p),p}const Ue=To;function To(e,n=null,i=null,r=0,o=null,s=!1){if((!e||e===Wr)&&(e=fa),Et(e)){const m=Sa(e,n,!0);return i&&ni(m,i),Oa>0&&!s&&Re&&(m.shapeFlag&6?Re[Re.indexOf(e)]=m:Re.push(m)),m.patchFlag=-2,m}if(Lo(e)&&(e=e.__vccOpts),n){n=Io(n);let{class:m,style:p}=n;m&&!re(m)&&(n.class=Ga(m)),ne(p)&&(Xn(p)&&!U(p)&&(p=me({},p)),n.style=Wn(p))}const d=re(e)?1:Bt(e)?128:wr(e)?64:ne(e)?4:_(e)?2:0;return fe(e,n,i,r,o,d,s,!0)}function Io(e){return e?Xn(e)||gt(e)?me({},e):e:null}function Sa(e,n,i=!1,r=!1){const{props:o,ref:s,patchFlag:d,children:m,transition:p}=e,S=n?Mo(o||{},n):o,c={__v_isVNode:!0,__v_skip:!0,type:e.type,props:S,key:S&&Lt(S),ref:n&&n.ref?i&&s?U(s)?s.concat(Ja(n)):[s,Ja(n)]:Ja(n):s,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:m,target:e.target,targetStart:e.targetStart,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:n&&e.type!==ve?d===-1?16:d|16:d,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:p,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Sa(e.ssContent),ssFallback:e.ssFallback&&Sa(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce};return p&&r&&$n(c,p.clone(c)),c}function Va(e=" ",n=0){return Ue(dn,null,e,n)}function gi(e="",n=!1){return n?(Je(),So(fa,null,e)):Ue(fa,null,e)}function Oe(e){return e==null||typeof e=="boolean"?Ue(fa):U(e)?Ue(ve,null,e.slice()):Et(e)?$e(e):Ue(dn,null,String(e))}function $e(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:Sa(e)}function ni(e,n){let i=0;const{shapeFlag:r}=e;if(n==null)n=null;else if(U(n))i=16;else if(typeof n=="object")if(r&65){const o=n.default;o&&(o._c&&(o._d=!1),ni(e,o()),o._c&&(o._d=!0));return}else{i=32;const o=n._;!o&&!gt(n)?n._ctx=Pe:o===3&&Pe&&(Pe.slots._===1?n._=1:(n._=2,e.patchFlag|=1024))}else _(n)?(n={default:n,_ctx:Pe},i=32):(n=String(n),r&64?(i=16,n=[Va(n)]):i=8);e.children=n,e.shapeFlag|=i}function Mo(...e){const n={};for(let i=0;i<e.length;i++){const r=e[i];for(const o in r)if(o==="class")n.class!==r.class&&(n.class=Ga([n.class,r.class]));else if(o==="style")n.style=Wn([n.style,r.style]);else if(an(o)){const s=n[o],d=r[o];d&&s!==d&&!(U(s)&&s.includes(d))&&(n[o]=s?[].concat(s,d):d)}else o!==""&&(n[o]=r[o])}return n}function De(e,n,i,r=null){_e(e,n,7,[i,r])}const vo=ht();let Ro=0;function No(e,n,i){const r=e.type,o=(n?n.appContext:e.appContext)||vo,s={uid:Ro++,vnode:e,type:r,parent:n,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Zt(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:n?n.provides:Object.create(o.provides),ids:n?n.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:At(r,o),emitsOptions:Pt(r,o),emit:null,emitted:null,propsDefaults:Q,inheritAttrs:r.inheritAttrs,ctx:Q,data:Q,props:Q,attrs:Q,slots:Q,refs:Q,setupState:Q,setupContext:null,suspense:i,suspenseId:i?i.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=n?n.root:s,s.emit=ho.bind(null,s),e.ce&&e.ce(s),s}let ge=null,$a,kn;{const e=rn(),n=(i,r)=>{let o;return(o=e[i])||(o=e[i]=[]),o.push(r),s=>{o.length>1?o.forEach(d=>d(s)):o[0](s)}};$a=n("__VUE_INSTANCE_SETTERS__",i=>ge=i),kn=n("__VUE_SSR_SETTERS__",i=>Fa=i)}const _a=e=>{const n=ge;return $a(e),e.scope.on(),()=>{e.scope.off(),$a(n)}},Ci=()=>{ge&&ge.scope.off(),$a(null)};function Gt(e){return e.vnode.shapeFlag&4}let Fa=!1;function Po(e,n=!1,i=!1){n&&kn(n);const{props:r,children:o}=e.vnode,s=Gt(e);eo(e,r,s,n),to(e,o,i);const d=s?Bo(e,n):void 0;return n&&kn(!1),d}function Bo(e,n){const i=e.type;e.accessCache=Object.create(null),e.proxy=new Proxy(e.ctx,zr);const{setup:r}=i;if(r){na();const o=e.setupContext=r.length>1?Eo(e):null,s=_a(e),d=Ua(r,e,0,[e.props,o]),m=Gi(d);if(ia(),s(),(m||e.sp)&&!wa(e)&&dt(e),m){if(d.then(Ci,Ci),n)return d.then(p=>{Ai(e,p,n)}).catch(p=>{ln(p,e,0)});e.asyncDep=d}else Ai(e,d,n)}else Ht(e,n)}function Ai(e,n,i){_(n)?e.type.__ssrInlineRender?e.ssrRender=n:e.render=n:ne(n)&&(e.setupState=tt(n)),Ht(e,i)}let yi;function Ht(e,n,i){const r=e.type;if(!e.render){if(!n&&yi&&!r.render){const o=r.template||ei(e).template;if(o){const{isCustomElement:s,compilerOptions:d}=e.appContext.config,{delimiters:m,compilerOptions:p}=r,S=me(me({isCustomElement:s,delimiters:m},d),p);r.render=yi(o,S)}}e.render=r.render||Fe}{const o=_a(e);na();try{Jr(e)}finally{ia(),o()}}}const wo={get(e,n){return he(e,"get",""),e[n]}};function Eo(e){const n=i=>{e.exposed=i||{}};return{attrs:new Proxy(e.attrs,wo),slots:e.slots,emit:e.emit,expose:n}}function fn(e){return e.exposed?e.exposeProxy||(e.exposeProxy=new Proxy(tt(br(e.exposed)),{get(n,i){if(i in n)return n[i];if(i in Ea)return Ea[i](e)},has(n,i){return i in n||i in Ea}})):e.proxy}function Lo(e){return _(e)&&"__vccOpts"in e}const Go=(e,n)=>yr(e,n,Fa),Ho="3.5.12";/**
* @vue/runtime-dom v3.5.12
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let On;const Si=typeof window<"u"&&window.trustedTypes;if(Si)try{On=Si.createPolicy("vue",{createHTML:e=>e})}catch{}const Dt=On?e=>On.createHTML(e):e=>e,Do="http://www.w3.org/2000/svg",ko="http://www.w3.org/1998/Math/MathML",Ve=typeof document<"u"?document:null,Ti=Ve&&Ve.createElement("template"),Oo={insert:(e,n,i)=>{n.insertBefore(e,i||null)},remove:e=>{const n=e.parentNode;n&&n.removeChild(e)},createElement:(e,n,i,r)=>{const o=n==="svg"?Ve.createElementNS(Do,e):n==="mathml"?Ve.createElementNS(ko,e):i?Ve.createElement(e,{is:i}):Ve.createElement(e);return e==="select"&&r&&r.multiple!=null&&o.setAttribute("multiple",r.multiple),o},createText:e=>Ve.createTextNode(e),createComment:e=>Ve.createComment(e),setText:(e,n)=>{e.nodeValue=n},setElementText:(e,n)=>{e.textContent=n},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Ve.querySelector(e),setScopeId(e,n){e.setAttribute(n,"")},insertStaticContent(e,n,i,r,o,s){const d=i?i.previousSibling:n.lastChild;if(o&&(o===s||o.nextSibling))for(;n.insertBefore(o.cloneNode(!0),i),!(o===s||!(o=o.nextSibling)););else{Ti.innerHTML=Dt(r==="svg"?`<svg>${e}</svg>`:r==="mathml"?`<math>${e}</math>`:e);const m=Ti.content;if(r==="svg"||r==="mathml"){const p=m.firstChild;for(;p.firstChild;)m.appendChild(p.firstChild);m.removeChild(p)}n.insertBefore(m,i)}return[d?d.nextSibling:n.firstChild,i?i.previousSibling:n.lastChild]}},Fo=Symbol("_vtc");function Uo(e,n,i){const r=e[Fo];r&&(n=(n?[n,...r]:[...r]).join(" ")),n==null?e.removeAttribute("class"):i?e.setAttribute("class",n):e.className=n}const en=Symbol("_vod"),kt=Symbol("_vsh"),_o={beforeMount(e,{value:n},{transition:i}){e[en]=e.style.display==="none"?"":e.style.display,i&&n?i.beforeEnter(e):va(e,n)},mounted(e,{value:n},{transition:i}){i&&n&&i.enter(e)},updated(e,{value:n,oldValue:i},{transition:r}){!n!=!i&&(r?n?(r.beforeEnter(e),va(e,!0),r.enter(e)):r.leave(e,()=>{va(e,!1)}):va(e,n))},beforeUnmount(e,{value:n}){va(e,n)}};function va(e,n){e.style.display=n?e[en]:"none",e[kt]=!n}const Ko=Symbol(""),qo=/(^|;)\s*display\s*:/;function Wo(e,n,i){const r=e.style,o=re(i);let s=!1;if(i&&!o){if(n)if(re(n))for(const d of n.split(";")){const m=d.slice(0,d.indexOf(":")).trim();i[m]==null&&Ya(r,m,"")}else for(const d in n)i[d]==null&&Ya(r,d,"");for(const d in i)d==="display"&&(s=!0),Ya(r,d,i[d])}else if(o){if(n!==i){const d=r[Ko];d&&(i+=";"+d),r.cssText=i,s=qo.test(i)}}else n&&e.removeAttribute("style");en in e&&(e[en]=s?r.display:"",e[kt]&&(r.display="none"))}const Ii=/\s*!important$/;function Ya(e,n,i){if(U(i))i.forEach(r=>Ya(e,n,r));else if(i==null&&(i=""),n.startsWith("--"))e.setProperty(n,i);else{const r=zo(e,n);Ii.test(i)?e.setProperty(ma(r),i.replace(Ii,""),"important"):e[r]=i}}const Mi=["Webkit","Moz","ms"],Tn={};function zo(e,n){const i=Tn[n];if(i)return i;let r=ea(n);if(r!=="filter"&&r in e)return Tn[n]=r;r=ki(r);for(let o=0;o<Mi.length;o++){const s=Mi[o]+r;if(s in e)return Tn[n]=s}return n}const vi="http://www.w3.org/1999/xlink";function Ri(e,n,i,r,o,s=jt(n)){r&&n.startsWith("xlink:")?i==null?e.removeAttributeNS(vi,n.slice(6,n.length)):e.setAttributeNS(vi,n,i):i==null||s&&!Fi(i)?e.removeAttribute(n):e.setAttribute(n,s?"":aa(i)?String(i):i)}function Ni(e,n,i,r,o){if(n==="innerHTML"||n==="textContent"){i!=null&&(e[n]=n==="innerHTML"?Dt(i):i);return}const s=e.tagName;if(n==="value"&&s!=="PROGRESS"&&!s.includes("-")){const m=s==="OPTION"?e.getAttribute("value")||"":e.value,p=i==null?e.type==="checkbox"?"on":"":String(i);(m!==p||!("_value"in e))&&(e.value=p),i==null&&e.removeAttribute(n),e._value=i;return}let d=!1;if(i===""||i==null){const m=typeof e[n];m==="boolean"?i=Fi(i):i==null&&m==="string"?(i="",d=!0):m==="number"&&(i=0,d=!0)}try{e[n]=i}catch{}d&&e.removeAttribute(o||n)}function Jo(e,n,i,r){e.addEventListener(n,i,r)}function Vo(e,n,i,r){e.removeEventListener(n,i,r)}const Pi=Symbol("_vei");function Yo(e,n,i,r,o=null){const s=e[Pi]||(e[Pi]={}),d=s[n];if(r&&d)d.value=r;else{const[m,p]=jo(n);if(r){const S=s[n]=Qo(r,o);Jo(e,m,S,p)}else d&&(Vo(e,m,d,p),s[n]=void 0)}}const Bi=/(?:Once|Passive|Capture)$/;function jo(e){let n;if(Bi.test(e)){n={};let r;for(;r=e.match(Bi);)e=e.slice(0,e.length-r[0].length),n[r[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):ma(e.slice(2)),n]}let In=0;const Zo=Promise.resolve(),Xo=()=>In||(Zo.then(()=>In=0),In=Date.now());function Qo(e,n){const i=r=>{if(!r._vts)r._vts=Date.now();else if(r._vts<=i.attached)return;_e($o(r,i.value),n,5,[r])};return i.value=e,i.attached=Xo(),i}function $o(e,n){if(U(n)){const i=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{i.call(e),e._stopped=!0},n.map(r=>o=>!o._stopped&&r&&r(o))}else return n}const wi=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,el=(e,n,i,r,o,s)=>{const d=o==="svg";n==="class"?Uo(e,r,d):n==="style"?Wo(e,i,r):an(n)?_n(n)||Yo(e,n,i,r,s):(n[0]==="."?(n=n.slice(1),!0):n[0]==="^"?(n=n.slice(1),!1):al(e,n,r,d))?(Ni(e,n,r),!e.tagName.includes("-")&&(n==="value"||n==="checked"||n==="selected")&&Ri(e,n,r,d,s,n!=="value")):e._isVueCE&&(/[A-Z]/.test(n)||!re(r))?Ni(e,ea(n),r,s,n):(n==="true-value"?e._trueValue=r:n==="false-value"&&(e._falseValue=r),Ri(e,n,r,d))};function al(e,n,i,r){if(r)return!!(n==="innerHTML"||n==="textContent"||n in e&&wi(n)&&_(i));if(n==="spellcheck"||n==="draggable"||n==="translate"||n==="form"||n==="list"&&e.tagName==="INPUT"||n==="type"&&e.tagName==="TEXTAREA")return!1;if(n==="width"||n==="height"){const o=e.tagName;if(o==="IMG"||o==="VIDEO"||o==="CANVAS"||o==="SOURCE")return!1}return wi(n)&&re(i)?!1:n in e}const nl=me({patchProp:el},Oo);let Ei;function il(){return Ei||(Ei=oo(nl))}const tl=(...e)=>{const n=il().createApp(...e),{mount:i}=n;return n.mount=r=>{const o=ol(r);if(!o)return;const s=n._component;!_(s)&&!s.render&&!s.template&&(s.template=o.innerHTML),o.nodeType===1&&(o.textContent="");const d=i(o,!1,rl(o));return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),d},n};function rl(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function ol(e){return re(e)?document.querySelector(e):e}const Mn={1:{qno:1,word:"[AIRPORT] TPE",meaning:"桃園",detailed:"TPE, TAOYUAN(TPE), Taiwan (TW / TWN), TC3",type:"airport-name-to-code"},2:{qno:2,word:"[AIRPORT] TSA",meaning:"松山 (臺北)",detailed:"TSA, TAIPEI(TPE), Taiwan (TW / TWN), TC3",type:"airport-name-to-code"},3:{qno:3,word:"[AIRPORT] RMQ",meaning:"臺中",detailed:"RMQ, TAICHUNG(TXG), Taiwan (TW / TWN), TC3",type:"airport-name-to-code"},4:{qno:4,word:"[AIRPORT] KHH",meaning:"高雄",detailed:"KHH, KAOHSIUNG(KHH), Taiwan (TW / TWN), TC3",type:"airport-name-to-code"},5:{qno:5,word:"[AIRPORT] HUN",meaning:"花蓮",detailed:"HUN, HUALIEN(HUN), Taiwan (TW / TWN), TC3",type:"airport-name-to-code"},6:{qno:6,word:"[AIRPORT] HKG",meaning:"香港",detailed:"HKG, HONGKONG(HKG), Hong Kong (HK / HKG), TC3",type:"airport-name-to-code"},7:{qno:7,word:"[AIRPORT] MFM",meaning:"澳門",detailed:"MFM, MACAU(MFM), Macau (MO / MAC), TC3",type:"airport-name-to-code"},8:{qno:8,word:"[AIRPORT] PEK",meaning:"北京",detailed:"PEK, BEIJING(BJS), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},9:{qno:9,word:"[AIRPORT] SHA",meaning:"上海 (虹橋)",detailed:"SHA, SHANGHAI(SHA), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},10:{qno:10,word:"[AIRPORT] PVG",meaning:"上海 (浦東)",detailed:"PVG, SHANGHAI(SHA), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},11:{qno:11,word:"[AIRPORT] CAN",meaning:"廣州",detailed:"CAN, GUANGZHOU(CAN), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},12:{qno:12,word:"[AIRPORT] CTU",meaning:"成都",detailed:"CTU, CHENGDU(CTU), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},13:{qno:13,word:"[AIRPORT] CKG",meaning:"重慶",detailed:"CKG, CHONGQING(CKG), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},14:{qno:14,word:"[AIRPORT] CGO",meaning:"鄭州",detailed:"CGO, ZHENGZHOU(CGO), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},15:{qno:15,word:"[AIRPORT] CSX",meaning:"長沙",detailed:"CSX, CHANGSHA(CSX), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},16:{qno:16,word:"[AIRPORT] DLC",meaning:"大連",detailed:"DLC, DALIAN(DLC), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},17:{qno:17,word:"[AIRPORT] FOC",meaning:"福州",detailed:"FOC, FUZHOU(FOC), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},18:{qno:18,word:"[AIRPORT] HAK",meaning:"海口",detailed:"HAK, HAIKOU(HAK), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},19:{qno:19,word:"[AIRPORT] HFE",meaning:"合肥",detailed:"HFE, HEFEI(HFE), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},20:{qno:20,word:"[AIRPORT] HGH",meaning:"杭州",detailed:"HGH, HANGZHOU(HGH), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},21:{qno:21,word:"[AIRPORT] HRB",meaning:"哈爾濱",detailed:"HRB, HARBIN(HRB), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},22:{qno:22,word:"[AIRPORT] KWE",meaning:"貴陽",detailed:"KWE, GUIYANG(KWE), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},23:{qno:23,word:"[AIRPORT] KMG",meaning:"昆明",detailed:"KMG, KUNMING(KMG), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},24:{qno:24,word:"[AIRPORT] KWL",meaning:"桂林",detailed:"KWL, GUILIN(KWL), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},25:{qno:25,word:"[AIRPORT] NGB",meaning:"寧波",detailed:"NGB, NINGBO(NGB), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},26:{qno:26,word:"[AIRPORT] NKG",meaning:"南京",detailed:"NKG, NANJING(NKG), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},27:{qno:27,word:"[AIRPORT] NNG",meaning:"南寧",detailed:"NNG, NANNING(NNG), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},28:{qno:28,word:"[AIRPORT] SHE",meaning:"瀋陽",detailed:"SHE, SHENYANG(SHE), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},29:{qno:29,word:"[AIRPORT] SYX",meaning:"三亞",detailed:"SYX, SANYA(SYX), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},30:{qno:30,word:"[AIRPORT] TAO",meaning:"青島",detailed:"TAO, QINGDAO(TAO), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},31:{qno:31,word:"[AIRPORT] TNA",meaning:"濟南",detailed:"TNA, JINAN(TNA), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},32:{qno:32,word:"[AIRPORT] TSN",meaning:"天津",detailed:"TSN, TIANJIN(TSN), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},33:{qno:33,word:"[AIRPORT] WNZ",meaning:"溫州",detailed:"WNZ, WENZHOU(WNZ), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},34:{qno:34,word:"[AIRPORT] WUH",meaning:"武漢",detailed:"WUH, WUHAN(WUH), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},35:{qno:35,word:"[AIRPORT] WUX",meaning:"無錫",detailed:"WUX, WUXI(WUX), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},36:{qno:36,word:"[AIRPORT] XIY",meaning:"西安",detailed:"XIY, XI AN(SIA), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},37:{qno:37,word:"[AIRPORT] XMN",meaning:"廈門",detailed:"XMN, XIAMEN(XMN), Mainland China (CN / CHN), TC3",type:"airport-name-to-code"},38:{qno:38,word:"[AIRPORT] NRT",meaning:"成田 (東京)",detailed:"NRT, NARITA TOKYO(TYO), Japan (JP / JPN), TC3",type:"airport-name-to-code"},39:{qno:39,word:"[AIRPORT] HND",meaning:"羽田 (東京)",detailed:"HND, HANEDA TOKYO(TYO), Japan (JP / JPN), TC3",type:"airport-name-to-code"},40:{qno:40,word:"[AIRPORT] KIX",meaning:"大阪",detailed:"KIX, OSAKA(OSA), Japan (JP / JPN), TC3",type:"airport-name-to-code"},41:{qno:41,word:"[AIRPORT] NGO",meaning:"名古屋",detailed:"NGO, NAGOYA(NGO), Japan (JP / JPN), TC3",type:"airport-name-to-code"},42:{qno:42,word:"[AIRPORT] OKA",meaning:"琉球",detailed:"OKA, OKINAWA(OKA), Japan (JP / JPN), TC3",type:"airport-name-to-code"},43:{qno:43,word:"[AIRPORT] FUK",meaning:"福岡",detailed:"FUK, FUKUOKA(FUK), Japan (JP / JPN), TC3",type:"airport-name-to-code"},44:{qno:44,word:"[AIRPORT] FNJ",meaning:"順安 (平壤)",detailed:"FNJ, PYONGYANG(FNJ), North Korea (KP / PRK), TC3",type:"airport-name-to-code"},45:{qno:45,word:"[AIRPORT] ICN",meaning:"首爾",detailed:"ICN, SEOUL(SEL), South Korea (KR / KOR), TC3",type:"airport-name-to-code"},46:{qno:46,word:"[AIRPORT] PUS",meaning:"釜山",detailed:"PUS, BUSAN(PUS), South Korea (KR / KOR), TC3",type:"airport-name-to-code"},47:{qno:47,word:"[AIRPORT] CJU",meaning:"濟州島",detailed:"CJU, JEJU(CJU), South Korea (KR / KOR), TC3",type:"airport-name-to-code"},48:{qno:48,word:"[AIRPORT] BKK",meaning:"曼谷",detailed:"BKK, BANGKOK(BKK), Thailand (TH / THA), TC3",type:"airport-name-to-code"},49:{qno:49,word:"[AIRPORT] HKT",meaning:"普吉島",detailed:"HKT, PHUKET(HKT), Thailand (TH / THA), TC3",type:"airport-name-to-code"},50:{qno:50,word:"[AIRPORT] CNX",meaning:"清邁",detailed:"CNX, CHIANG MAI(CNX), Thailand (TH / THA), TC3",type:"airport-name-to-code"},51:{qno:51,word:"[AIRPORT] SIN",meaning:"新加坡",detailed:"SIN, SINGAPORE(SIN), Singapore (SG / SGP), TC3",type:"airport-name-to-code"},52:{qno:52,word:"[AIRPORT] KUL",meaning:"吉隆坡",detailed:"KUL, KUALA LUMPUR(KUL), Malaysia (MY / MYS), TC3",type:"airport-name-to-code"},53:{qno:53,word:"[AIRPORT] BKI",meaning:"沙巴 (亞庇)",detailed:"BKI, KOTA KINABALU(BKI), Malaysia (MY / MYS), TC3",type:"airport-name-to-code"},54:{qno:54,word:"[AIRPORT] KCH",meaning:"古晉",detailed:"KCH, KUCHING(KCH), Malaysia (MY / MYS), TC3",type:"airport-name-to-code"},55:{qno:55,word:"[AIRPORT] PEN",meaning:"檳城",detailed:"PEN, PENANG(PEN), Malaysia (MY / MYS), TC3",type:"airport-name-to-code"},56:{qno:56,word:"[AIRPORT] CGK",meaning:"雅加達",detailed:"CGK, JAKARTA(JKT), Indonesia (ID / IDN), TC3",type:"airport-name-to-code"},57:{qno:57,word:"[AIRPORT] DPS",meaning:"峇里島",detailed:"DPS, DENPASAR BALI(DPS), Indonesia (ID / IDN), TC3",type:"airport-name-to-code"},58:{qno:58,word:"[AIRPORT] SUB",meaning:"泗水",detailed:"SUB, SURABAYA(SUB), Indonesia (ID / IDN), TC3",type:"airport-name-to-code"},59:{qno:59,word:"[AIRPORT] SGN",meaning:"胡志明市",detailed:"SGN, HO CHI MINH CITY(SGN), Vietnam (VN / VNM), TC3",type:"airport-name-to-code"},60:{qno:60,word:"[AIRPORT] HAN",meaning:"河內",detailed:"HAN, HANOI(HAN), Vietnam (VN / VNM), TC3",type:"airport-name-to-code"},61:{qno:61,word:"[AIRPORT] DAD",meaning:"峴港",detailed:"DAD, DA NANG(DAD), Vietnam (VN / VNM), TC3",type:"airport-name-to-code"},62:{qno:62,word:"[AIRPORT] MNL",meaning:"馬尼拉",detailed:"MNL, MANILA(MNL), Philippines (PH / PHL), TC3",type:"airport-name-to-code"},63:{qno:63,word:"[AIRPORT] CEB",meaning:"宿霧",detailed:"CEB, CEBU(CEB), Philippines (PH / PHL), TC3",type:"airport-name-to-code"},64:{qno:64,word:"[AIRPORT] LAO",meaning:"佬沃",detailed:"LAO, LAOAG(LAO), Philippines (PH / PHL), TC3",type:"airport-name-to-code"},65:{qno:65,word:"[AIRPORT] ADL",meaning:"阿德雷得",detailed:"ADL, ADELAIDE(ADL), Australia (AU / AUS), TC3",type:"airport-name-to-code"},66:{qno:66,word:"[AIRPORT] BNE",meaning:"布里斯班",detailed:"BNE, BRISBANE(BNE), Australia (AU / AUS), TC3",type:"airport-name-to-code"},67:{qno:67,word:"[AIRPORT] CBR",meaning:"坎培拉",detailed:"CBR, CANBERRA(CBR), Australia (AU / AUS), TC3",type:"airport-name-to-code"},68:{qno:68,word:"[AIRPORT] CNS",meaning:"凱恩斯",detailed:"CNS, CAIRNS(CNS), Australia (AU / AUS), TC3",type:"airport-name-to-code"},69:{qno:69,word:"[AIRPORT] MEL",meaning:"墨爾本",detailed:"MEL, MELBOURNE(MEL), Australia (AU / AUS), TC3",type:"airport-name-to-code"},70:{qno:70,word:"[AIRPORT] PER",meaning:"伯斯",detailed:"PER, PERTH(PER), Australia (AU / AUS), TC3",type:"airport-name-to-code"},71:{qno:71,word:"[AIRPORT] SYD",meaning:"雪梨",detailed:"SYD, SYDNEY(SYD), Australia (AU / AUS), TC3",type:"airport-name-to-code"},72:{qno:72,word:"[AIRPORT] AKL",meaning:"奧克蘭",detailed:"AKL, AUCKLAND(AKL), New Zealand (NZ / NZL), TC3",type:"airport-name-to-code"},73:{qno:73,word:"[AIRPORT] CHC",meaning:"基督城",detailed:"CHC, CHRISTCHURCH(CHC), New Zealand (NZ / NZL), TC3",type:"airport-name-to-code"},74:{qno:74,word:"[AIRPORT] DEL",meaning:"德里",detailed:"DEL, DELHI(DEL), India (IN / IND), TC3",type:"airport-name-to-code"},75:{qno:75,word:"[AIRPORT] BOM",meaning:"孟買",detailed:"BOM, MUMBAI(BOM), India (IN / IND), TC3",type:"airport-name-to-code"},76:{qno:76,word:"[AIRPORT] LHR",meaning:"希斯洛 (倫敦)",detailed:"LHR, LONDON (HEATHROW)(LON), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},77:{qno:77,word:"[AIRPORT] LGW",meaning:"蓋威克 (倫敦)",detailed:"LGW, LONDON (GATWICK)(LON), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},78:{qno:78,word:"[AIRPORT] STN",meaning:"史坦斯特 (倫敦)",detailed:"STN, LONDON (STANSTED)(LON), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},79:{qno:79,word:"[AIRPORT] LTN",meaning:"魯頓 (倫敦)",detailed:"LTN, LONDON (LUTON)(LON), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},80:{qno:80,word:"[AIRPORT] BHX",meaning:"伯明罕",detailed:"BHX, BIRMINGHAM(BHX), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},81:{qno:81,word:"[AIRPORT] EDI",meaning:"愛丁堡",detailed:"EDI, EDINBURGH(EDI), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},82:{qno:82,word:"[AIRPORT] MAN",meaning:"曼徹斯特",detailed:"MAN, MANCHESTER(MAN), United Kingdom (GB / GBR), TC2",type:"airport-name-to-code"},83:{qno:83,word:"[AIRPORT] DUB",meaning:"都柏林",detailed:"DUB, DUBLIN(DUB), Ireland (IE / IRL), TC2",type:"airport-name-to-code"},84:{qno:84,word:"[AIRPORT] CDG",meaning:"戴高樂 (巴黎)",detailed:"CDG, CHARLESDE GAULLE(PAR), France (FR / FRA), TC2",type:"airport-name-to-code"},85:{qno:85,word:"[AIRPORT] ORY",meaning:"奧利 (巴黎)",detailed:"ORY, ORLY(PAR), France (FR / FRA), TC2",type:"airport-name-to-code"},86:{qno:86,word:"[AIRPORT] NCE",meaning:"尼斯",detailed:"NCE, NICE(NCE), France (FR / FRA), TC2",type:"airport-name-to-code"},87:{qno:87,word:"[AIRPORT] BER",meaning:"柏林",detailed:"BER, BERLIN(BER), Germany (DE / DEU), TC2",type:"airport-name-to-code"},88:{qno:88,word:"[AIRPORT] DUS",meaning:"杜塞道夫",detailed:"DUS, DUESSELDORF(DUS), Germany (DE / DEU), TC2",type:"airport-name-to-code"},89:{qno:89,word:"[AIRPORT] FRA",meaning:"法蘭克福",detailed:"FRA, FRANKFURT(FRA), Germany (DE / DEU), TC2",type:"airport-name-to-code"},90:{qno:90,word:"[AIRPORT] HAM",meaning:"漢堡",detailed:"HAM, HAMBURG(HAM), Germany (DE / DEU), TC2",type:"airport-name-to-code"},91:{qno:91,word:"[AIRPORT] HAJ",meaning:"漢諾威",detailed:"HAJ, HANNOVER(HAJ), Germany (DE / DEU), TC2",type:"airport-name-to-code"},92:{qno:92,word:"[AIRPORT] MUC",meaning:"慕尼黑",detailed:"MUC, MUNICH(MUC), Germany (DE / DEU), TC2",type:"airport-name-to-code"},93:{qno:93,word:"[AIRPORT] NUE",meaning:"紐倫堡",detailed:"NUE, NUREMBERG(NUE), Germany (DE / DEU), TC2",type:"airport-name-to-code"},94:{qno:94,word:"[AIRPORT] STR",meaning:"斯圖加特",detailed:"STR, STUTTGART(STR), Germany (DE / DEU), TC2",type:"airport-name-to-code"},95:{qno:95,word:"[AIRPORT] WAW",meaning:"華沙",detailed:"WAW, WARSAW(WAW), Poland (PL / POL), TC2",type:"airport-name-to-code"},96:{qno:96,word:"[AIRPORT] AMS",meaning:"阿姆斯特丹",detailed:"AMS, AMSTERDAM(AMS), Netherlands (NL / NLD), TC2",type:"airport-name-to-code"},97:{qno:97,word:"[AIRPORT] ZRH",meaning:"蘇黎世",detailed:"ZRH, ZURICH(ZRH), Switzerland (CH / CHE), TC2",type:"airport-name-to-code"},98:{qno:98,word:"[AIRPORT] GVA",meaning:"日內瓦",detailed:"GVA, GENEVA(GVA), Switzerland (CH / CHE), TC2",type:"airport-name-to-code"},99:{qno:99,word:"[AIRPORT] VIE",meaning:"維也納",detailed:"VIE, VIENNA(VIE), Austria (AT / AUT), TC2",type:"airport-name-to-code"},100:{qno:100,word:"[AIRPORT] SZG",meaning:"薩爾斯堡",detailed:"SZG, SALZBURG(SZG), Austria (AT / AUT), TC2",type:"airport-name-to-code"},101:{qno:101,word:"[AIRPORT] MAD",meaning:"馬德里",detailed:"MAD, MADRID(MAD), Spain (ES / ESP), TC2",type:"airport-name-to-code"},102:{qno:102,word:"[AIRPORT] BCN",meaning:"巴塞隆納",detailed:"BCN, BARCELONA(BCN), Spain (ES / ESP), TC2",type:"airport-name-to-code"},103:{qno:103,word:"[AIRPORT] LIS",meaning:"里斯本",detailed:"LIS, LISBON(LIS), Portugal (PT / PRT), TC2",type:"airport-name-to-code"},104:{qno:104,word:"[AIRPORT] FCO",meaning:"達文西 (羅馬)",detailed:"FCO, ROME (FIUMICINO)(ROM), Italy (IT / ITA), TC2",type:"airport-name-to-code"},105:{qno:105,word:"[AIRPORT] MXP",meaning:"馬芬莎 (米蘭)",detailed:"MXP, MILAN (MALPENSA)(MIL), Italy (IT / ITA), TC2",type:"airport-name-to-code"},106:{qno:106,word:"[AIRPORT] LIN",meaning:"利納德 (米蘭)",detailed:"LIN, MILAN (LINATE)(MIL), Italy (IT / ITA), TC2",type:"airport-name-to-code"},107:{qno:107,word:"[AIRPORT] VCE",meaning:"威尼斯",detailed:"VCE, VENICE(VCE), Italy (IT / ITA), TC2",type:"airport-name-to-code"},108:{qno:108,word:"[AIRPORT] ATH",meaning:"雅典",detailed:"ATH, ATHENS(ATH), Greece (GR / GRC), TC2",type:"airport-name-to-code"},109:{qno:109,word:"[AIRPORT] YOW",meaning:"渥太華",detailed:"YOW, OTTAWA(YOW), Canada (CA / CAN), TC1",type:"airport-name-to-code"},110:{qno:110,word:"[AIRPORT] YYZ",meaning:"多倫多",detailed:"YYZ, TORONTO(YTO), Canada (CA / CAN), TC1",type:"airport-name-to-code"},111:{qno:111,word:"[AIRPORT] YVR",meaning:"溫哥華",detailed:"YVR, VANCOUVER(YVR), Canada (CA / CAN), TC1",type:"airport-name-to-code"},112:{qno:112,word:"[AIRPORT] EWR",meaning:"紐華克 (紐約)",detailed:"EWR, NEWARK(NYC), United States (US / USA), TC1",type:"airport-name-to-code"},113:{qno:113,word:"[AIRPORT] JFK",meaning:"甘迺迪 (紐約)",detailed:"JFK, JOHN F KENNEDY(NYC), United States (US / USA), TC1",type:"airport-name-to-code"},114:{qno:114,word:"[AIRPORT] LGA",meaning:"拉瓜地 (紐約)",detailed:"LGA, LA GUARDIA(NYC), United States (US / USA), TC1",type:"airport-name-to-code"},115:{qno:115,word:"[AIRPORT] IAD",meaning:"杜勒斯 (華盛頓)",detailed:"IAD, DULLES(WAS), United States (US / USA), TC1",type:"airport-name-to-code"},116:{qno:116,word:"[AIRPORT] BWI",meaning:"巴爾的摩 (華盛頓)",detailed:"BWI, BALTIMORE(WAS), United States (US / USA), TC1",type:"airport-name-to-code"},117:{qno:117,word:"[AIRPORT] DCA",meaning:"雷根 (華盛頓)",detailed:"DCA, RONALD REAGAN(WAS), United States (US / USA), TC1",type:"airport-name-to-code"},118:{qno:118,word:"[AIRPORT] LAX",meaning:"洛杉磯 (加州)",detailed:"LAX, LOS ANGELES(LAX), United States (US / USA), TC1",type:"airport-name-to-code"},119:{qno:119,word:"[AIRPORT] SFO",meaning:"舊金山 (加州)",detailed:"SFO, SAN FRANCISCO(SFO), United States (US / USA), TC1",type:"airport-name-to-code"},120:{qno:120,word:"[AIRPORT] SEA",meaning:"西雅圖 (華盛頓州)",detailed:"SEA, SEATTLE(SEA), United States (US / USA), TC1",type:"airport-name-to-code"},121:{qno:121,word:"[AIRPORT] ATL",meaning:"亞特蘭大 (喬治亞州)",detailed:"ATL, ATLANTA(ATL), United States (US / USA), TC1",type:"airport-name-to-code"},122:{qno:122,word:"[AIRPORT] AUS",meaning:"奧斯汀 (德州)",detailed:"AUS, AUSTIN(AUS), United States (US / USA), TC1",type:"airport-name-to-code"},123:{qno:123,word:"[AIRPORT] BOS",meaning:"波士頓 (麻州)",detailed:"BOS, BOSTON(BOS), United States (US / USA), TC1",type:"airport-name-to-code"},124:{qno:124,word:"[AIRPORT] ORD",meaning:"芝加哥 (伊利諾州)",detailed:"ORD, CHICAGO(CHI), United States (US / USA), TC1",type:"airport-name-to-code"},125:{qno:125,word:"[AIRPORT] DEN",meaning:"丹佛 (科羅拉多州)",detailed:"DEN, DENVER(DEN), United States (US / USA), TC1",type:"airport-name-to-code"},126:{qno:126,word:"[AIRPORT] DTW",meaning:"底特律 (密西根州)",detailed:"DTW, DETROIT(DTT), United States (US / USA), TC1",type:"airport-name-to-code"},127:{qno:127,word:"[AIRPORT] HNL",meaning:"夏威夷檀香山",detailed:"HNL, HONOLULU(HNL), United States (US / USA), TC1",type:"airport-name-to-code"},128:{qno:128,word:"[AIRPORT] IAH",meaning:"休斯頓 (德州)",detailed:"IAH, HOUSTON(HOU), United States (US / USA), TC1",type:"airport-name-to-code"},129:{qno:129,word:"[AIRPORT] MIA",meaning:"邁阿密 (佛羅里達州)",detailed:"MIA, MIAMI(MIA), United States (US / USA), TC1",type:"airport-name-to-code"},130:{qno:130,word:"[AIRPORT] PHL",meaning:"費城 (賓夕法尼州)",detailed:"PHL, PHILADELPHIA(PHL), United States (US / USA), TC1",type:"airport-name-to-code"},131:{qno:131,word:"[AIRPORT] PHX",meaning:"鳳凰城 (亞利桑那州)",detailed:"PHX, PHOENIX(PHX), United States (US / USA), TC1",type:"airport-name-to-code"},132:{qno:132,word:"[AIRPORT] MEX",meaning:"墨西哥",detailed:"MEX, MEXICO CITY(MEX), Mexico (MX / MEX), TC1",type:"airport-name-to-code"},133:{qno:133,word:"[AIRPORT] PTY",meaning:"巴拿馬",detailed:"PTY, PANAMA CITY(PTY), Panama (PA / PAN), TC1",type:"airport-name-to-code"},134:{qno:134,word:"[AIRPORT] EZE",meaning:"布宜諾斯艾利斯",detailed:"EZE, BUENOS AIRES(BUE), Argentina (AR), TC1",type:"airport-name-to-code"},135:{qno:135,word:"桃園",meaning:"TPE",detailed:"桃園, TAOYUAN(TPE), Taiwan (TW / TWN), TC3",type:"airport-code-to-name"},136:{qno:136,word:"松山 (臺北)",meaning:"TSA",detailed:"松山 (臺北), TAIPEI(TPE), Taiwan (TW / TWN), TC3",type:"airport-code-to-name"},137:{qno:137,word:"臺中",meaning:"RMQ",detailed:"臺中, TAICHUNG(TXG), Taiwan (TW / TWN), TC3",type:"airport-code-to-name"},138:{qno:138,word:"高雄",meaning:"KHH",detailed:"高雄, KAOHSIUNG(KHH), Taiwan (TW / TWN), TC3",type:"airport-code-to-name"},139:{qno:139,word:"花蓮",meaning:"HUN",detailed:"花蓮, HUALIEN(HUN), Taiwan (TW / TWN), TC3",type:"airport-code-to-name"},140:{qno:140,word:"香港",meaning:"HKG",detailed:"香港, HONGKONG(HKG), Hong Kong (HK / HKG), TC3",type:"airport-code-to-name"},141:{qno:141,word:"澳門",meaning:"MFM",detailed:"澳門, MACAU(MFM), Macau (MO / MAC), TC3",type:"airport-code-to-name"},142:{qno:142,word:"北京",meaning:"PEK",detailed:"北京, BEIJING(BJS), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},143:{qno:143,word:"上海 (虹橋)",meaning:"SHA",detailed:"上海 (虹橋), SHANGHAI(SHA), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},144:{qno:144,word:"上海 (浦東)",meaning:"PVG",detailed:"上海 (浦東), SHANGHAI(SHA), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},145:{qno:145,word:"廣州",meaning:"CAN",detailed:"廣州, GUANGZHOU(CAN), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},146:{qno:146,word:"成都",meaning:"CTU",detailed:"成都, CHENGDU(CTU), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},147:{qno:147,word:"重慶",meaning:"CKG",detailed:"重慶, CHONGQING(CKG), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},148:{qno:148,word:"鄭州",meaning:"CGO",detailed:"鄭州, ZHENGZHOU(CGO), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},149:{qno:149,word:"長沙",meaning:"CSX",detailed:"長沙, CHANGSHA(CSX), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},150:{qno:150,word:"大連",meaning:"DLC",detailed:"大連, DALIAN(DLC), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},151:{qno:151,word:"福州",meaning:"FOC",detailed:"福州, FUZHOU(FOC), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},152:{qno:152,word:"海口",meaning:"HAK",detailed:"海口, HAIKOU(HAK), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},153:{qno:153,word:"合肥",meaning:"HFE",detailed:"合肥, HEFEI(HFE), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},154:{qno:154,word:"杭州",meaning:"HGH",detailed:"杭州, HANGZHOU(HGH), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},155:{qno:155,word:"哈爾濱",meaning:"HRB",detailed:"哈爾濱, HARBIN(HRB), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},156:{qno:156,word:"貴陽",meaning:"KWE",detailed:"貴陽, GUIYANG(KWE), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},157:{qno:157,word:"昆明",meaning:"KMG",detailed:"昆明, KUNMING(KMG), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},158:{qno:158,word:"桂林",meaning:"KWL",detailed:"桂林, GUILIN(KWL), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},159:{qno:159,word:"寧波",meaning:"NGB",detailed:"寧波, NINGBO(NGB), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},160:{qno:160,word:"南京",meaning:"NKG",detailed:"南京, NANJING(NKG), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},161:{qno:161,word:"南寧",meaning:"NNG",detailed:"南寧, NANNING(NNG), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},162:{qno:162,word:"瀋陽",meaning:"SHE",detailed:"瀋陽, SHENYANG(SHE), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},163:{qno:163,word:"三亞",meaning:"SYX",detailed:"三亞, SANYA(SYX), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},164:{qno:164,word:"青島",meaning:"TAO",detailed:"青島, QINGDAO(TAO), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},165:{qno:165,word:"濟南",meaning:"TNA",detailed:"濟南, JINAN(TNA), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},166:{qno:166,word:"天津",meaning:"TSN",detailed:"天津, TIANJIN(TSN), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},167:{qno:167,word:"溫州",meaning:"WNZ",detailed:"溫州, WENZHOU(WNZ), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},168:{qno:168,word:"武漢",meaning:"WUH",detailed:"武漢, WUHAN(WUH), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},169:{qno:169,word:"無錫",meaning:"WUX",detailed:"無錫, WUXI(WUX), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},170:{qno:170,word:"西安",meaning:"XIY",detailed:"西安, XI AN(SIA), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},171:{qno:171,word:"廈門",meaning:"XMN",detailed:"廈門, XIAMEN(XMN), Mainland China (CN / CHN), TC3",type:"airport-code-to-name"},172:{qno:172,word:"成田 (東京)",meaning:"NRT",detailed:"成田 (東京), NARITA TOKYO(TYO), Japan (JP / JPN), TC3",type:"airport-code-to-name"},173:{qno:173,word:"羽田 (東京)",meaning:"HND",detailed:"羽田 (東京), HANEDA TOKYO(TYO), Japan (JP / JPN), TC3",type:"airport-code-to-name"},174:{qno:174,word:"大阪",meaning:"KIX",detailed:"大阪, OSAKA(OSA), Japan (JP / JPN), TC3",type:"airport-code-to-name"},175:{qno:175,word:"名古屋",meaning:"NGO",detailed:"名古屋, NAGOYA(NGO), Japan (JP / JPN), TC3",type:"airport-code-to-name"},176:{qno:176,word:"琉球",meaning:"OKA",detailed:"琉球, OKINAWA(OKA), Japan (JP / JPN), TC3",type:"airport-code-to-name"},177:{qno:177,word:"福岡",meaning:"FUK",detailed:"福岡, FUKUOKA(FUK), Japan (JP / JPN), TC3",type:"airport-code-to-name"},178:{qno:178,word:"順安 (平壤)",meaning:"FNJ",detailed:"順安 (平壤), PYONGYANG(FNJ), North Korea (KP / PRK), TC3",type:"airport-code-to-name"},179:{qno:179,word:"首爾",meaning:"ICN",detailed:"首爾, SEOUL(SEL), South Korea (KR / KOR), TC3",type:"airport-code-to-name"},180:{qno:180,word:"釜山",meaning:"PUS",detailed:"釜山, BUSAN(PUS), South Korea (KR / KOR), TC3",type:"airport-code-to-name"},181:{qno:181,word:"濟州島",meaning:"CJU",detailed:"濟州島, JEJU(CJU), South Korea (KR / KOR), TC3",type:"airport-code-to-name"},182:{qno:182,word:"曼谷",meaning:"BKK",detailed:"曼谷, BANGKOK(BKK), Thailand (TH / THA), TC3",type:"airport-code-to-name"},183:{qno:183,word:"普吉島",meaning:"HKT",detailed:"普吉島, PHUKET(HKT), Thailand (TH / THA), TC3",type:"airport-code-to-name"},184:{qno:184,word:"清邁",meaning:"CNX",detailed:"清邁, CHIANG MAI(CNX), Thailand (TH / THA), TC3",type:"airport-code-to-name"},185:{qno:185,word:"新加坡",meaning:"SIN",detailed:"新加坡, SINGAPORE(SIN), Singapore (SG / SGP), TC3",type:"airport-code-to-name"},186:{qno:186,word:"吉隆坡",meaning:"KUL",detailed:"吉隆坡, KUALA LUMPUR(KUL), Malaysia (MY / MYS), TC3",type:"airport-code-to-name"},187:{qno:187,word:"沙巴 (亞庇)",meaning:"BKI",detailed:"沙巴 (亞庇), KOTA KINABALU(BKI), Malaysia (MY / MYS), TC3",type:"airport-code-to-name"},188:{qno:188,word:"古晉",meaning:"KCH",detailed:"古晉, KUCHING(KCH), Malaysia (MY / MYS), TC3",type:"airport-code-to-name"},189:{qno:189,word:"檳城",meaning:"PEN",detailed:"檳城, PENANG(PEN), Malaysia (MY / MYS), TC3",type:"airport-code-to-name"},190:{qno:190,word:"雅加達",meaning:"CGK",detailed:"雅加達, JAKARTA(JKT), Indonesia (ID / IDN), TC3",type:"airport-code-to-name"},191:{qno:191,word:"峇里島",meaning:"DPS",detailed:"峇里島, DENPASAR BALI(DPS), Indonesia (ID / IDN), TC3",type:"airport-code-to-name"},192:{qno:192,word:"泗水",meaning:"SUB",detailed:"泗水, SURABAYA(SUB), Indonesia (ID / IDN), TC3",type:"airport-code-to-name"},193:{qno:193,word:"胡志明市",meaning:"SGN",detailed:"胡志明市, HO CHI MINH CITY(SGN), Vietnam (VN / VNM), TC3",type:"airport-code-to-name"},194:{qno:194,word:"河內",meaning:"HAN",detailed:"河內, HANOI(HAN), Vietnam (VN / VNM), TC3",type:"airport-code-to-name"},195:{qno:195,word:"峴港",meaning:"DAD",detailed:"峴港, DA NANG(DAD), Vietnam (VN / VNM), TC3",type:"airport-code-to-name"},196:{qno:196,word:"馬尼拉",meaning:"MNL",detailed:"馬尼拉, MANILA(MNL), Philippines (PH / PHL), TC3",type:"airport-code-to-name"},197:{qno:197,word:"宿霧",meaning:"CEB",detailed:"宿霧, CEBU(CEB), Philippines (PH / PHL), TC3",type:"airport-code-to-name"},198:{qno:198,word:"佬沃",meaning:"LAO",detailed:"佬沃, LAOAG(LAO), Philippines (PH / PHL), TC3",type:"airport-code-to-name"},199:{qno:199,word:"阿德雷得",meaning:"ADL",detailed:"阿德雷得, ADELAIDE(ADL), Australia (AU / AUS), TC3",type:"airport-code-to-name"},200:{qno:200,word:"布里斯班",meaning:"BNE",detailed:"布里斯班, BRISBANE(BNE), Australia (AU / AUS), TC3",type:"airport-code-to-name"},201:{qno:201,word:"坎培拉",meaning:"CBR",detailed:"坎培拉, CANBERRA(CBR), Australia (AU / AUS), TC3",type:"airport-code-to-name"},202:{qno:202,word:"凱恩斯",meaning:"CNS",detailed:"凱恩斯, CAIRNS(CNS), Australia (AU / AUS), TC3",type:"airport-code-to-name"},203:{qno:203,word:"墨爾本",meaning:"MEL",detailed:"墨爾本, MELBOURNE(MEL), Australia (AU / AUS), TC3",type:"airport-code-to-name"},204:{qno:204,word:"伯斯",meaning:"PER",detailed:"伯斯, PERTH(PER), Australia (AU / AUS), TC3",type:"airport-code-to-name"},205:{qno:205,word:"雪梨",meaning:"SYD",detailed:"雪梨, SYDNEY(SYD), Australia (AU / AUS), TC3",type:"airport-code-to-name"},206:{qno:206,word:"奧克蘭",meaning:"AKL",detailed:"奧克蘭, AUCKLAND(AKL), New Zealand (NZ / NZL), TC3",type:"airport-code-to-name"},207:{qno:207,word:"基督城",meaning:"CHC",detailed:"基督城, CHRISTCHURCH(CHC), New Zealand (NZ / NZL), TC3",type:"airport-code-to-name"},208:{qno:208,word:"德里",meaning:"DEL",detailed:"德里, DELHI(DEL), India (IN / IND), TC3",type:"airport-code-to-name"},209:{qno:209,word:"孟買",meaning:"BOM",detailed:"孟買, MUMBAI(BOM), India (IN / IND), TC3",type:"airport-code-to-name"},210:{qno:210,word:"希斯洛 (倫敦)",meaning:"LHR",detailed:"希斯洛 (倫敦), LONDON (HEATHROW)(LON), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},211:{qno:211,word:"蓋威克 (倫敦)",meaning:"LGW",detailed:"蓋威克 (倫敦), LONDON (GATWICK)(LON), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},212:{qno:212,word:"史坦斯特 (倫敦)",meaning:"STN",detailed:"史坦斯特 (倫敦), LONDON (STANSTED)(LON), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},213:{qno:213,word:"魯頓 (倫敦)",meaning:"LTN",detailed:"魯頓 (倫敦), LONDON (LUTON)(LON), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},214:{qno:214,word:"伯明罕",meaning:"BHX",detailed:"伯明罕, BIRMINGHAM(BHX), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},215:{qno:215,word:"愛丁堡",meaning:"EDI",detailed:"愛丁堡, EDINBURGH(EDI), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},216:{qno:216,word:"曼徹斯特",meaning:"MAN",detailed:"曼徹斯特, MANCHESTER(MAN), United Kingdom (GB / GBR), TC2",type:"airport-code-to-name"},217:{qno:217,word:"都柏林",meaning:"DUB",detailed:"都柏林, DUBLIN(DUB), Ireland (IE / IRL), TC2",type:"airport-code-to-name"},218:{qno:218,word:"戴高樂 (巴黎)",meaning:"CDG",detailed:"戴高樂 (巴黎), CHARLESDE GAULLE(PAR), France (FR / FRA), TC2",type:"airport-code-to-name"},219:{qno:219,word:"奧利 (巴黎)",meaning:"ORY",detailed:"奧利 (巴黎), ORLY(PAR), France (FR / FRA), TC2",type:"airport-code-to-name"},220:{qno:220,word:"尼斯",meaning:"NCE",detailed:"尼斯, NICE(NCE), France (FR / FRA), TC2",type:"airport-code-to-name"},221:{qno:221,word:"柏林",meaning:"BER",detailed:"柏林, BERLIN(BER), Germany (DE / DEU), TC2",type:"airport-code-to-name"},222:{qno:222,word:"杜塞道夫",meaning:"DUS",detailed:"杜塞道夫, DUESSELDORF(DUS), Germany (DE / DEU), TC2",type:"airport-code-to-name"},223:{qno:223,word:"法蘭克福",meaning:"FRA",detailed:"法蘭克福, FRANKFURT(FRA), Germany (DE / DEU), TC2",type:"airport-code-to-name"},224:{qno:224,word:"漢堡",meaning:"HAM",detailed:"漢堡, HAMBURG(HAM), Germany (DE / DEU), TC2",type:"airport-code-to-name"},225:{qno:225,word:"漢諾威",meaning:"HAJ",detailed:"漢諾威, HANNOVER(HAJ), Germany (DE / DEU), TC2",type:"airport-code-to-name"},226:{qno:226,word:"慕尼黑",meaning:"MUC",detailed:"慕尼黑, MUNICH(MUC), Germany (DE / DEU), TC2",type:"airport-code-to-name"},227:{qno:227,word:"紐倫堡",meaning:"NUE",detailed:"紐倫堡, NUREMBERG(NUE), Germany (DE / DEU), TC2",type:"airport-code-to-name"},228:{qno:228,word:"斯圖加特",meaning:"STR",detailed:"斯圖加特, STUTTGART(STR), Germany (DE / DEU), TC2",type:"airport-code-to-name"},229:{qno:229,word:"華沙",meaning:"WAW",detailed:"華沙, WARSAW(WAW), Poland (PL / POL), TC2",type:"airport-code-to-name"},230:{qno:230,word:"阿姆斯特丹",meaning:"AMS",detailed:"阿姆斯特丹, AMSTERDAM(AMS), Netherlands (NL / NLD), TC2",type:"airport-code-to-name"},231:{qno:231,word:"蘇黎世",meaning:"ZRH",detailed:"蘇黎世, ZURICH(ZRH), Switzerland (CH / CHE), TC2",type:"airport-code-to-name"},232:{qno:232,word:"日內瓦",meaning:"GVA",detailed:"日內瓦, GENEVA(GVA), Switzerland (CH / CHE), TC2",type:"airport-code-to-name"},233:{qno:233,word:"維也納",meaning:"VIE",detailed:"維也納, VIENNA(VIE), Austria (AT / AUT), TC2",type:"airport-code-to-name"},234:{qno:234,word:"薩爾斯堡",meaning:"SZG",detailed:"薩爾斯堡, SALZBURG(SZG), Austria (AT / AUT), TC2",type:"airport-code-to-name"},235:{qno:235,word:"馬德里",meaning:"MAD",detailed:"馬德里, MADRID(MAD), Spain (ES / ESP), TC2",type:"airport-code-to-name"},236:{qno:236,word:"巴塞隆納",meaning:"BCN",detailed:"巴塞隆納, BARCELONA(BCN), Spain (ES / ESP), TC2",type:"airport-code-to-name"},237:{qno:237,word:"里斯本",meaning:"LIS",detailed:"里斯本, LISBON(LIS), Portugal (PT / PRT), TC2",type:"airport-code-to-name"},238:{qno:238,word:"達文西 (羅馬)",meaning:"FCO",detailed:"達文西 (羅馬), ROME (FIUMICINO)(ROM), Italy (IT / ITA), TC2",type:"airport-code-to-name"},239:{qno:239,word:"馬芬莎 (米蘭)",meaning:"MXP",detailed:"馬芬莎 (米蘭), MILAN (MALPENSA)(MIL), Italy (IT / ITA), TC2",type:"airport-code-to-name"},240:{qno:240,word:"利納德 (米蘭)",meaning:"LIN",detailed:"利納德 (米蘭), MILAN (LINATE)(MIL), Italy (IT / ITA), TC2",type:"airport-code-to-name"},241:{qno:241,word:"威尼斯",meaning:"VCE",detailed:"威尼斯, VENICE(VCE), Italy (IT / ITA), TC2",type:"airport-code-to-name"},242:{qno:242,word:"雅典",meaning:"ATH",detailed:"雅典, ATHENS(ATH), Greece (GR / GRC), TC2",type:"airport-code-to-name"},243:{qno:243,word:"渥太華",meaning:"YOW",detailed:"渥太華, OTTAWA(YOW), Canada (CA / CAN), TC1",type:"airport-code-to-name"},244:{qno:244,word:"多倫多",meaning:"YYZ",detailed:"多倫多, TORONTO(YTO), Canada (CA / CAN), TC1",type:"airport-code-to-name"},245:{qno:245,word:"溫哥華",meaning:"YVR",detailed:"溫哥華, VANCOUVER(YVR), Canada (CA / CAN), TC1",type:"airport-code-to-name"},246:{qno:246,word:"紐華克 (紐約)",meaning:"EWR",detailed:"紐華克 (紐約), NEWARK(NYC), United States (US / USA), TC1",type:"airport-code-to-name"},247:{qno:247,word:"甘迺迪 (紐約)",meaning:"JFK",detailed:"甘迺迪 (紐約), JOHN F KENNEDY(NYC), United States (US / USA), TC1",type:"airport-code-to-name"},248:{qno:248,word:"拉瓜地 (紐約)",meaning:"LGA",detailed:"拉瓜地 (紐約), LA GUARDIA(NYC), United States (US / USA), TC1",type:"airport-code-to-name"},249:{qno:249,word:"杜勒斯 (華盛頓)",meaning:"IAD",detailed:"杜勒斯 (華盛頓), DULLES(WAS), United States (US / USA), TC1",type:"airport-code-to-name"},250:{qno:250,word:"巴爾的摩 (華盛頓)",meaning:"BWI",detailed:"巴爾的摩 (華盛頓), BALTIMORE(WAS), United States (US / USA), TC1",type:"airport-code-to-name"},251:{qno:251,word:"雷根 (華盛頓)",meaning:"DCA",detailed:"雷根 (華盛頓), RONALD REAGAN(WAS), United States (US / USA), TC1",type:"airport-code-to-name"},252:{qno:252,word:"洛杉磯 (加州)",meaning:"LAX",detailed:"洛杉磯 (加州), LOS ANGELES(LAX), United States (US / USA), TC1",type:"airport-code-to-name"},253:{qno:253,word:"舊金山 (加州)",meaning:"SFO",detailed:"舊金山 (加州), SAN FRANCISCO(SFO), United States (US / USA), TC1",type:"airport-code-to-name"},254:{qno:254,word:"西雅圖 (華盛頓州)",meaning:"SEA",detailed:"西雅圖 (華盛頓州), SEATTLE(SEA), United States (US / USA), TC1",type:"airport-code-to-name"},255:{qno:255,word:"亞特蘭大 (喬治亞州)",meaning:"ATL",detailed:"亞特蘭大 (喬治亞州), ATLANTA(ATL), United States (US / USA), TC1",type:"airport-code-to-name"},256:{qno:256,word:"奧斯汀 (德州)",meaning:"AUS",detailed:"奧斯汀 (德州), AUSTIN(AUS), United States (US / USA), TC1",type:"airport-code-to-name"},257:{qno:257,word:"波士頓 (麻州)",meaning:"BOS",detailed:"波士頓 (麻州), BOSTON(BOS), United States (US / USA), TC1",type:"airport-code-to-name"},258:{qno:258,word:"芝加哥 (伊利諾州)",meaning:"ORD",detailed:"芝加哥 (伊利諾州), CHICAGO(CHI), United States (US / USA), TC1",type:"airport-code-to-name"},259:{qno:259,word:"丹佛 (科羅拉多州)",meaning:"DEN",detailed:"丹佛 (科羅拉多州), DENVER(DEN), United States (US / USA), TC1",type:"airport-code-to-name"},260:{qno:260,word:"底特律 (密西根州)",meaning:"DTW",detailed:"底特律 (密西根州), DETROIT(DTT), United States (US / USA), TC1",type:"airport-code-to-name"},261:{qno:261,word:"夏威夷檀香山",meaning:"HNL",detailed:"夏威夷檀香山, HONOLULU(HNL), United States (US / USA), TC1",type:"airport-code-to-name"},262:{qno:262,word:"休斯頓 (德州)",meaning:"IAH",detailed:"休斯頓 (德州), HOUSTON(HOU), United States (US / USA), TC1",type:"airport-code-to-name"},263:{qno:263,word:"邁阿密 (佛羅里達州)",meaning:"MIA",detailed:"邁阿密 (佛羅里達州), MIAMI(MIA), United States (US / USA), TC1",type:"airport-code-to-name"},264:{qno:264,word:"費城 (賓夕法尼州)",meaning:"PHL",detailed:"費城 (賓夕法尼州), PHILADELPHIA(PHL), United States (US / USA), TC1",type:"airport-code-to-name"},265:{qno:265,word:"鳳凰城 (亞利桑那州)",meaning:"PHX",detailed:"鳳凰城 (亞利桑那州), PHOENIX(PHX), United States (US / USA), TC1",type:"airport-code-to-name"},266:{qno:266,word:"墨西哥",meaning:"MEX",detailed:"墨西哥, MEXICO CITY(MEX), Mexico (MX / MEX), TC1",type:"airport-code-to-name"},267:{qno:267,word:"巴拿馬",meaning:"PTY",detailed:"巴拿馬, PANAMA CITY(PTY), Panama (PA / PAN), TC1",type:"airport-code-to-name"},268:{qno:268,word:"布宜諾斯艾利斯",meaning:"EZE",detailed:"布宜諾斯艾利斯, BUENOS AIRES(BUE), Argentina (AR), TC1",type:"airport-code-to-name"},269:{qno:269,word:"中華航空 (CHINA AIRLINES)",meaning:"CI (297)",detailed:"中華航空 (CHINA AIRLINES), TW, 第一航廈、第二航廈(美、加、澳、日與兩岸線)",type:"airport-company-name-to-code"},270:{qno:270,word:"長榮航空 (EVA AIRWAYS)",meaning:"BR (695)",detailed:"長榮航空 (EVA AIRWAYS), TW, 第二航廈",type:"airport-company-name-to-code"},271:{qno:271,word:"星宇航空 (STARLUX AIRLINES)",meaning:"JX (189)",detailed:"星宇航空 (STARLUX AIRLINES), TW, 第一航廈",type:"airport-company-name-to-code"},272:{qno:272,word:"華信航空 (MANDARIN AIRLINES)",meaning:"AE (803)",detailed:"華信航空 (MANDARIN AIRLINES), TW, 第一航廈、第二航廈(兩岸線)",type:"airport-company-name-to-code"},273:{qno:273,word:"立榮航空 (UNI AIRWAYS)",meaning:"B7 (525)",detailed:"立榮航空 (UNI AIRWAYS), TW, 第二航廈",type:"airport-company-name-to-code"},274:{qno:274,word:"台灣虎航 (TIGERAIR TAIWAN)",meaning:"IT (608)",detailed:"台灣虎航 (TIGERAIR TAIWAN), TW, 第一航廈",type:"airport-company-name-to-code"},275:{qno:275,word:"日本航空 (JAPAN AIRLINES)",meaning:"JL (131)",detailed:"日本航空 (JAPAN AIRLINES), JP, 第二航廈",type:"airport-company-name-to-code"},276:{qno:276,word:"全日空 (ALL NIPPON AIRWAYS)",meaning:"NH (205)",detailed:"全日空 (ALL NIPPON AIRWAYS), JP, 第二航廈",type:"airport-company-name-to-code"},277:{qno:277,word:"韓國航空 (KOREAN AIR)",meaning:"KE (180)",detailed:"韓國航空 (KOREAN AIR), KR, 第一航廈",type:"airport-company-name-to-code"},278:{qno:278,word:"真航空 (JIN AIR)",meaning:"LJ (718)",detailed:"真航空 (JIN AIR), KR, 第一航廈",type:"airport-company-name-to-code"},279:{qno:279,word:"韓亞航空 (ASIANA AIRLINES)",meaning:"OZ (988)",detailed:"韓亞航空 (ASIANA AIRLINES), KR, 第二航廈",type:"airport-company-name-to-code"},280:{qno:280,word:"德威航空 (TWAY AIR)",meaning:"TW (722)",detailed:"德威航空 (TWAY AIR), KR, 第一航廈",type:"airport-company-name-to-code"},281:{qno:281,word:"國泰航空 (CATHAY PACIFIC)",meaning:"CX (160)",detailed:"國泰航空 (CATHAY PACIFIC), HK, 第一航廈",type:"airport-company-name-to-code"},282:{qno:282,word:"香港快運 (HONG KONG EXPRESS AIRWAYS)",meaning:"UO (128)",detailed:"香港快運 (HONG KONG EXPRESS AIRWAYS), HK, 第一航廈",type:"airport-company-name-to-code"},283:{qno:283,word:"香港航空 (HONG KONG AIRLINES)",meaning:"HX (851)",detailed:"香港航空 (HONG KONG AIRLINES), HK, 第二航廈",type:"airport-company-name-to-code"},284:{qno:284,word:"澳門航空 (AIR MACAU)",meaning:"NX (675)",detailed:"澳門航空 (AIR MACAU), HK, 第一航廈",type:"airport-company-name-to-code"},285:{qno:285,word:"中國國際航空 (AIR CHINA)",meaning:"CA (999)",detailed:"中國國際航空 (AIR CHINA), CN, 第二航廈",type:"airport-company-name-to-code"},286:{qno:286,word:"中國東方航空 (CHINA EASTERN AIRLINES)",meaning:"MU (781)",detailed:"中國東方航空 (CHINA EASTERN AIRLINES), CN, 第二航廈",type:"airport-company-name-to-code"},287:{qno:287,word:"中國南方航空 (CHINA SOUTHERN AIRLINES)",meaning:"CZ (784)",detailed:"中國南方航空 (CHINA SOUTHERN AIRLINES), CN, 第二航廈",type:"airport-company-name-to-code"},289:{qno:289,word:"四川航空 (SICHUAN AIRLINES)",meaning:"3U (876)",detailed:"四川航空 (SICHUAN AIRLINES), CN, 第一航廈",type:"airport-company-name-to-code"},290:{qno:290,word:"山東航空 (SHANDONG AIRLINES)",meaning:"SC (324)",detailed:"山東航空 (SHANDONG AIRLINES), CN, 第二航廈",type:"airport-company-name-to-code"},291:{qno:291,word:"深圳航空 (SHENZHEN AIRLINES)",meaning:"ZH (479)",detailed:"深圳航空 (SHENZHEN AIRLINES), CN, 第二航廈",type:"airport-company-name-to-code"},293:{qno:293,word:"廈門航空 (XIAMEN AIRLINES)",meaning:"MF (731)",detailed:"廈門航空 (XIAMEN AIRLINES), CN, 第二航廈",type:"airport-company-name-to-code"},294:{qno:294,word:"海南航空 (HAINAN AIRLINES)",meaning:"HU (880)",detailed:"海南航空 (HAINAN AIRLINES), CN, 第二航廈",type:"airport-company-name-to-code"},296:{qno:296,word:"亞洲航空 (AIRASIA SDN BHD)",meaning:"AK (807)",detailed:"亞洲航空 (AIRASIA SDN BHD), MY, 第一航廈",type:"airport-company-name-to-code"},298:{qno:298,word:"汶萊皇家航空 (ROYAL BRUNEI)",meaning:"BI (672)",detailed:"汶萊皇家航空 (ROYAL BRUNEI), BN, 第一航廈",type:"airport-company-name-to-code"},299:{qno:299,word:"亞航X (AIRASIA X)",meaning:"D7 (843)",detailed:"亞航X (AIRASIA X), MY, 第一航廈",type:"airport-company-name-to-code"},300:{qno:300,word:"泰國亞洲航空 (THAI AIRASIA)",meaning:"FD (900)",detailed:"泰國亞洲航空 (THAI AIRASIA), TH, 第一航廈",type:"airport-company-name-to-code"},301:{qno:301,word:"泰國航空 (THAI AIRWAYS INTERNATIONAL)",meaning:"TG (217)",detailed:"泰國航空 (THAI AIRWAYS INTERNATIONAL), TH, 第一航廈",type:"airport-company-name-to-code"},308:{qno:308,word:"馬來西亞航空 (MALAYSIA AIRLINES)",meaning:"MH (232)",detailed:"馬來西亞航空 (MALAYSIA AIRLINES), MY, 第一航廈",type:"airport-company-name-to-code"},310:{qno:310,word:"菲律賓航空 (PHILIPPINE AIRLINES)",meaning:"PR (079)",detailed:"菲律賓航空 (PHILIPPINE AIRLINES), PH, 第一航廈",type:"airport-company-name-to-code"},312:{qno:312,word:"新加坡航空 (SINGAPORE AIRLINES)",meaning:"SQ (618)",detailed:"新加坡航空 (SINGAPORE AIRLINES), SG, 第二航廈",type:"airport-company-name-to-code"},313:{qno:313,word:"新加坡虎航 (TIGER AIRWAYS)",meaning:"TR (388)",detailed:"新加坡虎航 (TIGER AIRWAYS), SG, 第一航廈",type:"airport-company-name-to-code"},315:{qno:315,word:"越南航空 (VIETNAM AIRLINES)",meaning:"VN (738)",detailed:"越南航空 (VIETNAM AIRLINES), VN, 第一航廈",type:"airport-company-name-to-code"},318:{qno:318,word:"紐西蘭航空 (AIR NEW ZEALAND)",meaning:"NZ (086)",detailed:"紐西蘭航空 (AIR NEW ZEALAND), NZ, 第二航廈",type:"airport-company-name-to-code"},321:{qno:321,word:"聯合航空 (UNITED AIRLINES)",meaning:"UA (016)",detailed:"聯合航空 (UNITED AIRLINES), US, 第二航廈",type:"airport-company-name-to-code"},323:{qno:323,word:"加拿大航空 (AIR CANADA)",meaning:"AC (014)",detailed:"加拿大航空 (AIR CANADA), CA, 第二航廈",type:"airport-company-name-to-code"},330:{qno:330,word:"CI (297)",meaning:"中華航空 (CHINA AIRLINES)",detailed:"CI (297), TW, 第一航廈、第二航廈(美、加、澳、日與兩岸線)",type:"airport-company-code-to-name"},331:{qno:331,word:"BR (695)",meaning:"長榮航空 (EVA AIRWAYS)",detailed:"BR (695), TW, 第二航廈",type:"airport-company-code-to-name"},332:{qno:332,word:"JX (189)",meaning:"星宇航空 (STARLUX AIRLINES)",detailed:"JX (189), TW, 第一航廈",type:"airport-company-code-to-name"},333:{qno:333,word:"AE (803)",meaning:"華信航空 (MANDARIN AIRLINES)",detailed:"AE (803), TW, 第一航廈、第二航廈(兩岸線)",type:"airport-company-code-to-name"},334:{qno:334,word:"B7 (525)",meaning:"立榮航空 (UNI AIRWAYS)",detailed:"B7 (525), TW, 第二航廈",type:"airport-company-code-to-name"},335:{qno:335,word:"IT (608)",meaning:"台灣虎航 (TIGERAIR TAIWAN)",detailed:"IT (608), TW, 第一航廈",type:"airport-company-code-to-name"},336:{qno:336,word:"JL (131)",meaning:"日本航空 (JAPAN AIRLINES)",detailed:"JL (131), JP, 第二航廈",type:"airport-company-code-to-name"},337:{qno:337,word:"NH (205)",meaning:"全日空 (ALL NIPPON AIRWAYS)",detailed:"NH (205), JP, 第二航廈",type:"airport-company-code-to-name"},338:{qno:338,word:"KE (180)",meaning:"韓國航空 (KOREAN AIR)",detailed:"KE (180), KR, 第一航廈",type:"airport-company-code-to-name"},339:{qno:339,word:"LJ (718)",meaning:"真航空 (JIN AIR)",detailed:"LJ (718), KR, 第一航廈",type:"airport-company-code-to-name"},340:{qno:340,word:"OZ (988)",meaning:"韓亞航空 (ASIANA AIRLINES)",detailed:"OZ (988), KR, 第二航廈",type:"airport-company-code-to-name"},341:{qno:341,word:"TW (722)",meaning:"德威航空 (TWAY AIR)",detailed:"TW (722), KR, 第一航廈",type:"airport-company-code-to-name"},342:{qno:342,word:"CX (160)",meaning:"國泰航空 (CATHAY PACIFIC)",detailed:"CX (160), HK, 第一航廈",type:"airport-company-code-to-name"},343:{qno:343,word:"UO (128)",meaning:"香港快運 (HONG KONG EXPRESS AIRWAYS)",detailed:"UO (128), HK, 第一航廈",type:"airport-company-code-to-name"},344:{qno:344,word:"HX (851)",meaning:"香港航空 (HONG KONG AIRLINES)",detailed:"HX (851), HK, 第二航廈",type:"airport-company-code-to-name"},345:{qno:345,word:"NX (675)",meaning:"澳門航空 (AIR MACAU)",detailed:"NX (675), HK, 第一航廈",type:"airport-company-code-to-name"},346:{qno:346,word:"CA (999)",meaning:"中國國際航空 (AIR CHINA)",detailed:"CA (999), CN, 第二航廈",type:"airport-company-code-to-name"},347:{qno:347,word:"MU (781)",meaning:"中國東方航空 (CHINA EASTERN AIRLINES)",detailed:"MU (781), CN, 第二航廈",type:"airport-company-code-to-name"},348:{qno:348,word:"CZ (784)",meaning:"中國南方航空 (CHINA SOUTHERN AIRLINES)",detailed:"CZ (784), CN, 第二航廈",type:"airport-company-code-to-name"},350:{qno:350,word:"3U (876)",meaning:"四川航空 (SICHUAN AIRLINES)",detailed:"3U (876), CN, 第一航廈",type:"airport-company-code-to-name"},351:{qno:351,word:"SC (324)",meaning:"山東航空 (SHANDONG AIRLINES)",detailed:"SC (324), CN, 第二航廈",type:"airport-company-code-to-name"},352:{qno:352,word:"ZH (479)",meaning:"深圳航空 (SHENZHEN AIRLINES)",detailed:"ZH (479), CN, 第二航廈",type:"airport-company-code-to-name"},354:{qno:354,word:"MF (731)",meaning:"廈門航空 (XIAMEN AIRLINES)",detailed:"MF (731), CN, 第二航廈",type:"airport-company-code-to-name"},355:{qno:355,word:"HU (880)",meaning:"海南航空 (HAINAN AIRLINES)",detailed:"HU (880), CN, 第二航廈",type:"airport-company-code-to-name"},357:{qno:357,word:"AK (807)",meaning:"亞洲航空 (AIRASIA SDN BHD)",detailed:"AK (807), MY, 第一航廈",type:"airport-company-code-to-name"},359:{qno:359,word:"BI (672)",meaning:"汶萊皇家航空 (ROYAL BRUNEI)",detailed:"BI (672), BN, 第一航廈",type:"airport-company-code-to-name"},360:{qno:360,word:"D7 (843)",meaning:"亞航X (AIRASIA X)",detailed:"D7 (843), MY, 第一航廈",type:"airport-company-code-to-name"},361:{qno:361,word:"FD (900)",meaning:"泰國亞洲航空 (THAI AIRASIA)",detailed:"FD (900), TH, 第一航廈",type:"airport-company-code-to-name"},362:{qno:362,word:"TG (217)",meaning:"泰國航空 (THAI AIRWAYS INTERNATIONAL)",detailed:"TG (217), TH, 第一航廈",type:"airport-company-code-to-name"},367:{qno:367,word:"土耳其航空 (TURKISH AIRLINES)",meaning:"TK (235)",detailed:"土耳其航空 (TURKISH AIRLINES), TR, 第二航廈",type:"airport-company-name-to-code"},369:{qno:369,word:"MH (232)",meaning:"馬來西亞航空 (MALAYSIA AIRLINES)",detailed:"MH (232), MY, 第一航廈",type:"airport-company-code-to-name"},371:{qno:371,word:"PR (079)",meaning:"菲律賓航空 (PHILIPPINE AIRLINES)",detailed:"PR (079), PH, 第一航廈",type:"airport-company-code-to-name"},373:{qno:373,word:"SQ (618)",meaning:"新加坡航空 (SINGAPORE AIRLINES)",detailed:"SQ (618), SG, 第二航廈",type:"airport-company-code-to-name"},374:{qno:374,word:"TR (388)",meaning:"新加坡虎航 (TIGER AIRWAYS)",detailed:"TR (388), SG, 第一航廈",type:"airport-company-code-to-name"},376:{qno:376,word:"VN (738)",meaning:"越南航空 (VIETNAM AIRLINES)",detailed:"VN (738), VN, 第一航廈",type:"airport-company-code-to-name"},378:{qno:378,word:"捷星亞洲航空 (JETSTAR ASIA AIRWAYS)",meaning:"3K (000)",detailed:"捷星亞洲航空 (JETSTAR ASIA AIRWAYS), SG, 第一航廈",type:"airport-company-name-to-code"},379:{qno:379,word:"NZ (086)",meaning:"紐西蘭航空 (AIR NEW ZEALAND)",detailed:"NZ (086), NZ, 第二航廈",type:"airport-company-code-to-name"},380:{qno:380,word:"宿霧太平洋航空 (CEBU AIR)",meaning:"5J (000)",detailed:"宿霧太平洋航空 (CEBU AIR), PH, 第一航廈",type:"airport-company-name-to-code"},381:{qno:381,word:"濟州航空 (JEJU AIR)",meaning:"7C (000)",detailed:"濟州航空 (JEJU AIR), KR, 第一航廈",type:"airport-company-name-to-code"},382:{qno:382,word:"UA (016)",meaning:"聯合航空 (UNITED AIRLINES)",detailed:"UA (016), US, 第二航廈",type:"airport-company-code-to-name"},383:{qno:383,word:"春秋航空 (SPRING AIRLINES)",meaning:"9C (000)",detailed:"春秋航空 (SPRING AIRLINES), CN, 第一航廈",type:"airport-company-name-to-code"},384:{qno:384,word:"AC (014)",meaning:"加拿大航空 (AIR CANADA)",detailed:"AC (014), CA, 第二航廈",type:"airport-company-code-to-name"},385:{qno:385,word:"AVML",meaning:"印度素食",detailed:"AVML (VEG HINDU MEAL)",type:"airport-meal-code-to-name"},386:{qno:386,word:"BBML",meaning:"嬰兒餐",detailed:"BBML (BABY MEAL)",type:"airport-meal-code-to-name"},387:{qno:387,word:"BLML",meaning:"無刺激性餐",detailed:"BLML (BLAND MEAL)",type:"airport-meal-code-to-name"},388:{qno:388,word:"CHML",meaning:"兒童餐",detailed:"CHML (CHILD MEAL)",type:"airport-meal-code-to-name"},389:{qno:389,word:"DBML",meaning:"糖尿病餐",detailed:"DBML (DIABETIC MEAL)",type:"airport-meal-code-to-name"},390:{qno:390,word:"FPML",meaning:"水果盤",detailed:"FPML (FRUIT PLATTER MEAL)",type:"airport-meal-code-to-name"},391:{qno:391,word:"GFML",meaning:"無麩質餐",detailed:"GFML (GLUTEN FREE MEAL)",type:"airport-meal-code-to-name"},392:{qno:392,word:"HNML",meaning:"印度餐",detailed:"HNML (HINDU MEAL)",type:"airport-meal-code-to-name"},393:{qno:393,word:"KSML",meaning:"猶太餐",detailed:"KSML (KOSHER MEAL)",type:"airport-meal-code-to-name"},394:{qno:394,word:"LCML",meaning:"低卡洛里餐",detailed:"LCML (LOW CALORIE MEAL)",type:"airport-meal-code-to-name"},395:{qno:395,word:"LFML",meaning:"低脂餐",detailed:"LFML (LOW CHOLESTEROL MEAL/FAT)",type:"airport-meal-code-to-name"},396:{qno:396,word:"LSML",meaning:"低鹽餐",detailed:"LSML (LOW SODIUM MEAL/NO SALT)",type:"airport-meal-code-to-name"},397:{qno:397,word:"MOML",meaning:"回教餐",detailed:"MOML (MOSLEM MEAL/MUSLIM)",type:"airport-meal-code-to-name"},398:{qno:398,word:"印度素食",meaning:"AVML",detailed:"印度素食 (VEG HINDU MEAL)",type:"airport-meal-name-to-code"},399:{qno:399,word:"嬰兒餐",meaning:"BBML",detailed:"嬰兒餐 (BABY MEAL)",type:"airport-meal-name-to-code"},400:{qno:400,word:"無刺激性餐",meaning:"BLML",detailed:"無刺激性餐 (BLAND MEAL)",type:"airport-meal-name-to-code"},401:{qno:401,word:"兒童餐",meaning:"CHML",detailed:"兒童餐 (CHILD MEAL)",type:"airport-meal-name-to-code"},402:{qno:402,word:"糖尿病餐",meaning:"DBML",detailed:"糖尿病餐 (DIABETIC MEAL)",type:"airport-meal-name-to-code"},403:{qno:403,word:"水果盤",meaning:"FPML",detailed:"水果盤 (FRUIT PLATTER MEAL)",type:"airport-meal-name-to-code"},404:{qno:404,word:"無麩質餐",meaning:"GFML",detailed:"無麩質餐 (GLUTEN FREE MEAL)",type:"airport-meal-name-to-code"},405:{qno:405,word:"印度餐",meaning:"HNML",detailed:"印度餐 (HINDU MEAL)",type:"airport-meal-name-to-code"},406:{qno:406,word:"猶太餐",meaning:"KSML",detailed:"猶太餐 (KOSHER MEAL)",type:"airport-meal-name-to-code"},407:{qno:407,word:"低卡洛里餐",meaning:"LCML",detailed:"低卡洛里餐 (LOW CALORIE MEAL)",type:"airport-meal-name-to-code"},408:{qno:408,word:"低脂餐",meaning:"LFML",detailed:"低脂餐 (LOW CHOLESTEROL MEAL/FAT)",type:"airport-meal-name-to-code"},409:{qno:409,word:"[CITY] TPE",meaning:"台北",detailed:"TPE (Taipei), 台灣 (Taiwan)",type:"airport-city-code-to-name"},410:{qno:410,word:"[CITY] TXG",meaning:"台中",detailed:"TXG (Taichung), 台灣 (Taiwan)",type:"airport-city-code-to-name"},411:{qno:411,word:"[CITY] KHH",meaning:"高雄",detailed:"KHH (Kaohsiung), 台灣 (Taiwan)",type:"airport-city-code-to-name"},412:{qno:412,word:"[CITY] TNN",meaning:"台南",detailed:"TNN (Tainan), 台灣 (Taiwan)",type:"airport-city-code-to-name"},413:{qno:413,word:"[CITY] OSA",meaning:"大阪",detailed:"OSA (Osaka), 日本 (Japan)",type:"airport-city-code-to-name"},414:{qno:414,word:"[CITY] TYO",meaning:"東京",detailed:"TYO (Tokyo), 日本 (Japan)",type:"airport-city-code-to-name"},415:{qno:415,word:"[CITY] SPK",meaning:"札幌",detailed:"SPK (Sapporo), 日本 (Japan)",type:"airport-city-code-to-name"},416:{qno:416,word:"[CITY] NGO",meaning:"名古屋",detailed:"NGO (Nagoya), 日本 (Japan)",type:"airport-city-code-to-name"},417:{qno:417,word:"[CITY] FUK",meaning:"福岡",detailed:"FUK (Fukuoka), 日本 (Japan)",type:"airport-city-code-to-name"},418:{qno:418,word:"[CITY] OKA",meaning:"琉球",detailed:"OKA (Okinawa), 日本 (Japan)",type:"airport-city-code-to-name"},419:{qno:419,word:"[CITY] SEL",meaning:"首爾",detailed:"SEL (Seoul), 韓國 (South Korea)",type:"airport-city-code-to-name"},420:{qno:420,word:"[CITY] PUS",meaning:"釜山",detailed:"PUS (Busan), 韓國 (South Korea)",type:"airport-city-code-to-name"},421:{qno:421,word:"[CITY] FNJ",meaning:"平壤",detailed:"FNJ (Pyongyang), 北韓 (North Korea)",type:"airport-city-code-to-name"},422:{qno:422,word:"[CITY] BKK",meaning:"曼谷",detailed:"BKK (Bangkok), 泰國 (Thailand)",type:"airport-city-code-to-name"},423:{qno:423,word:"[CITY] HKT",meaning:"普吉島",detailed:"HKT (Phuket), 泰國 (Thailand)",type:"airport-city-code-to-name"},424:{qno:424,word:"[CITY] CNX",meaning:"清邁",detailed:"CNX (Chiang Mai), 泰國 (Thailand)",type:"airport-city-code-to-name"},425:{qno:425,word:"[CITY] HKG",meaning:"香港",detailed:"HKG (Hong Kong), 香港 (Hong Kong)",type:"airport-city-code-to-name"},426:{qno:426,word:"[CITY] MFM",meaning:"澳門",detailed:"MFM (Macau), 澳門 (Macau)",type:"airport-city-code-to-name"},427:{qno:427,word:"[CITY] KUL",meaning:"吉隆坡",detailed:"KUL (Kuala Lumpur), 馬來西亞 (Malaysia)",type:"airport-city-code-to-name"},428:{qno:428,word:"[CITY] PEN",meaning:"檳城",detailed:"PEN (Penang), 馬來西亞 (Malaysia)",type:"airport-city-code-to-name"},429:{qno:429,word:"[CITY] BKI",meaning:"亞庇",detailed:"BKI (Kota Kinabalu), 馬來西亞 (Malaysia)",type:"airport-city-code-to-name"},430:{qno:430,word:"[CITY] BWN",meaning:"史利巴加旺",detailed:"BWN (Bandar Seri Begawan), 汶萊 (Brunei)",type:"airport-city-code-to-name"},431:{qno:431,word:"[CITY] SIN",meaning:"新加坡",detailed:"SIN (Singapore), 新加坡 (Singapore)",type:"airport-city-code-to-name"},432:{qno:432,word:"[CITY] MNL",meaning:"馬尼拉",detailed:"MNL (Manila), 菲律賓 (Philippines)",type:"airport-city-code-to-name"},433:{qno:433,word:"[CITY] JKT",meaning:"雅加達",detailed:"JKT (Jakarta, Bali), 印尼 (Indonesia)",type:"airport-city-code-to-name"},434:{qno:434,word:"[CITY] DPS",meaning:"峇里島",detailed:"DPS (Denpasar), 印尼 (Indonesia)",type:"airport-city-code-to-name"},435:{qno:435,word:"[CITY] SGN",meaning:"胡志明",detailed:"SGN (Ho Chi Minh), 越南 (Vietnam)",type:"airport-city-code-to-name"},436:{qno:436,word:"[CITY] HAN",meaning:"河內",detailed:"HAN (Hanoi), 越南 (Vietnam)",type:"airport-city-code-to-name"},437:{qno:437,word:"[CITY] RGN",meaning:"仰光",detailed:"RGN (Yangon), 緬甸 (Myanmar)",type:"airport-city-code-to-name"},438:{qno:438,word:"[CITY] CMB",meaning:"可倫坡",detailed:"CMB (Colombo), 斯里蘭卡 (Sri Lanka)",type:"airport-city-code-to-name"},439:{qno:439,word:"[CITY] KTM",meaning:"加德滿都",detailed:"KTM (Kathmandu), 尼泊爾 (Nepal)",type:"airport-city-code-to-name"},440:{qno:440,word:"[CITY] DEL",meaning:"新德里",detailed:"DEL (Delhi), 印度 (India)",type:"airport-city-code-to-name"},441:{qno:441,word:"[CITY] BOM",meaning:"孟買",detailed:"BOM (Mumbai), 印度 (India)",type:"airport-city-code-to-name"},442:{qno:442,word:"[CITY] DHA",meaning:"達蘭",detailed:"DHA (Dhahran), 沙烏地阿拉伯 (Saudi Arabia)",type:"airport-city-code-to-name"},443:{qno:443,word:"[CITY] JED",meaning:"吉達",detailed:"JED (Jeddah), 沙烏地阿拉伯 (Saudi Arabia)",type:"airport-city-code-to-name"},444:{qno:444,word:"[CITY] ISB",meaning:"伊斯蘭馬巴德",detailed:"ISB (Islamabad), 巴基斯坦 (Pakistan)",type:"airport-city-code-to-name"},445:{qno:445,word:"[CITY] BGW",meaning:"巴格達",detailed:"BGW (Baghdad), 伊拉克 (Iraq)",type:"airport-city-code-to-name"},446:{qno:446,word:"[CITY] AMM",meaning:"安曼",detailed:"AMM (Amman), 約旦 (Jordan)",type:"airport-city-code-to-name"},447:{qno:447,word:"[CITY] IST",meaning:"伊斯坦堡",detailed:"IST (Istanbul), 土耳其 (Turkey)",type:"airport-city-code-to-name"},448:{qno:448,word:"[CITY] DXB",meaning:"杜拜",detailed:"DXB (Dubai), 阿拉伯聯合大國 (UAE)",type:"airport-city-code-to-name"},449:{qno:449,word:"[CITY] AUH",meaning:"阿布達比",detailed:"AUH (Abu Dhabi), 阿拉伯聯合大國 (UAE)",type:"airport-city-code-to-name"},450:{qno:450,word:"[CITY] LON",meaning:"倫敦",detailed:"LON (London), 英國 (United Kingdom)",type:"airport-city-code-to-name"},451:{qno:451,word:"[CITY] PAR",meaning:"巴黎",detailed:"PAR (Paris), 法國 (France)",type:"airport-city-code-to-name"},452:{qno:452,word:"[CITY] VIE",meaning:"維也納",detailed:"VIE (Vienna), 奧地利 (Austria)",type:"airport-city-code-to-name"},453:{qno:453,word:"[CITY] ROM",meaning:"羅馬",detailed:"ROM (Rome), 義大利 (Italy)",type:"airport-city-code-to-name"},454:{qno:454,word:"[CITY] MIL",meaning:"米蘭",detailed:"MIL (Milan), 義大利 (Italy)",type:"airport-city-code-to-name"},455:{qno:455,word:"[CITY] BER",meaning:"柏林",detailed:"BER (Berlin), 德國 (Germany)",type:"airport-city-code-to-name"},456:{qno:456,word:"[CITY] FRA",meaning:"法蘭克福",detailed:"FRA (Frankfurt), 德國 (Germany)",type:"airport-city-code-to-name"},457:{qno:457,word:"[CITY] MUC",meaning:"慕尼黑",detailed:"MUC (Munich), 德國 (Germany)",type:"airport-city-code-to-name"},458:{qno:458,word:"[CITY] MAD",meaning:"馬德里",detailed:"MAD (Madrid), 西班牙 (Spain)",type:"airport-city-code-to-name"},459:{qno:459,word:"[CITY] BCN",meaning:"巴塞隆納",detailed:"BCN (Barcelona), 西班牙 (Spain)",type:"airport-city-code-to-name"},460:{qno:460,word:"[CITY] LIS",meaning:"里斯本",detailed:"LIS (Lisbon), 葡萄牙 (Portugal)",type:"airport-city-code-to-name"},461:{qno:461,word:"[CITY] BRU",meaning:"布魯塞爾",detailed:"BRU (Brussels), 比利時 (Belgium)",type:"airport-city-code-to-name"},462:{qno:462,word:"[CITY] AMS",meaning:"阿姆斯特丹",detailed:"AMS (Amsterdam), 荷蘭 (Netherlands)",type:"airport-city-code-to-name"},463:{qno:463,word:"[CITY] CPH",meaning:"哥本哈根",detailed:"CPH (Copenhagen), 丹麥 (Denmark)",type:"airport-city-code-to-name"},464:{qno:464,word:"[CITY] OSL",meaning:"奧斯陸",detailed:"OSL (Oslo), 挪威 (Norway)",type:"airport-city-code-to-name"},465:{qno:465,word:"[CITY] STO",meaning:"斯德哥爾摩",detailed:"STO (Stockholm), 瑞典 (Sweden)",type:"airport-city-code-to-name"},466:{qno:466,word:"[CITY] HEL",meaning:"赫爾辛基",detailed:"HEL (Helsinki), 芬蘭 (Finland)",type:"airport-city-code-to-name"},467:{qno:467,word:"[CITY] REK",meaning:"雷克雅維克",detailed:"REK (Reykjavik), 冰島 (Iceland)",type:"airport-city-code-to-name"},468:{qno:468,word:"[CITY] GVA",meaning:"日內瓦",detailed:"GVA (Geneva), 瑞士 (Switzerland)",type:"airport-city-code-to-name"},469:{qno:469,word:"[CITY] ZRH",meaning:"蘇黎世",detailed:"ZRH (Zurich), 瑞士 (Switzerland)",type:"airport-city-code-to-name"},470:{qno:470,word:"[CITY] MOW",meaning:"莫斯科",detailed:"MOW (Moscow), 俄羅斯 (Russia)",type:"airport-city-code-to-name"},471:{qno:471,word:"台北",meaning:"TPE",detailed:"台北 (Taipei), 台灣 (Taiwan)",type:"airport-city-name-to-code"},472:{qno:472,word:"台中",meaning:"TXG",detailed:"台中 (Taichung), 台灣 (Taiwan)",type:"airport-city-name-to-code"},473:{qno:473,word:"高雄",meaning:"KHH",detailed:"高雄 (Kaohsiung), 台灣 (Taiwan)",type:"airport-city-name-to-code"},474:{qno:474,word:"台南",meaning:"TNN",detailed:"台南 (Tainan), 台灣 (Taiwan)",type:"airport-city-name-to-code"},475:{qno:475,word:"大阪",meaning:"OSA",detailed:"大阪 (Osaka), 日本 (Japan)",type:"airport-city-name-to-code"},476:{qno:476,word:"東京",meaning:"TYO",detailed:"東京 (Tokyo), 日本 (Japan)",type:"airport-city-name-to-code"},477:{qno:477,word:"札幌",meaning:"SPK",detailed:"札幌 (Sapporo), 日本 (Japan)",type:"airport-city-name-to-code"},478:{qno:478,word:"名古屋",meaning:"NGO",detailed:"名古屋 (Nagoya), 日本 (Japan)",type:"airport-city-name-to-code"},479:{qno:479,word:"福岡",meaning:"FUK",detailed:"福岡 (Fukuoka), 日本 (Japan)",type:"airport-city-name-to-code"},480:{qno:480,word:"琉球",meaning:"OKA",detailed:"琉球 (Okinawa), 日本 (Japan)",type:"airport-city-name-to-code"},481:{qno:481,word:"首爾",meaning:"SEL",detailed:"首爾 (Seoul), 韓國 (South Korea)",type:"airport-city-name-to-code"},482:{qno:482,word:"釜山",meaning:"PUS",detailed:"釜山 (Busan), 韓國 (South Korea)",type:"airport-city-name-to-code"},483:{qno:483,word:"平壤",meaning:"FNJ",detailed:"平壤 (Pyongyang), 北韓 (North Korea)",type:"airport-city-name-to-code"},484:{qno:484,word:"曼谷",meaning:"BKK",detailed:"曼谷 (Bangkok), 泰國 (Thailand)",type:"airport-city-name-to-code"},485:{qno:485,word:"普吉島",meaning:"HKT",detailed:"普吉島 (Phuket), 泰國 (Thailand)",type:"airport-city-name-to-code"},486:{qno:486,word:"清邁",meaning:"CNX",detailed:"清邁 (Chiang Mai), 泰國 (Thailand)",type:"airport-city-name-to-code"},487:{qno:487,word:"香港",meaning:"HKG",detailed:"香港 (Hong Kong), 香港 (Hong Kong)",type:"airport-city-name-to-code"},488:{qno:488,word:"澳門",meaning:"MFM",detailed:"澳門 (Macau), 澳門 (Macau)",type:"airport-city-name-to-code"},489:{qno:489,word:"吉隆坡",meaning:"KUL",detailed:"吉隆坡 (Kuala Lumpur), 馬來西亞 (Malaysia)",type:"airport-city-name-to-code"},490:{qno:490,word:"檳城",meaning:"PEN",detailed:"檳城 (Penang), 馬來西亞 (Malaysia)",type:"airport-city-name-to-code"},491:{qno:491,word:"亞庇",meaning:"BKI",detailed:"亞庇 (Kota Kinabalu), 馬來西亞 (Malaysia)",type:"airport-city-name-to-code"},492:{qno:492,word:"史利巴加旺",meaning:"BWN",detailed:"史利巴加旺 (Bandar Seri Begawan), 汶萊 (Brunei)",type:"airport-city-name-to-code"},493:{qno:493,word:"新加坡",meaning:"SIN",detailed:"新加坡 (Singapore), 新加坡 (Singapore)",type:"airport-city-name-to-code"},494:{qno:494,word:"馬尼拉",meaning:"MNL",detailed:"馬尼拉 (Manila), 菲律賓 (Philippines)",type:"airport-city-name-to-code"},495:{qno:495,word:"雅加達",meaning:"JKT",detailed:"雅加達 (Jakarta, Bali), 印尼 (Indonesia)",type:"airport-city-name-to-code"},496:{qno:496,word:"峇里島",meaning:"DPS",detailed:"峇里島 (Denpasar), 印尼 (Indonesia)",type:"airport-city-name-to-code"},497:{qno:497,word:"胡志明",meaning:"SGN",detailed:"胡志明 (Ho Chi Minh), 越南 (Vietnam)",type:"airport-city-name-to-code"},498:{qno:498,word:"河內",meaning:"HAN",detailed:"河內 (Hanoi), 越南 (Vietnam)",type:"airport-city-name-to-code"},499:{qno:499,word:"仰光",meaning:"RGN",detailed:"仰光 (Yangon), 緬甸 (Myanmar)",type:"airport-city-name-to-code"},500:{qno:500,word:"可倫坡",meaning:"CMB",detailed:"可倫坡 (Colombo), 斯里蘭卡 (Sri Lanka)",type:"airport-city-name-to-code"},501:{qno:501,word:"加德滿都",meaning:"KTM",detailed:"加德滿都 (Kathmandu), 尼泊爾 (Nepal)",type:"airport-city-name-to-code"},502:{qno:502,word:"新德里",meaning:"DEL",detailed:"新德里 (Delhi), 印度 (India)",type:"airport-city-name-to-code"},503:{qno:503,word:"孟買",meaning:"BOM",detailed:"孟買 (Mumbai), 印度 (India)",type:"airport-city-name-to-code"},504:{qno:504,word:"達蘭",meaning:"DHA",detailed:"達蘭 (Dhahran), 沙烏地阿拉伯 (Saudi Arabia)",type:"airport-city-name-to-code"},505:{qno:505,word:"吉達",meaning:"JED",detailed:"吉達 (Jeddah), 沙烏地阿拉伯 (Saudi Arabia)",type:"airport-city-name-to-code"},506:{qno:506,word:"伊斯蘭馬巴德",meaning:"ISB",detailed:"伊斯蘭馬巴德 (Islamabad), 巴基斯坦 (Pakistan)",type:"airport-city-name-to-code"},507:{qno:507,word:"巴格達",meaning:"BGW",detailed:"巴格達 (Baghdad), 伊拉克 (Iraq)",type:"airport-city-name-to-code"},508:{qno:508,word:"安曼",meaning:"AMM",detailed:"安曼 (Amman), 約旦 (Jordan)",type:"airport-city-name-to-code"},509:{qno:509,word:"伊斯坦堡",meaning:"IST",detailed:"伊斯坦堡 (Istanbul), 土耳其 (Turkey)",type:"airport-city-name-to-code"},510:{qno:510,word:"杜拜",meaning:"DXB",detailed:"杜拜 (Dubai), 阿拉伯聯合大國 (UAE)",type:"airport-city-name-to-code"},511:{qno:511,word:"阿布達比",meaning:"AUH",detailed:"阿布達比 (Abu Dhabi), 阿拉伯聯合大國 (UAE)",type:"airport-city-name-to-code"},512:{qno:512,word:"倫敦",meaning:"LON",detailed:"倫敦 (London), 英國 (United Kingdom)",type:"airport-city-name-to-code"},513:{qno:513,word:"巴黎",meaning:"PAR",detailed:"巴黎 (Paris), 法國 (France)",type:"airport-city-name-to-code"},514:{qno:514,word:"維也納",meaning:"VIE",detailed:"維也納 (Vienna), 奧地利 (Austria)",type:"airport-city-name-to-code"},515:{qno:515,word:"羅馬",meaning:"ROM",detailed:"羅馬 (Rome), 義大利 (Italy)",type:"airport-city-name-to-code"},516:{qno:516,word:"米蘭",meaning:"MIL",detailed:"米蘭 (Milan), 義大利 (Italy)",type:"airport-city-name-to-code"},517:{qno:517,word:"柏林",meaning:"BER",detailed:"柏林 (Berlin), 德國 (Germany)",type:"airport-city-name-to-code"},518:{qno:518,word:"法蘭克福",meaning:"FRA",detailed:"法蘭克福 (Frankfurt), 德國 (Germany)",type:"airport-city-name-to-code"},519:{qno:519,word:"慕尼黑",meaning:"MUC",detailed:"慕尼黑 (Munich), 德國 (Germany)",type:"airport-city-name-to-code"},520:{qno:520,word:"馬德里",meaning:"MAD",detailed:"馬德里 (Madrid), 西班牙 (Spain)",type:"airport-city-name-to-code"},521:{qno:521,word:"巴塞隆納",meaning:"BCN",detailed:"巴塞隆納 (Barcelona), 西班牙 (Spain)",type:"airport-city-name-to-code"},522:{qno:522,word:"里斯本",meaning:"LIS",detailed:"里斯本 (Lisbon), 葡萄牙 (Portugal)",type:"airport-city-name-to-code"},523:{qno:523,word:"布魯塞爾",meaning:"BRU",detailed:"布魯塞爾 (Brussels), 比利時 (Belgium)",type:"airport-city-name-to-code"},524:{qno:524,word:"阿姆斯特丹",meaning:"AMS",detailed:"阿姆斯特丹 (Amsterdam), 荷蘭 (Netherlands)",type:"airport-city-name-to-code"},525:{qno:525,word:"哥本哈根",meaning:"CPH",detailed:"哥本哈根 (Copenhagen), 丹麥 (Denmark)",type:"airport-city-name-to-code"},526:{qno:526,word:"奧斯陸",meaning:"OSL",detailed:"奧斯陸 (Oslo), 挪威 (Norway)",type:"airport-city-name-to-code"},527:{qno:527,word:"斯德哥爾摩",meaning:"STO",detailed:"斯德哥爾摩 (Stockholm), 瑞典 (Sweden)",type:"airport-city-name-to-code"},528:{qno:528,word:"赫爾辛基",meaning:"HEL",detailed:"赫爾辛基 (Helsinki), 芬蘭 (Finland)",type:"airport-city-name-to-code"},529:{qno:529,word:"雷克雅維克",meaning:"REK",detailed:"雷克雅維克 (Reykjavik), 冰島 (Iceland)",type:"airport-city-name-to-code"},530:{qno:530,word:"日內瓦",meaning:"GVA",detailed:"日內瓦 (Geneva), 瑞士 (Switzerland)",type:"airport-city-name-to-code"},531:{qno:531,word:"蘇黎世",meaning:"ZRH",detailed:"蘇黎世 (Zurich), 瑞士 (Switzerland)",type:"airport-city-name-to-code"},532:{qno:532,word:"莫斯科",meaning:"MOW",detailed:"莫斯科 (Moscow), 俄羅斯 (Russia)",type:"airport-city-name-to-code"},533:{qno:533,word:"聖彼得堡",meaning:"LED",detailed:"聖彼得堡 (St. Petersburg), 俄羅斯 (Russia)",type:"airport-city-name-to-code"},534:{qno:534,word:"雅典",meaning:"ATH",detailed:"雅典 (Athens), 希臘 (Greece)",type:"airport-city-name-to-code"},535:{qno:535,word:"布達佩斯",meaning:"BUD",detailed:"布達佩斯 (Budapest), 匈牙利 (Hungary)",type:"airport-city-name-to-code"},536:{qno:536,word:"布拉格",meaning:"PRG",detailed:"布拉格 (Prague), 捷克 (Czech Republic)",type:"airport-city-name-to-code"},537:{qno:537,word:"華沙",meaning:"WAW",detailed:"華沙 (Warsaw), 波蘭 (Poland)",type:"airport-city-name-to-code"},538:{qno:538,word:"都柏林",meaning:"DUB",detailed:"都柏林 (Dublin), 愛爾蘭 (Ireland)",type:"airport-city-name-to-code"},539:{qno:539,word:"紐約",meaning:"NYC",detailed:"紐約 (New York), 美國 (United States)",type:"airport-city-name-to-code"},540:{qno:540,word:"舊金山",meaning:"SFO",detailed:"舊金山 (San Francisco), 美國 (United States)",type:"airport-city-name-to-code"},541:{qno:541,word:"洛杉磯",meaning:"LAX",detailed:"洛杉磯 (Los Angeles), 美國 (United States)",type:"airport-city-name-to-code"},542:{qno:542,word:"夏威夷",meaning:"HNL",detailed:"夏威夷 (Honolulu), 美國 (United States)",type:"airport-city-name-to-code"},543:{qno:543,word:"安科拉治",meaning:"ANC",detailed:"安科拉治 (Anchorage), 美國 (United States)",type:"airport-city-name-to-code"},544:{qno:544,word:"亞特蘭大",meaning:"ATL",detailed:"亞特蘭大 (Atlanta), 美國 (United States)",type:"airport-city-name-to-code"},545:{qno:545,word:"休士頓",meaning:"HOU",detailed:"休士頓 (Houston), 美國 (United States)",type:"airport-city-name-to-code"},546:{qno:546,word:"西雅圖",meaning:"SEA",detailed:"西雅圖 (Seattle), 美國 (United States)",type:"airport-city-name-to-code"},547:{qno:547,word:"聖地牙哥",meaning:"SAN",detailed:"聖地牙哥 (San Diego), 美國 (United States)",type:"airport-city-name-to-code"},548:{qno:548,word:"拉斯維加斯",meaning:"LAS",detailed:"拉斯維加斯 (Las Vegas), 美國 (United States)",type:"airport-city-name-to-code"},549:{qno:549,word:"芝加哥",meaning:"CHI",detailed:"芝加哥 (Chicago), 美國 (United States)",type:"airport-city-name-to-code"},550:{qno:550,word:"達拉斯",meaning:"DFW",detailed:"達拉斯 (Dallas), 美國 (United States)",type:"airport-city-name-to-code"},551:{qno:551,word:"邁阿密",meaning:"MIA",detailed:"邁阿密 (Miami), 美國 (United States)",type:"airport-city-name-to-code"},552:{qno:552,word:"明尼亞波里",meaning:"MSP",detailed:"明尼亞波里 (Minneapolis), 美國 (United States)",type:"airport-city-name-to-code"},553:{qno:553,word:"渥太華",meaning:"YOW",detailed:"渥太華 (Ottawa), 加拿大 (Canada)",type:"airport-city-name-to-code"},554:{qno:554,word:"溫哥華",meaning:"YVR",detailed:"溫哥華 (Vancouver), 加拿大 (Canada)",type:"airport-city-name-to-code"},555:{qno:555,word:"蒙特婁",meaning:"YUL",detailed:"蒙特婁 (Montreal), 加拿大 (Canada)",type:"airport-city-name-to-code"},556:{qno:556,word:"多倫多",meaning:"YYZ",detailed:"多倫多 (Toronto), 加拿大 (Canada)",type:"airport-city-name-to-code"},557:{qno:557,word:"墨西哥城",meaning:"MEX",detailed:"墨西哥城 (Mexico City), 墨西哥 (Mexico)",type:"airport-city-name-to-code"},558:{qno:558,word:"巴拿馬市",meaning:"PTY",detailed:"巴拿馬市 (Panama City), 巴拿馬 (Panama)",type:"airport-city-name-to-code"},559:{qno:559,word:"雪梨",meaning:"SYD",detailed:"雪梨 (Sydney), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},560:{qno:560,word:"布里斯班",meaning:"BNE",detailed:"布里斯班 (Brisbane), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},561:{qno:561,word:"墨爾本",meaning:"MEL",detailed:"墨爾本 (Melbourne), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},562:{qno:562,word:"荷巴",meaning:"HBA",detailed:"荷巴 (Hobart), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},563:{qno:563,word:"阿得雷德",meaning:"ADL",detailed:"阿得雷德 (Adelaide), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},564:{qno:564,word:"凱恩斯",meaning:"CNS",detailed:"凱恩斯 (Cairns), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},565:{qno:565,word:"伯斯",meaning:"PER",detailed:"伯斯 (Perth), 澳大利亞 (Australia)",type:"airport-city-name-to-code"},566:{qno:566,word:"威靈頓",meaning:"WLG",detailed:"威靈頓 (Wellington), 紐西蘭 (New Zealand)",type:"airport-city-name-to-code"},567:{qno:567,word:"奧克蘭",meaning:"AKL",detailed:"奧克蘭 (Auckland), 紐西蘭 (New Zealand)",type:"airport-city-name-to-code"},568:{qno:568,word:"基督城",meaning:"CHC",detailed:"基督城 (Christchurch), 紐西蘭 (New Zealand)",type:"airport-city-name-to-code"},569:{qno:569,word:"關島",meaning:"GUM",detailed:"關島 (Guam), 美國 (United States)",type:"airport-city-name-to-code"}};function ll(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Fn={exports:{}};(function(e,n){(function(){var i=9007199254740992,r=-i,o="0123456789",s="abcdefghijklmnopqrstuvwxyz",d=s.toUpperCase(),m=o+"abcdef";function p(a){this.name="UnsupportedError",this.message=a||"This feature is not supported on this platform"}p.prototype=new Error,p.prototype.constructor=p;var S=Array.prototype.slice;function c(a){if(!(this instanceof c))return a||(a=null),a===null?new c:new c(a);if(typeof a=="function")return this.random=a,this;arguments.length&&(this.seed=0);for(var t=0;t<arguments.length;t++){var l=0;if(Object.prototype.toString.call(arguments[t])==="[object String]")for(var f=0;f<arguments[t].length;f++){for(var x=0,C=0;C<arguments[t].length;C++)x=arguments[t].charCodeAt(C)+(x<<6)+(x<<16)-x;l+=x}else l=arguments[t];this.seed+=(arguments.length-t)*l}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}c.prototype.VERSION="1.1.12";function b(a,t){if(a=a||{},t)for(var l in t)typeof a[l]>"u"&&(a[l]=t[l]);return a}function H(a){return Array.apply(null,Array(a)).map(function(t,l){return l})}function M(a,t){if(a)throw new RangeError(t)}var K=function(){throw new Error("No Base64 encoder available.")};(function(){typeof btoa=="function"?K=btoa:typeof Buffer=="function"&&(K=function(t){return new Buffer(t).toString("base64")})})(),c.prototype.bool=function(a){return a=b(a,{likelihood:50}),M(a.likelihood<0||a.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),this.random()*100<a.likelihood},c.prototype.falsy=function(a){a=b(a,{pool:[!1,null,0,NaN,"",void 0]});var t=a.pool,l=this.integer({min:0,max:t.length-1}),f=t[l];return f},c.prototype.animal=function(a){if(a=b(a),typeof a.type<"u")return M(!this.get("animals")[a.type.toLowerCase()],"Please pick from desert, ocean, grassland, forest, zoo, pets, farm."),this.pick(this.get("animals")[a.type.toLowerCase()]);var t=["desert","forest","ocean","zoo","farm","pet","grassland"];return this.pick(this.get("animals")[this.pick(t)])},c.prototype.character=function(a){a=b(a);var t="!@#$%^&*()[]",l,f;return a.casing==="lower"?l=s:a.casing==="upper"?l=d:l=s+d,a.pool?f=a.pool:(f="",a.alpha&&(f+=l),a.numeric&&(f+=o),a.symbols&&(f+=t),f||(f=l+o+t)),f.charAt(this.natural({max:f.length-1}))},c.prototype.floating=function(a){a=b(a,{fixed:4}),M(a.fixed&&a.precision,"Chance: Cannot specify both fixed and precision.");var t,l=Math.pow(10,a.fixed),f=i/l,x=-f;M(a.min&&a.fixed&&a.min<x,"Chance: Min specified is out of range with fixed. Min should be, at least, "+x),M(a.max&&a.fixed&&a.max>f,"Chance: Max specified is out of range with fixed. Max should be, at most, "+f),a=b(a,{min:x,max:f}),t=this.integer({min:a.min*l,max:a.max*l});var C=(t/l).toFixed(a.fixed);return parseFloat(C)},c.prototype.integer=function(a){return a=b(a,{min:r,max:i}),M(a.min>a.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(a.max-a.min+1)+a.min)},c.prototype.natural=function(a){if(a=b(a,{min:0,max:i}),typeof a.numerals=="number"&&(M(a.numerals<1,"Chance: Numerals cannot be less than one."),a.min=Math.pow(10,a.numerals-1),a.max=Math.pow(10,a.numerals)-1),M(a.min<0,"Chance: Min cannot be less than zero."),a.exclude){M(!Array.isArray(a.exclude),"Chance: exclude must be an array.");for(var t in a.exclude)M(!Number.isInteger(a.exclude[t]),"Chance: exclude must be numbers.");var l=a.min+this.natural({max:a.max-a.min-a.exclude.length}),f=a.exclude.sort();for(var x in f){if(l<f[x])break;l++}return l}return this.integer(a)},c.prototype.prime=function(a){a=b(a,{min:0,max:1e4}),M(a.min<0,"Chance: Min cannot be less than zero."),M(a.min>a.max,"Chance: Min cannot be greater than Max.");var t=D.primes[D.primes.length-1];if(a.max>t)for(var l=t+2;l<=a.max;++l)this.is_prime(l)&&D.primes.push(l);var f=D.primes.filter(function(x){return x>=a.min&&x<=a.max});return this.pick(f)},c.prototype.is_prime=function(a){if(a%1||a<2)return!1;if(a%2===0)return a===2;if(a%3===0)return a===3;for(var t=Math.sqrt(a),l=5;l<=t;l+=6)if(a%l===0||a%(l+2)===0)return!1;return!0},c.prototype.hex=function(a){a=b(a,{min:0,max:i,casing:"lower"}),M(a.min<0,"Chance: Min cannot be less than zero.");var t=this.natural({min:a.min,max:a.max});return a.casing==="upper"?t.toString(16).toUpperCase():t.toString(16)},c.prototype.letter=function(a){a=b(a,{casing:"lower"});var t="abcdefghijklmnopqrstuvwxyz",l=this.character({pool:t});return a.casing==="upper"&&(l=l.toUpperCase()),l},c.prototype.string=function(a){a=b(a,{min:5,max:20}),a.length!==0&&!a.length&&(a.length=this.natural({min:a.min,max:a.max})),M(a.length<0,"Chance: Length cannot be less than zero.");var t=a.length,l=this.n(this.character,t,a);return l.join("")};function q(a){this.c=a}q.prototype={substitute:function(){return this.c}};function oe(a){this.c=a}oe.prototype={substitute:function(){if(!/[{}\\]/.test(this.c))throw new Error('Invalid escape sequence: "\\'+this.c+'".');return this.c}};function J(a){this.c=a}J.prototype={replacers:{"#":function(a){return a.character({pool:o})},A:function(a){return a.character({pool:d})},a:function(a){return a.character({pool:s})}},substitute:function(a){var t=this.replacers[this.c];if(!t)throw new Error('Invalid replacement character: "'+this.c+'".');return t(a)}};function ae(a){for(var t=[],l="identity",f=0;f<a.length;f++){var x=a[f];switch(l){case"escape":t.push(new oe(x)),l="identity";break;case"identity":x==="{"?l="replace":x==="\\"?l="escape":t.push(new q(x));break;case"replace":x==="}"?l="identity":t.push(new J(x));break}}return t}c.prototype.template=function(a){if(!a)throw new Error("Template string is required");var t=this;return ae(a).map(function(l){return l.substitute(t)}).join("")},c.prototype.buffer=function(a){if(typeof Buffer>"u")throw new p("Sorry, the buffer() function is not supported on your platform");a=b(a,{length:this.natural({min:5,max:20})}),M(a.length<0,"Chance: Length cannot be less than zero.");var t=a.length,l=this.n(this.character,t,a);return Buffer.from(l)},c.prototype.capitalize=function(a){return a.charAt(0).toUpperCase()+a.substr(1)},c.prototype.mixin=function(a){for(var t in a)this[t]=a[t];return this},c.prototype.unique=function(a,t,l){M(typeof a!="function","Chance: The first argument must be a function.");var f=function(A,te){return A.indexOf(te)!==-1};l&&(f=l.comparator||f);for(var x=[],C=0,v,g=t*50,I=S.call(arguments,2);x.length<t;){var T=JSON.parse(JSON.stringify(I));if(v=a.apply(this,T),f(x,v)||(x.push(v),C=0),++C>g)throw new RangeError("Chance: num is likely too large for sample set")}return x},c.prototype.n=function(a,t){M(typeof a!="function","Chance: The first argument must be a function."),typeof t>"u"&&(t=1);var l=t,f=[],x=S.call(arguments,2);for(l=Math.max(0,l),null;l--;null)f.push(a.apply(this,x));return f},c.prototype.pad=function(a,t,l){return l=l||"0",a=a+"",a.length>=t?a:new Array(t-a.length+1).join(l)+a},c.prototype.pick=function(a,t){if(a.length===0)throw new RangeError("Chance: Cannot pick() from an empty array");return!t||t===1?a[this.natural({max:a.length-1})]:this.shuffle(a).slice(0,t)},c.prototype.pickone=function(a){if(a.length===0)throw new RangeError("Chance: Cannot pickone() from an empty array");return a[this.natural({max:a.length-1})]},c.prototype.pickset=function(a,t){if(t===0)return[];if(a.length===0)throw new RangeError("Chance: Cannot pickset() from an empty array");if(t<0)throw new RangeError("Chance: Count must be a positive number");if(!t||t===1)return[this.pickone(a)];var l=a.slice(0),f=l.length;return this.n(function(){var x=this.natural({max:--f}),C=l[x];return l[x]=l[f],C},Math.min(f,t))},c.prototype.shuffle=function(a){for(var t=[],l=0,f=Number(a.length),x=H(f),C=f-1,v,g=0;g<f;g++)v=this.natural({max:C}),l=x[v],t[g]=a[l],x[v]=x[C],C-=1;return t},c.prototype.weighted=function(a,t,l){if(a.length!==t.length)throw new RangeError("Chance: Length of array and weights must match");for(var f=0,x,C=0;C<t.length;++C){if(x=t[C],isNaN(x))throw new RangeError("Chance: All weights must be numbers");x>0&&(f+=x)}if(f===0)throw new RangeError("Chance: No valid entries in array weights");var v=this.random()*f,g=0,I=-1,T;for(C=0;C<t.length;++C){if(x=t[C],g+=x,x>0){if(v<=g){T=C;break}I=C}C===t.length-1&&(T=I)}var A=a[T];return l=typeof l>"u"?!1:l,l&&(a.splice(T,1),t.splice(T,1)),A},c.prototype.paragraph=function(a){a=b(a);var t=a.sentences||this.natural({min:3,max:7}),l=this.n(this.sentence,t),f=a.linebreak===!0?`
`:" ";return l.join(f)},c.prototype.sentence=function(a){a=b(a);var t=a.words||this.natural({min:12,max:18}),l=a.punctuation,f,x=this.n(this.word,t);return f=x.join(" "),f=this.capitalize(f),l!==!1&&!/^[.?;!:]$/.test(l)&&(l="."),l&&(f+=l),f},c.prototype.syllable=function(a){a=b(a);for(var t=a.length||this.natural({min:2,max:3}),l="bcdfghjklmnprstvwz",f="aeiou",x=l+f,C="",v,g=0;g<t;g++)g===0?v=this.character({pool:x}):l.indexOf(v)===-1?v=this.character({pool:l}):v=this.character({pool:f}),C+=v;return a.capitalize&&(C=this.capitalize(C)),C},c.prototype.word=function(a){a=b(a),M(a.syllables&&a.length,"Chance: Cannot specify both syllables AND length.");var t=a.syllables||this.natural({min:1,max:3}),l="";if(a.length){do l+=this.syllable();while(l.length<a.length);l=l.substring(0,a.length)}else for(var f=0;f<t;f++)l+=this.syllable();return a.capitalize&&(l=this.capitalize(l)),l},c.prototype.emoji=function(a){a=b(a,{category:"all",length:1}),M(a.length<1||BigInt(a.length)>BigInt(i),"Chance: length must be between 1 and "+String(i));var t=this.get("emojis");a.category==="all"&&(a.category=this.pickone(Object.keys(t)));var l=t[a.category];return M(l===void 0,"Chance: Unrecognised emoji category: ["+a.category+"]."),this.pickset(l,a.length).map(function(f){return String.fromCodePoint(f)}).join("")},c.prototype.age=function(a){a=b(a);var t;switch(a.type){case"child":t={min:0,max:12};break;case"teen":t={min:13,max:19};break;case"adult":t={min:18,max:65};break;case"senior":t={min:65,max:100};break;case"all":t={min:0,max:100};break;default:t={min:18,max:65};break}return this.natural(t)},c.prototype.birthday=function(a){var t=this.age(a),l=new Date,f=l.getFullYear();if(a&&a.type){var x=new Date,C=new Date;x.setFullYear(f-t-1),C.setFullYear(f-t),a=b(a,{min:x,max:C})}else if(a&&(a.minAge!==void 0||a.maxAge!==void 0)){M(a.minAge<0,"Chance: MinAge cannot be less than zero."),M(a.minAge>a.maxAge,"Chance: MinAge cannot be greater than MaxAge.");var v=a.minAge!==void 0?a.minAge:0,g=a.maxAge!==void 0?a.maxAge:100,I=new Date(f-g-1,l.getMonth(),l.getDate()),T=new Date(f-v,l.getMonth(),l.getDate());I.setDate(I.getDate()+1),T.setDate(T.getDate()+1),T.setMilliseconds(T.getMilliseconds()-1),a=b(a,{min:I,max:T})}else a=b(a,{year:f-t});return this.date(a)},c.prototype.cpf=function(a){a=b(a,{formatted:!0});var t=this.n(this.natural,9,{max:9}),l=t[8]*2+t[7]*3+t[6]*4+t[5]*5+t[4]*6+t[3]*7+t[2]*8+t[1]*9+t[0]*10;l=11-l%11,l>=10&&(l=0);var f=l*2+t[8]*3+t[7]*4+t[6]*5+t[5]*6+t[4]*7+t[3]*8+t[2]*9+t[1]*10+t[0]*11;f=11-f%11,f>=10&&(f=0);var x=""+t[0]+t[1]+t[2]+"."+t[3]+t[4]+t[5]+"."+t[6]+t[7]+t[8]+"-"+l+f;return a.formatted?x:x.replace(/\D/g,"")},c.prototype.cnpj=function(a){a=b(a,{formatted:!0});var t=this.n(this.natural,12,{max:12}),l=t[11]*2+t[10]*3+t[9]*4+t[8]*5+t[7]*6+t[6]*7+t[5]*8+t[4]*9+t[3]*2+t[2]*3+t[1]*4+t[0]*5;l=11-l%11,l<2&&(l=0);var f=l*2+t[11]*3+t[10]*4+t[9]*5+t[8]*6+t[7]*7+t[6]*8+t[5]*9+t[4]*2+t[3]*3+t[2]*4+t[1]*5+t[0]*6;f=11-f%11,f<2&&(f=0);var x=""+t[0]+t[1]+"."+t[2]+t[3]+t[4]+"."+t[5]+t[6]+t[7]+"/"+t[8]+t[9]+t[10]+t[11]+"-"+l+f;return a.formatted?x:x.replace(/\D/g,"")},c.prototype.first=function(a){return a=b(a,{gender:this.gender(),nationality:"en"}),this.pick(this.get("firstNames")[a.gender.toLowerCase()][a.nationality.toLowerCase()])},c.prototype.profession=function(a){return a=b(a),a.rank?this.pick(["Apprentice ","Junior ","Senior ","Lead "])+this.pick(this.get("profession")):this.pick(this.get("profession"))},c.prototype.company=function(){return this.pick(this.get("company"))},c.prototype.gender=function(a){return a=b(a,{extraGenders:[]}),this.pick(["Male","Female"].concat(a.extraGenders))},c.prototype.last=function(a){if(a=b(a,{nationality:"*"}),a.nationality==="*"){var t=[],l=this.get("lastNames");return Object.keys(l).forEach(function(f){t=t.concat(l[f])}),this.pick(t)}else return this.pick(this.get("lastNames")[a.nationality.toLowerCase()])},c.prototype.israelId=function(){for(var a=this.string({pool:"0123456789",length:8}),t=0,l=0;l<a.length;l++){var f=a[l]*(l/2===parseInt(l/2)?1:2);f=this.pad(f,2).toString(),f=parseInt(f[0])+parseInt(f[1]),t=t+f}return a=a+(10-parseInt(t.toString().slice(-1))).toString().slice(-1),a},c.prototype.mrz=function(a){var t=function(x){var C="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),v=[7,3,1],g=0;return typeof x!="string"&&(x=x.toString()),x.split("").forEach(function(I,T){var A=C.indexOf(I);A!==-1?I=A===0?0:A+9:I=parseInt(I,10),I*=v[T%v.length],g+=I}),g%10},l=function(x){var C=function(g){return new Array(g+1).join("<")},v=["P<",x.issuer,x.last.toUpperCase(),"<<",x.first.toUpperCase(),C(39-(x.last.length+x.first.length+2)),x.passportNumber,t(x.passportNumber),x.nationality,x.dob,t(x.dob),x.gender,x.expiry,t(x.expiry),C(14),t(C(14))].join("");return v+t(v.substr(44,10)+v.substr(57,7)+v.substr(65,7))},f=this;return a=b(a,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:function(){var x=f.birthday({type:"adult"});return[x.getFullYear().toString().substr(2),f.pad(x.getMonth()+1,2),f.pad(x.getDate(),2)].join("")}(),expiry:function(){var x=new Date;return[(x.getFullYear()+5).toString().substr(2),f.pad(x.getMonth()+1,2),f.pad(x.getDate(),2)].join("")}(),gender:this.gender()==="Female"?"F":"M",issuer:"GBR",nationality:"GBR"}),l(a)},c.prototype.name=function(a){a=b(a);var t=this.first(a),l=this.last(a),f;return a.middle?f=t+" "+this.first(a)+" "+l:a.middle_initial?f=t+" "+this.character({alpha:!0,casing:"upper"})+". "+l:f=t+" "+l,a.prefix&&(f=this.prefix(a)+" "+f),a.suffix&&(f=f+" "+this.suffix(a)),f},c.prototype.name_prefixes=function(a){a=a||"all",a=a.toLowerCase();var t=[{name:"Doctor",abbreviation:"Dr."}];return(a==="male"||a==="all")&&t.push({name:"Mister",abbreviation:"Mr."}),(a==="female"||a==="all")&&(t.push({name:"Miss",abbreviation:"Miss"}),t.push({name:"Misses",abbreviation:"Mrs."})),t},c.prototype.prefix=function(a){return this.name_prefix(a)},c.prototype.name_prefix=function(a){return a=b(a,{gender:"all"}),a.full?this.pick(this.name_prefixes(a.gender)).name:this.pick(this.name_prefixes(a.gender)).abbreviation},c.prototype.HIDN=function(){var a="0123456789",t="ABCDEFGHIJKLMNOPQRSTUVWXYXZ",l="";return l+=this.string({pool:a,length:6}),l+=this.string({pool:t,length:2}),l},c.prototype.ssn=function(a){a=b(a,{ssnFour:!1,dashes:!0});var t="1234567890",l,f=a.dashes?"-":"";return a.ssnFour?l=this.string({pool:t,length:4}):l=this.string({pool:t,length:3})+f+this.string({pool:t,length:2})+f+this.string({pool:t,length:4}),l},c.prototype.aadhar=function(a){a=b(a,{onlyLastFour:!1,separatedByWhiteSpace:!0});var t="1234567890",l,f=a.separatedByWhiteSpace?" ":"";return a.onlyLastFour?l=this.string({pool:t,length:4}):l=this.string({pool:t,length:4})+f+this.string({pool:t,length:4})+f+this.string({pool:t,length:4}),l},c.prototype.name_suffixes=function(){var a=[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}];return a},c.prototype.suffix=function(a){return this.name_suffix(a)},c.prototype.name_suffix=function(a){return a=b(a),a.full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},c.prototype.nationalities=function(){return this.get("nationalities")},c.prototype.nationality=function(){var a=this.pick(this.nationalities());return a.name},c.prototype.zodiac=function(){const a=["Aries","Taurus","Gemini","Cancer","Leo","Virgo","Libra","Scorpio","Sagittarius","Capricorn","Aquarius","Pisces"];return this.pickone(a)},c.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},c.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},c.prototype.wp8_anid2=function(){return K(this.hash({length:32}))},c.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},c.prototype.bb_pin=function(){return this.hash({length:8})},c.prototype.avatar=function(a){var t=null,l="//www.gravatar.com/avatar/",f={http:"http",https:"https"},x={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"},C={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"},v={g:"g",pg:"pg",r:"r",x:"x"},g={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(!a)g.email=this.email(),a={};else if(typeof a=="string")g.email=a,a={};else{if(typeof a!="object")return null;if(a.constructor==="Array")return null}return g=b(a,g),g.email||(g.email=this.email()),g.protocol=f[g.protocol]?g.protocol+":":"",g.size=parseInt(g.size,0)?g.size:"",g.rating=v[g.rating]?g.rating:"",g.fallback=C[g.fallback]?g.fallback:"",g.fileExtension=x[g.fileExtension]?g.fileExtension:"",t=g.protocol+l+this.bimd5.md5(g.email)+(g.fileExtension?"."+g.fileExtension:"")+(g.size||g.rating||g.fallback?"?":"")+(g.size?"&s="+g.size.toString():"")+(g.rating?"&r="+g.rating:"")+(g.fallback?"&d="+g.fallback:""),t},c.prototype.color=function(a){function t(de,ra){return[de,de,de].join(ra||"")}function l(de){var ra=de?"rgba":"rgb",Ke=de?","+this.floating({min:le,max:ue}):"",ua=x?t(this.natural({min:C,max:v}),","):this.natural({min:T,max:A})+","+this.natural({min:te,max:j})+","+this.natural({max:255});return ra+"("+ua+Ke+")"}function f(de,ra,Ke){var ua=Ke?"#":"",qe="";return x?(qe=t(this.pad(this.hex({min:C,max:v}),2)),a.format==="shorthex"&&(qe=t(this.hex({min:0,max:15})))):a.format==="shorthex"?qe=this.pad(this.hex({min:Math.floor(g/16),max:Math.floor(I/16)}),1)+this.pad(this.hex({min:Math.floor(T/16),max:Math.floor(A/16)}),1)+this.pad(this.hex({min:Math.floor(te/16),max:Math.floor(j/16)}),1):g!==void 0||I!==void 0||T!==void 0||A!==void 0||te!==void 0||j!==void 0?qe=this.pad(this.hex({min:g,max:I}),2)+this.pad(this.hex({min:T,max:A}),2)+this.pad(this.hex({min:te,max:j}),2):qe=this.pad(this.hex({min:C,max:v}),2)+this.pad(this.hex({min:C,max:v}),2)+this.pad(this.hex({min:C,max:v}),2),ua+qe}a=b(a,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:!1,casing:"lower",min:0,max:255,min_red:void 0,max_red:void 0,min_green:void 0,max_green:void 0,min_blue:void 0,max_blue:void 0,min_alpha:0,max_alpha:1});var x=a.grayscale,C=a.min,v=a.max,g=a.min_red,I=a.max_red,T=a.min_green,A=a.max_green,te=a.min_blue,j=a.max_blue,le=a.min_alpha,ue=a.max_alpha;a.min_red===void 0&&(g=C),a.max_red===void 0&&(I=v),a.min_green===void 0&&(T=C),a.max_green===void 0&&(A=v),a.min_blue===void 0&&(te=C),a.max_blue===void 0&&(j=v),a.min_alpha===void 0&&(le=0),a.max_alpha===void 0&&(ue=1),x&&C===0&&v===255&&g!==void 0&&I!==void 0&&(C=(g+T+te)/3,v=(I+A+j)/3);var ce;if(a.format==="hex")ce=f.call(this,2,6,!0);else if(a.format==="shorthex")ce=f.call(this,1,3,!0);else if(a.format==="rgb")ce=l.call(this,!1);else if(a.format==="rgba")ce=l.call(this,!0);else if(a.format==="0x")ce="0x"+f.call(this,2,6);else{if(a.format==="name")return this.pick(this.get("colorNames"));throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".')}return a.casing==="upper"&&(ce=ce.toUpperCase()),ce},c.prototype.domain=function(a){return a=b(a),this.word()+"."+(a.tld||this.tld())},c.prototype.email=function(a){return a=b(a),this.word({length:a.length})+"@"+(a.domain||this.domain())},c.prototype.fbid=function(){return"10000"+this.string({pool:"1234567890",length:11})},c.prototype.google_analytics=function(){var a=this.pad(this.natural({max:999999}),6),t=this.pad(this.natural({max:99}),2);return"UA-"+a+"-"+t},c.prototype.hashtag=function(){return"#"+this.word()},c.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})},c.prototype.ipv6=function(){var a=this.n(this.hash,8,{length:4});return a.join(":")},c.prototype.klout=function(){return this.natural({min:1,max:99})},c.prototype.mac=function(a){return a=b(a,{delimiter:":"}),this.pad(this.natural({max:255}).toString(16),2)+a.delimiter+this.pad(this.natural({max:255}).toString(16),2)+a.delimiter+this.pad(this.natural({max:255}).toString(16),2)+a.delimiter+this.pad(this.natural({max:255}).toString(16),2)+a.delimiter+this.pad(this.natural({max:255}).toString(16),2)+a.delimiter+this.pad(this.natural({max:255}).toString(16),2)},c.prototype.semver=function(a){a=b(a,{include_prerelease:!0});var t=this.pickone(["^","~","<",">","<=",">=","="]);a.range&&(t=a.range);var l="";return a.include_prerelease&&(l=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1])),t+this.rpg("3d10").join(".")+l},c.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai","al","am","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},c.prototype.tld=function(){return this.pick(this.tlds())},c.prototype.twitter=function(){return"@"+this.word()},c.prototype.url=function(a){a=b(a,{protocol:"http",domain:this.domain(a),domain_prefix:"",path:this.word(),extensions:[]});var t=a.extensions.length>0?"."+this.pick(a.extensions):"",l=a.domain_prefix?a.domain_prefix+"."+a.domain:a.domain;return a.protocol+"://"+l+"/"+a.path+t},c.prototype.port=function(){return this.integer({min:0,max:65535})},c.prototype.locale=function(a){return a=b(a),a.region?this.pick(this.get("locale_regions")):this.pick(this.get("locale_languages"))},c.prototype.locales=function(a){return a=b(a),a.region?this.get("locale_regions"):this.get("locale_languages")},c.prototype.loremPicsum=function(a){a=b(a,{width:500,height:500,greyscale:!1,blurred:!1});var t=a.greyscale?"g/":"",l=a.blurred?"/?blur":"/?random";return"https://picsum.photos/"+t+a.width+"/"+a.height+l},c.prototype.address=function(a){return a=b(a),this.natural({min:5,max:2e3})+" "+this.street(a)},c.prototype.altitude=function(a){return a=b(a,{fixed:5,min:0,max:8848}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},c.prototype.areacode=function(a){a=b(a,{parens:!0});var t=a.exampleNumber?"555":this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return a.parens?"("+t+")":t},c.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},c.prototype.coordinates=function(a){return this.latitude(a)+", "+this.longitude(a)},c.prototype.countries=function(){return this.get("countries")},c.prototype.country=function(a){a=b(a);var t=this.pick(this.countries());return a.raw?t:a.full?t.name:t.abbreviation},c.prototype.depth=function(a){return a=b(a,{fixed:5,min:-10994,max:0}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},c.prototype.geohash=function(a){return a=b(a,{length:7}),this.string({length:a.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},c.prototype.geojson=function(a){return this.latitude(a)+", "+this.longitude(a)+", "+this.altitude(a)},c.prototype.latitude=function(a){var[t,l,f]=["ddm","dms","dd"];a=b(a,a&&a.format&&[t,l].includes(a.format.toLowerCase())?{min:0,max:89,fixed:4}:{fixed:5,min:-90,max:90,format:f});var x=a.format.toLowerCase();switch((x===t||x===l)&&(M(a.min<0||a.min>89,"Chance: Min specified is out of range. Should be between 0 - 89"),M(a.max<0||a.max>89,"Chance: Max specified is out of range. Should be between 0 - 89"),M(a.fixed>4,"Chance: Fixed specified should be below or equal to 4")),x){case t:return this.integer({min:a.min,max:a.max})+"°"+this.floating({min:0,max:59,fixed:a.fixed});case l:return this.integer({min:a.min,max:a.max})+"°"+this.integer({min:0,max:59})+"’"+this.floating({min:0,max:59,fixed:a.fixed})+"”";case f:default:return this.floating({min:a.min,max:a.max,fixed:a.fixed})}},c.prototype.longitude=function(a){var[t,l,f]=["ddm","dms","dd"];a=b(a,a&&a.format&&[t,l].includes(a.format.toLowerCase())?{min:0,max:179,fixed:4}:{fixed:5,min:-180,max:180,format:f});var x=a.format.toLowerCase();switch((x===t||x===l)&&(M(a.min<0||a.min>179,"Chance: Min specified is out of range. Should be between 0 - 179"),M(a.max<0||a.max>179,"Chance: Max specified is out of range. Should be between 0 - 179"),M(a.fixed>4,"Chance: Fixed specified should be below or equal to 4")),x){case t:return this.integer({min:a.min,max:a.max})+"°"+this.floating({min:0,max:59.9999,fixed:a.fixed});case l:return this.integer({min:a.min,max:a.max})+"°"+this.integer({min:0,max:59})+"’"+this.floating({min:0,max:59.9999,fixed:a.fixed})+"”";case f:default:return this.floating({min:a.min,max:a.max,fixed:a.fixed})}},c.prototype.phone=function(a){var t=this,l,f=function(te){var j=[];return te.sections.forEach(function(le){j.push(t.string({pool:"0123456789",length:le}))}),te.area+j.join(" ")};a=b(a,{formatted:!0,country:"us",mobile:!1,exampleNumber:!1}),a.formatted||(a.parens=!1);var x;switch(a.country){case"fr":a.mobile?(l=this.pick(["06","07"])+t.string({pool:"0123456789",length:8}),x=a.formatted?l.match(/../g).join(" "):l):(l=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+t.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+t.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+t.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+t.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+t.string({pool:"0123456789",length:6}),"09"+t.string({pool:"0123456789",length:8})]),x=a.formatted?l.match(/../g).join(" "):l);break;case"uk":a.mobile?(l=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),x=a.formatted?f(l):f(l).replace(" ","")):(l=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[6]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[6]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[6]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[6]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[6]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[6]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[6]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[6]}]),x=a.formatted?f(l):f(l).replace(" ","","g"));break;case"za":a.mobile?(l=this.pick(["060"+this.pick(["3","4","5","6","7","8","9"])+t.string({pool:"0123456789",length:6}),"061"+this.pick(["0","1","2","3","4","5","8"])+t.string({pool:"0123456789",length:6}),"06"+t.string({pool:"0123456789",length:7}),"071"+this.pick(["0","1","2","3","4","5","6","7","8","9"])+t.string({pool:"0123456789",length:6}),"07"+this.pick(["2","3","4","6","7","8","9"])+t.string({pool:"0123456789",length:7}),"08"+this.pick(["0","1","2","3","4","5"])+t.string({pool:"0123456789",length:7})]),x=a.formatted||l):(l=this.pick(["01"+this.pick(["0","1","2","3","4","5","6","7","8"])+t.string({pool:"0123456789",length:7}),"02"+this.pick(["1","2","3","4","7","8"])+t.string({pool:"0123456789",length:7}),"03"+this.pick(["1","2","3","5","6","9"])+t.string({pool:"0123456789",length:7}),"04"+this.pick(["1","2","3","4","5","6","7","8","9"])+t.string({pool:"0123456789",length:7}),"05"+this.pick(["1","3","4","6","7","8"])+t.string({pool:"0123456789",length:7})]),x=a.formatted||l);break;case"us":var C=this.areacode(a).toString(),v=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),g=this.natural({min:1e3,max:9999}).toString();x=a.formatted?C+" "+v+"-"+g:C+v+g;break;case"br":var I=this.pick(["11","12","13","14","15","16","17","18","19","21","22","24","27","28","31","32","33","34","35","37","38","41","42","43","44","45","46","47","48","49","51","53","54","55","61","62","63","64","65","66","67","68","69","71","73","74","75","77","79","81","82","83","84","85","86","87","88","89","91","92","93","94","95","96","97","98","99"]),T;a.mobile?T="9"+t.string({pool:"0123456789",length:4}):T=this.natural({min:2e3,max:5999}).toString();var A=t.string({pool:"0123456789",length:4});x=a.formatted?"("+I+") "+T+"-"+A:I+T+A;break}return x},c.prototype.postal=function(){var a=this.character({pool:"XVTSRPNKLMHJGECBA"}),t=a+this.natural({max:9})+this.character({alpha:!0,casing:"upper"}),l=this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9});return t+" "+l},c.prototype.postcode=function(){var a=this.pick(this.get("postcodeAreas")).code,t=this.natural({max:9}),l=this.bool()?this.character({alpha:!0,casing:"upper"}):"",f=a+t+l,x=this.natural({max:9}),C=this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"}),v=x+C;return f+" "+v},c.prototype.counties=function(a){return a=b(a,{country:"uk"}),this.get("counties")[a.country.toLowerCase()]},c.prototype.county=function(a){return this.pick(this.counties(a)).name},c.prototype.provinces=function(a){return a=b(a,{country:"ca"}),this.get("provinces")[a.country.toLowerCase()]},c.prototype.province=function(a){return a&&a.full?this.pick(this.provinces(a)).name:this.pick(this.provinces(a)).abbreviation},c.prototype.state=function(a){return a&&a.full?this.pick(this.states(a)).name:this.pick(this.states(a)).abbreviation},c.prototype.states=function(a){a=b(a,{country:"us",us_states_and_dc:!0});var t;switch(a.country.toLowerCase()){case"us":var l=this.get("us_states_and_dc"),f=this.get("territories"),x=this.get("armed_forces");t=[],a.us_states_and_dc&&(t=t.concat(l)),a.territories&&(t=t.concat(f)),a.armed_forces&&(t=t.concat(x));break;case"it":case"mx":t=this.get("country_regions")[a.country.toLowerCase()];break;case"uk":t=this.get("counties")[a.country.toLowerCase()];break}return t},c.prototype.street=function(a){a=b(a,{country:"us",syllables:2});var t;switch(a.country.toLowerCase()){case"us":t=this.word({syllables:a.syllables}),t=this.capitalize(t),t+=" ",t+=a.short_suffix?this.street_suffix(a).abbreviation:this.street_suffix(a).name;break;case"it":t=this.word({syllables:a.syllables}),t=this.capitalize(t),t=(a.short_suffix?this.street_suffix(a).abbreviation:this.street_suffix(a).name)+" "+t;break}return t},c.prototype.street_suffix=function(a){return a=b(a,{country:"us"}),this.pick(this.street_suffixes(a))},c.prototype.street_suffixes=function(a){return a=b(a,{country:"us"}),this.get("street_suffixes")[a.country.toLowerCase()]},c.prototype.zip=function(a){var t=this.n(this.natural,5,{max:9});return a&&a.plusfour===!0&&(t.push("-"),t=t.concat(this.n(this.natural,4,{max:9}))),t.join("")},c.prototype.ampm=function(){return this.bool()?"am":"pm"},c.prototype.date=function(a){var t,l;if(a&&(a.min||a.max)){a=b(a,{american:!0,string:!1});var f=typeof a.min<"u"?a.min.getTime():1,x=typeof a.max<"u"?a.max.getTime():864e13;l=new Date(this.integer({min:f,max:x}))}else{var C=this.month({raw:!0}),v=C.days;a&&a.month&&(v=this.get("months")[(a.month%12+12)%12].days),a=b(a,{year:parseInt(this.year(),10),month:C.numeric-1,day:this.natural({min:1,max:v}),hour:this.hour({twentyfour:!0}),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),l=new Date(a.year,a.month,a.day,a.hour,a.minute,a.second,a.millisecond)}return a.american?t=l.getMonth()+1+"/"+l.getDate()+"/"+l.getFullYear():t=l.getDate()+"/"+(l.getMonth()+1)+"/"+l.getFullYear(),a.string?t:l},c.prototype.hammertime=function(a){return this.date(a).getTime()},c.prototype.hour=function(a){return a=b(a,{min:a&&a.twentyfour?0:1,max:a&&a.twentyfour?23:12}),M(a.min<0,"Chance: Min cannot be less than 0."),M(a.twentyfour&&a.max>23,"Chance: Max cannot be greater than 23 for twentyfour option."),M(!a.twentyfour&&a.max>12,"Chance: Max cannot be greater than 12."),M(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},c.prototype.millisecond=function(){return this.natural({max:999})},c.prototype.minute=c.prototype.second=function(a){return a=b(a,{min:0,max:59}),M(a.min<0,"Chance: Min cannot be less than 0."),M(a.max>59,"Chance: Max cannot be greater than 59."),M(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},c.prototype.month=function(a){a=b(a,{min:1,max:12}),M(a.min<1,"Chance: Min cannot be less than 1."),M(a.max>12,"Chance: Max cannot be greater than 12."),M(a.min>a.max,"Chance: Min cannot be greater than Max.");var t=this.pick(this.months().slice(a.min-1,a.max));return a.raw?t:t.name},c.prototype.months=function(){return this.get("months")},c.prototype.second=function(){return this.natural({max:59})},c.prototype.timestamp=function(){return this.natural({min:1,max:parseInt(new Date().getTime()/1e3,10)})},c.prototype.weekday=function(a){a=b(a,{weekday_only:!1});var t=["Monday","Tuesday","Wednesday","Thursday","Friday"];return a.weekday_only||(t.push("Saturday"),t.push("Sunday")),this.pickone(t)},c.prototype.year=function(a){return a=b(a,{min:new Date().getFullYear()}),a.max=typeof a.max<"u"?a.max:a.min+100,this.natural(a).toString()},c.prototype.cc=function(a){a=b(a);var t,l,f;return t=a.type?this.cc_type({name:a.type,raw:!0}):this.cc_type({raw:!0}),l=t.prefix.split(""),f=t.length-t.prefix.length-1,l=l.concat(this.n(this.integer,f,{min:0,max:9})),l.push(this.luhn_calculate(l.join(""))),l.join("")},c.prototype.cc_types=function(){return this.get("cc_types")},c.prototype.cc_type=function(a){a=b(a);var t=this.cc_types(),l=null;if(a.name){for(var f=0;f<t.length;f++)if(t[f].name===a.name||t[f].short_name===a.name){l=t[f];break}if(l===null)throw new RangeError("Chance: Credit card type '"+a.name+"' is not supported")}else l=this.pick(t);return a.raw?l:l.name},c.prototype.currency_types=function(){return this.get("currency_types")},c.prototype.currency=function(){return this.pick(this.currency_types())},c.prototype.timezones=function(){return this.get("timezones")},c.prototype.timezone=function(){return this.pick(this.timezones())},c.prototype.currency_pair=function(a){var t=this.unique(this.currency,2,{comparator:function(l,f){return l.reduce(function(x,C){return x||C.code===f.code},!1)}});return a?t[0].code+"/"+t[1].code:t},c.prototype.dollar=function(a){a=b(a,{max:1e4,min:0});var t=this.floating({min:a.min,max:a.max,fixed:2}).toString(),l=t.split(".")[1];return l===void 0?t+=".00":l.length<2&&(t=t+"0"),t<0?"-$"+t.replace("-",""):"$"+t},c.prototype.euro=function(a){return Number(this.dollar(a).replace("$","")).toLocaleString()+"€"},c.prototype.exp=function(a){a=b(a);var t={};return t.year=this.exp_year(),t.year===new Date().getFullYear().toString()?t.month=this.exp_month({future:!0}):t.month=this.exp_month(),a.raw?t:t.month+"/"+t.year},c.prototype.exp_month=function(a){a=b(a);var t,l,f=new Date().getMonth()+1;if(a.future&&f!==12)do t=this.month({raw:!0}).numeric,l=parseInt(t,10);while(l<=f);else t=this.month({raw:!0}).numeric;return t},c.prototype.exp_year=function(){var a=new Date().getMonth()+1,t=new Date().getFullYear();return this.year({min:a===12?t+1:t,max:t+10})},c.prototype.vat=function(a){switch(a=b(a,{country:"it"}),a.country.toLowerCase()){case"it":return this.it_vat()}},c.prototype.iban=function(){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZ",t=a+"0123456789",l=this.string({length:2,pool:a})+this.pad(this.integer({min:0,max:99}),2)+this.string({length:4,pool:t})+this.pad(this.natural(),this.natural({min:6,max:26}));return l},c.prototype.it_vat=function(){var a=this.natural({min:1,max:18e5});return a=this.pad(a,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3),a+this.luhn_calculate(a)},c.prototype.cf=function(a){a=a||{};var t=a.gender?a.gender:this.gender(),l=a.first?a.first:this.first({gender:t,nationality:"it"}),f=a.last?a.last:this.last({nationality:"it"}),x=a.birthday?a.birthday:this.birthday(),C=a.city?a.city:this.pickone(["A","B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),v=[],g=function(A,te){var j,le=[];return A.length<3?le=A.split("").concat("XXX".split("")).splice(0,3):(j=A.toUpperCase().split("").map(function(ue){return"BCDFGHJKLMNPRSTVWZ".indexOf(ue)!==-1?ue:void 0}).join(""),j.length>3&&(te?j=j.substr(0,3):j=j[0]+j.substr(2,2)),j.length<3&&(le=j,j=A.toUpperCase().split("").map(function(ue){return"AEIOU".indexOf(ue)!==-1?ue:void 0}).join("").substr(0,3-le.length)),le=le+j),le},I=function(A,te,j){var le=["A","B","C","D","E","H","L","M","P","R","S","T"];return A.getFullYear().toString().substr(2)+le[A.getMonth()]+j.pad(A.getDate()+(te.toLowerCase()==="female"?40:0),2)},T=function(A){for(var te="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",j="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",le="ABCDEFGHIJKLMNOPQRSTUVWXYZ",ue="BAKPLCQDREVOSFTGUHMINJWZYX",ce=0,de=0;de<15;de++)de%2!==0?ce+=le.indexOf(j[te.indexOf(A[de])]):ce+=ue.indexOf(j[te.indexOf(A[de])]);return le[ce%26]};return v=v.concat(g(f,!0),g(l),I(x,t,this),C.toUpperCase().split("")).join(""),v+=T(v.toUpperCase()),v.toUpperCase()},c.prototype.pl_pesel=function(){for(var a=this.natural({min:1,max:9999999999}),t=this.pad(a,10).split(""),l=0;l<t.length;l++)t[l]=parseInt(t[l]);var f=(1*t[0]+3*t[1]+7*t[2]+9*t[3]+1*t[4]+3*t[5]+7*t[6]+9*t[7]+1*t[8]+3*t[9])%10;return f!==0&&(f=10-f),t.join("")+f},c.prototype.pl_nip=function(){for(var a=this.natural({min:1,max:999999999}),t=this.pad(a,9).split(""),l=0;l<t.length;l++)t[l]=parseInt(t[l]);var f=(6*t[0]+5*t[1]+7*t[2]+2*t[3]+3*t[4]+4*t[5]+5*t[6]+6*t[7]+7*t[8])%11;return f===10?this.pl_nip():t.join("")+f},c.prototype.pl_regon=function(){for(var a=this.natural({min:1,max:99999999}),t=this.pad(a,8).split(""),l=0;l<t.length;l++)t[l]=parseInt(t[l]);var f=(8*t[0]+9*t[1]+2*t[2]+3*t[3]+4*t[4]+5*t[5]+6*t[6]+7*t[7])%11;return f===10&&(f=0),t.join("")+f},c.prototype.music_genre=function(a="general"){if(!(a.toLowerCase()in D.music_genres))throw new Error(`Unsupported genre: ${a}`);const t=D.music_genres[a.toLowerCase()],l=this.integer({min:0,max:t.length-1});return t[l]},c.prototype.note=function(a){a=b(a,{notes:"flatKey"});var t={naturals:["C","D","E","F","G","A","B"],flats:["D♭","E♭","G♭","A♭","B♭"],sharps:["C♯","D♯","F♯","G♯","A♯"]};return t.all=t.naturals.concat(t.flats.concat(t.sharps)),t.flatKey=t.naturals.concat(t.flats),t.sharpKey=t.naturals.concat(t.sharps),this.pickone(t[a.notes])},c.prototype.midi_note=function(a){var t=0,l=127;return a=b(a,{min:t,max:l}),this.integer({min:a.min,max:a.max})},c.prototype.chord_quality=function(a){a=b(a,{jazz:!0});var t=["maj","min","aug","dim"];return a.jazz&&(t=["maj7","min7","7","sus","dim","ø"]),this.pickone(t)},c.prototype.chord=function(a){return a=b(a),this.note(a)+this.chord_quality(a)},c.prototype.tempo=function(a){var t=40,l=320;return a=b(a,{min:t,max:l}),this.integer({min:a.min,max:a.max})},c.prototype.coin=function(){return this.bool()?"heads":"tails"};function z(a){return function(){return this.natural(a)}}c.prototype.d4=z({min:1,max:4}),c.prototype.d6=z({min:1,max:6}),c.prototype.d8=z({min:1,max:8}),c.prototype.d10=z({min:1,max:10}),c.prototype.d12=z({min:1,max:12}),c.prototype.d20=z({min:1,max:20}),c.prototype.d30=z({min:1,max:30}),c.prototype.d100=z({min:1,max:100}),c.prototype.rpg=function(a,t){if(t=b(t),a){var l=a.toLowerCase().split("d"),f=[];if(l.length!==2||!parseInt(l[0],10)||!parseInt(l[1],10))throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var x=l[0];x>0;x--)f[x-1]=this.natural({min:1,max:l[1]});return typeof t.sum<"u"&&t.sum?f.reduce(function(C,v){return C+v}):f}else throw new RangeError("Chance: A type of die roll must be included")},c.prototype.guid=function(a){a=b(a,{version:5});var t="abcdef1234567890",l="ab89",f=this.string({pool:t,length:8})+"-"+this.string({pool:t,length:4})+"-"+a.version+this.string({pool:t,length:3})+"-"+this.string({pool:l,length:1})+this.string({pool:t,length:3})+"-"+this.string({pool:t,length:12});return f},c.prototype.hash=function(a){a=b(a,{length:40,casing:"lower"});var t=a.casing==="upper"?m.toUpperCase():m;return this.string({pool:t,length:a.length})},c.prototype.luhn_check=function(a){var t=a.toString(),l=+t.substring(t.length-1);return l===this.luhn_calculate(+t.substring(0,t.length-1))},c.prototype.luhn_calculate=function(a){for(var t=a.toString().split("").reverse(),l=0,f,x=0,C=t.length;C>x;++x)f=+t[x],x%2===0&&(f*=2,f>9&&(f-=9)),l+=f;return l*9%10},c.prototype.md5=function(a){var t={str:"",key:null,raw:!1};if(!a)t.str=this.string(),a={};else if(typeof a=="string")t.str=a,a={};else{if(typeof a!="object")return null;if(a.constructor==="Array")return null}if(t=b(a,t),!t.str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(t.str,t.key,t.raw)},c.prototype.file=function(a){var t=a||{},l="fileExtension",f=Object.keys(this.get("fileExtension")),x,C;if(x=this.word({length:t.length}),t.extension)return C=t.extension,x+"."+C;if(t.extensions){if(Array.isArray(t.extensions))return C=this.pickone(t.extensions),x+"."+C;if(t.extensions.constructor===Object){var v=t.extensions,g=Object.keys(v);return C=this.pickone(v[this.pickone(g)]),x+"."+C}throw new Error("Chance: Extensions must be an Array or Object")}if(t.fileType){var I=t.fileType;if(f.indexOf(I)!==-1)return C=this.pickone(this.get(l)[I]),x+"."+C;throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'")}return C=this.pickone(this.get(l)[this.pickone(f)]),x+"."+C},c.prototype.fileWithContent=function(a){var t=a||{},l="fileName"in t?t.fileName:this.file().split(".")[0];if(l+="."+("fileExtension"in t?t.fileExtension:this.file().split(".")[1]),typeof t.fileSize!="number")throw new Error("File size must be an integer");var f={fileData:this.buffer({length:t.fileSize}),fileName:l};return f};var D={firstNames:{male:{en:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],it:["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo","Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni","Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","Niccolò","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano","Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"],nl:["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob","Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","Daniël","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert","Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","Joël","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan","Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"],fr:["Aaron","Abdon","Abel","Abélard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","Adalbéron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Andelin","Adelphe","Adam","Adéodat","Adhémar","Adjutor","Adolphe","Adonis","Adon","Adrien","Agapet","Agathange","Agathon","Agilbert","Agénor","Agnan","Aignan","Agrippin","Aimable","Aimé","Alain","Alban","Albin","Aubin","Albéric","Albert","Albertet","Alcibiade","Alcide","Alcée","Alcime","Aldonce","Aldric","Aldéric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Aleaume","Almine","Almire","Aloïs","Alphée","Alphonse","Alpinien","Alverède","Amalric","Amaury","Amandin","Amant","Ambroise","Amédée","Amélien","Amiel","Amour","Anaël","Anastase","Anatole","Ancelin","Andéol","Andoche","André","Andoche","Ange","Angelin","Angilbe","Anglebert","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antheaume","Anthime","Antide","Antoine","Antonius","Antonin","Apollinaire","Apollon","Aquilin","Arcade","Archambaud","Archambeau","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","Arsène","Arsinoé","Arthaud","Arthème","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Audric","Auguste","Augustin","Aurèle","Aurélien","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Aymond","Balthazar","Baptiste","Barnabé","Barthélemy","Bartimée","Basile","Bastien","Baudouin","Bénigne","Benjamin","Benoît","Bérenger","Bérard","Bernard","Bertrand","Blaise","Bon","Boniface","Bouchard","Brice","Brieuc","Bruno","Brunon","Calixte","Calliste","Camélien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","Cédric","Céleste","Célestin","Célien","Césaire","César","Charles","Charlemagne","Childebert","Chilpéric","Chrétien","Christian","Christodule","Christophe","Chrysostome","Clarence","Claude","Claudien","Cléandre","Clément","Clotaire","Côme","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Cyril","Damien","Daniel","David","Delphin","Denis","Désiré","Didier","Dieudonné","Dimitri","Dominique","Dorian","Dorothée","Edgard","Edmond","Édouard","Éleuthère","Élie","Élisée","Émeric","Émile","Émilien","Emmanuel","Enguerrand","Épiphane","Éric","Esprit","Ernest","Étienne","Eubert","Eudes","Eudoxe","Eugène","Eusèbe","Eustache","Évariste","Évrard","Fabien","Fabrice","Falba","Félicité","Félix","Ferdinand","Fiacre","Fidèle","Firmin","Flavien","Flodoard","Florent","Florentin","Florestan","Florian","Fortuné","Foulques","Francisque","François","Français","Franciscus","Francs","Frédéric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","Gaël","Garnier","Gaston","Gaspard","Gatien","Gaud","Gautier","Gédéon","Geoffroy","Georges","Géraud","Gérard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","Grégoire","Guérin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","Hédelin","Hélier","Henri","Herbert","Herluin","Hervé","Hilaire","Hildebert","Hincmar","Hippolyte","Honoré","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","Jérémie","Jérôme","Joachim","Joanny","Job","Jocelyn","Joël","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","Judicaël","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","Léandre","Léon","Léonard","Léopold","Leu","Loup","Leufroy","Libère","Liétald","Lionel","Loïc","Longin","Lorrain","Lorraine","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","Manassé","Marc","Marceau","Marcel","Marcelin","Marius","Marseille","Martial","Martin","Mathurin","Matthias","Mathias","Matthieu","Maugis","Maurice","Mauricet","Maxence","Maxime","Maximilien","Mayeul","Médéric","Melchior","Mence","Merlin","Mérovée","Michaël","Michel","Moïse","Morgan","Nathan","Nathanaël","Narcisse","Néhémie","Nestor","Nestor","Nicéphore","Nicolas","Noé","Noël","Norbert","Normand","Normands","Octave","Odilon","Odon","Oger","Olivier","Oury","Pacôme","Palémon","Parfait","Pascal","Paterne","Patrice","Paul","Pépin","Perceval","Philémon","Philibert","Philippe","Philothée","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","Raphaël","Raymond","Régis","Réjean","Rémi","Renaud","René","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","Roméo","Rome","Ronan","Roselin","Salomon","Samuel","Savin","Savinien","Scholastique","Sébastien","Séraphin","Serge","Séverin","Sidoine","Sigebert","Sigismond","Silvère","Simon","Siméon","Sixte","Stanislas","Stéphane","Stephan","Sylvain","Sylvestre","Tancrède","Tanguy","Taurin","Théodore","Théodose","Théophile","Théophraste","Thibault","Thibert","Thierry","Thomas","Timoléon","Timothée","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","Valère","Valéry","Venance","Venant","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vitalien","Vivien","Waleran","Wandrille","Xavier","Xénophon","Yves","Zacharie","Zaché","Zéphirin"]},female:{en:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],it:["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta","Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Lea","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria","Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina","Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"],nl:["Ada","Arianne","Afke","Amanda","Amber","Amy","Aniek","Anita","Anja","Anna","Anne","Annelies","Annemarie","Annette","Anouk","Astrid","Aukje","Barbara","Bianca","Carla","Carlijn","Carolien","Chantal","Charlotte","Claudia","Daniëlle","Debora","Diane","Dora","Eline","Elise","Ella","Ellen","Emma","Esmee","Evelien","Esther","Erica","Eva","Femke","Fleur","Floor","Froukje","Gea","Gerda","Hanna","Hanneke","Heleen","Hilde","Ilona","Ina","Inge","Ingrid","Iris","Isabel","Isabelle","Janneke","Jasmijn","Jeanine","Jennifer","Jessica","Johanna","Joke","Julia","Julie","Karen","Karin","Katja","Kim","Lara","Laura","Lena","Lianne","Lieke","Lilian","Linda","Lisa","Lisanne","Lotte","Louise","Maaike","Manon","Marga","Maria","Marissa","Marit","Marjolein","Martine","Marleen","Melissa","Merel","Miranda","Michelle","Mirjam","Mirthe","Naomi","Natalie","Nienke","Nina","Noortje","Olivia","Patricia","Paula","Paulien","Ramona","Ria","Rianne","Roos","Rosanne","Ruth","Sabrina","Sandra","Sanne","Sara","Saskia","Silvia","Sofia","Sophie","Sonja","Suzanne","Tamara","Tess","Tessa","Tineke","Valerie","Vanessa","Veerle","Vera","Victoria","Wendy","Willeke","Yvonne","Zoë"],fr:["Abdon","Abel","Abigaëlle","Abigaïl","Acacius","Acanthe","Adalbert","Adalsinde","Adegrine","Adélaïde","Adèle","Adélie","Adeline","Adeltrude","Adolphe","Adonis","Adrastée","Adrehilde","Adrienne","Agathe","Agilbert","Aglaé","Aignan","Agneflète","Agnès","Agrippine","Aimé","Alaine","Alaïs","Albane","Albérade","Alberte","Alcide","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexine","Alice","Aliénor","Aliette","Aline","Alix","Alizé","Aloïse","Aloyse","Alphonsine","Althée","Amaliane","Amalthée","Amande","Amandine","Amant","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","Amélie","Améthyste","Aminte","Anaël","Anaïs","Anastasie","Anatole","Ancelin","Andrée","Anémone","Angadrême","Angèle","Angeline","Angélique","Angilbert","Anicet","Annabelle","Anne","Annette","Annick","Annie","Annonciade","Ansbert","Anstrudie","Anthelme","Antigone","Antoinette","Antonine","Aphélie","Apolline","Apollonie","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armelle","Armide","Armelle","Armin","Arnaud","Arsène","Arsinoé","Artémis","Arthur","Ascelin","Ascension","Assomption","Astarté","Astérie","Astrée","Astrid","Athalie","Athanasie","Athina","Aube","Albert","Aude","Audrey","Augustine","Aure","Aurélie","Aurélien","Aurèle","Aurore","Auxence","Aveline","Abigaëlle","Avoye","Axelle","Aymard","Azalée","Adèle","Adeline","Barbe","Basilisse","Bathilde","Béatrice","Béatrix","Bénédicte","Bérengère","Bernadette","Berthe","Bertille","Beuve","Blanche","Blanc","Blandine","Brigitte","Brune","Brunehilde","Callista","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","Cécile","Céleste","Célestine","Céline","Chantal","Charlène","Charline","Charlotte","Chloé","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","Clémence","Clémentine","Cléo","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Daniel","Daniel","Daphné","Débora","Delphine","Denise","Diane","Dieudonné","Dominique","Doriane","Dorothée","Douce","Édith","Edmée","Éléonore","Éliane","Élia","Éliette","Élisabeth","Élise","Ella","Élodie","Éloïse","Elsa","Émeline","Émérance","Émérentienne","Émérencie","Émilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","Eugénie","Eulalie","Euphrasie","Eusébie","Évangéline","Eva","Ève","Évelyne","Fanny","Fantine","Faustine","Félicie","Fernande","Flavie","Fleur","Flore","Florence","Florie","Fortuné","France","Francia","Françoise","Francine","Gabrielle","Gaëlle","Garance","Geneviève","Georgette","Gerberge","Germaine","Gertrude","Gisèle","Guenièvre","Guilhemine","Guillemette","Gustave","Gwenael","Hélène","Héloïse","Henriette","Hermine","Hermione","Hippolyte","Honorine","Hortense","Huguette","Ines","Irène","Irina","Iris","Isabeau","Isabelle","Iseult","Isolde","Ismérie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jocelyne","Joëlle","Joséphine","Judith","Julia","Julie","Jules","Juliette","Justine","Katy","Kathy","Katie","Laura","Laure","Laureline","Laurence","Laurene","Lauriane","Laurianne","Laurine","Léa","Léna","Léonie","Léon","Léontine","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Lydie","Megane","Madeleine","Magali","Maguelone","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Myriam","Marie","Marine","Marion","Marlène","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxime","Mélanie","Melissa","Mélissandre","Mélisande","Mélodie","Michel","Micheline","Mireille","Miriam","Moïse","Monique","Morgane","Muriel","Mylène","Nadège","Nadine","Nathalie","Nicole","Nicolette","Nine","Noël","Noémie","Océane","Odette","Odile","Olive","Olivia","Olympe","Ombline","Ombeline","Ophélie","Oriande","Oriane","Ozanne","Pascale","Pascaline","Paule","Paulette","Pauline","Priscille","Prisca","Prisque","Pécine","Pélagie","Pénélope","Perrine","Pétronille","Philippine","Philomène","Philothée","Primerose","Prudence","Pulchérie","Quentine","Quiéta","Quintia","Quintilla","Rachel","Raphaëlle","Raymonde","Rebecca","Régine","Réjeanne","René","Rita","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","Salomé","Sandra","Sandrine","Sarah","Ségolène","Séverine","Sibylle","Simone","Sixt","Solange","Soline","Solène","Sophie","Stéphanie","Suzanne","Sylvain","Sylvie","Tatiana","Thaïs","Théodora","Thérèse","Tiphaine","Ursule","Valentine","Valérie","Véronique","Victoire","Victorine","Vinciane","Violette","Virginie","Viviane","Xavière","Yolande","Ysaline","Yvette","Yvonne","Zélie","Zita","Zoé"]}},lastNames:{en:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],it:["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena","Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi","Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri","Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani","Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi","Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti","Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli","Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli","Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci","Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi","Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini","Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani","Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi","Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni","Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi","Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani","Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli","Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini","Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi","Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli","Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"],nl:["Albers","Alblas","Appelman","Baars","Baas","Bakker","Blank","Bleeker","Blok","Blom","Boer","Boers","Boldewijn","Boon","Boot","Bos","Bosch","Bosma","Bosman","Bouma","Bouman","Bouwman","Brands","Brouwer","Burger","Buijs","Buitenhuis","Ceder","Cohen","Dekker","Dekkers","Dijkman","Dijkstra","Driessen","Drost","Engel","Evers","Faber","Franke","Gerritsen","Goedhart","Goossens","Groen","Groenenberg","Groot","Haan","Hart","Heemskerk","Hendriks","Hermans","Hoekstra","Hofman","Hopman","Huisman","Jacobs","Jansen","Janssen","Jonker","Jaspers","Keijzer","Klaassen","Klein","Koek","Koenders","Kok","Kool","Koopman","Koopmans","Koning","Koster","Kramer","Kroon","Kuijpers","Kuiper","Kuipers","Kurt","Koster","Kwakman","Los","Lubbers","Maas","Markus","Martens","Meijer","Mol","Molenaar","Mulder","Nieuwenhuis","Peeters","Peters","Pengel","Pieters","Pool","Post","Postma","Prins","Pronk","Reijnders","Rietveld","Roest","Roos","Sanders","Schaap","Scheffer","Schenk","Schilder","Schipper","Schmidt","Scholten","Schouten","Schut","Schutte","Schuurman","Simons","Smeets","Smit","Smits","Snel","Swinkels","Tas","Terpstra","Timmermans","Tol","Tromp","Troost","Valk","Veenstra","Veldkamp","Verbeek","Verheul","Verhoeven","Vermeer","Vermeulen","Verweij","Vink","Visser","Voorn","Vos","Wagenaar","Wiersema","Willems","Willemsen","Witteveen","Wolff","Wolters","Zijlstra","Zwart","de Beer","de Boer","de Bruijn","de Bruin","de Graaf","de Groot","de Haan","de Haas","de Jager","de Jong","de Jonge","de Koning","de Lange","de Leeuw","de Ridder","de Rooij","de Ruiter","de Vos","de Vries","de Waal","de Wit","de Zwart","van Beek","van Boven","van Dam","van Dijk","van Dongen","van Doorn","van Egmond","van Eijk","van Es","van Gelder","van Gelderen","van Houten","van Hulst","van Kempen","van Kesteren","van Leeuwen","van Loon","van Mill","van Noord","van Ommen","van Ommeren","van Oosten","van Oostveen","van Rijn","van Schaik","van Veen","van Vliet","van Wijk","van Wijngaarden","van den Poel","van de Pol","van den Ploeg","van de Ven","van den Berg","van den Bosch","van den Brink","van den Broek","van den Heuvel","van der Heijden","van der Horst","van der Hulst","van der Kroon","van der Laan","van der Linden","van der Meer","van der Meij","van der Meulen","van der Molen","van der Sluis","van der Spek","van der Veen","van der Velde","van der Velden","van der Vliet","van der Wal"],uk:["Smith","Jones","Williams","Taylor","Brown","Davies","Evans","Wilson","Thomas","Johnson","Roberts","Robinson","Thompson","Wright","Walker","White","Edwards","Hughes","Green","Hall","Lewis","Harris","Clarke","Patel","Jackson","Wood","Turner","Martin","Cooper","Hill","Ward","Morris","Moore","Clark","Lee","King","Baker","Harrison","Morgan","Allen","James","Scott","Phillips","Watson","Davis","Parker","Price","Bennett","Young","Griffiths","Mitchell","Kelly","Cook","Carter","Richardson","Bailey","Collins","Bell","Shaw","Murphy","Miller","Cox","Richards","Khan","Marshall","Anderson","Simpson","Ellis","Adams","Singh","Begum","Wilkinson","Foster","Chapman","Powell","Webb","Rogers","Gray","Mason","Ali","Hunt","Hussain","Campbell","Matthews","Owen","Palmer","Holmes","Mills","Barnes","Knight","Lloyd","Butler","Russell","Barker","Fisher","Stevens","Jenkins","Murray","Dixon","Harvey","Graham","Pearson","Ahmed","Fletcher","Walsh","Kaur","Gibson","Howard","Andrews","Stewart","Elliott","Reynolds","Saunders","Payne","Fox","Ford","Pearce","Day","Brooks","West","Lawrence","Cole","Atkinson","Bradley","Spencer","Gill","Dawson","Ball","Burton","O'brien","Watts","Rose","Booth","Perry","Ryan","Grant","Wells","Armstrong","Francis","Rees","Hayes","Hart","Hudson","Newman","Barrett","Webster","Hunter","Gregory","Carr","Lowe","Page","Marsh","Riley","Dunn","Woods","Parsons","Berry","Stone","Reid","Holland","Hawkins","Harding","Porter","Robertson","Newton","Oliver","Reed","Kennedy","Williamson","Bird","Gardner","Shah","Dean","Lane","Cooke","Bates","Henderson","Parry","Burgess","Bishop","Walton","Burns","Nicholson","Shepherd","Ross","Cross","Long","Freeman","Warren","Nicholls","Hamilton","Byrne","Sutton","Mcdonald","Yates","Hodgson","Robson","Curtis","Hopkins","O'connor","Harper","Coleman","Watkins","Moss","Mccarthy","Chambers","O'neill","Griffin","Sharp","Hardy","Wheeler","Potter","Osborne","Johnston","Gordon","Doyle","Wallace","George","Jordan","Hutchinson","Rowe","Burke","May","Pritchard","Gilbert","Willis","Higgins","Read","Miles","Stevenson","Stephenson","Hammond","Arnold","Buckley","Walters","Hewitt","Barber","Nelson","Slater","Austin","Sullivan","Whitehead","Mann","Frost","Lambert","Stephens","Blake","Akhtar","Lynch","Goodwin","Barton","Woodward","Thomson","Cunningham","Quinn","Barnett","Baxter","Bibi","Clayton","Nash","Greenwood","Jennings","Holt","Kemp","Poole","Gallagher","Bond","Stokes","Tucker","Davidson","Fowler","Heath","Norman","Middleton","Lawson","Banks","French","Stanley","Jarvis","Gibbs","Ferguson","Hayward","Carroll","Douglas","Dickinson","Todd","Barlow","Peters","Lucas","Knowles","Hartley","Miah","Simmons","Morton","Alexander","Field","Morrison","Norris","Townsend","Preston","Hancock","Thornton","Baldwin","Burrows","Briggs","Parkinson","Reeves","Macdonald","Lamb","Black","Abbott","Sanders","Thorpe","Holden","Tomlinson","Perkins","Ashton","Rhodes","Fuller","Howe","Bryant","Vaughan","Dale","Davey","Weston","Bartlett","Whittaker","Davison","Kent","Skinner","Birch","Morley","Daniels","Glover","Howell","Cartwright","Pugh","Humphreys","Goddard","Brennan","Wall","Kirby","Bowen","Savage","Bull","Wong","Dobson","Smart","Wilkins","Kirk","Fraser","Duffy","Hicks","Patterson","Bradshaw","Little","Archer","Warner","Waters","O'sullivan","Farrell","Brookes","Atkins","Kay","Dodd","Bentley","Flynn","John","Schofield","Short","Haynes","Wade","Butcher","Henry","Sanderson","Crawford","Sheppard","Bolton","Coates","Giles","Gould","Houghton","Gibbons","Pratt","Manning","Law","Hooper","Noble","Dyer","Rahman","Clements","Moran","Sykes","Chan","Doherty","Connolly","Joyce","Franklin","Hobbs","Coles","Herbert","Steele","Kerr","Leach","Winter","Owens","Duncan","Naylor","Fleming","Horton","Finch","Fitzgerald","Randall","Carpenter","Marsden","Browne","Garner","Pickering","Hale","Dennis","Vincent","Chadwick","Chandler","Sharpe","Nolan","Lyons","Hurst","Collier","Peacock","Howarth","Faulkner","Rice","Pollard","Welch","Norton","Gough","Sinclair","Blackburn","Bryan","Conway","Power","Cameron","Daly","Allan","Hanson","Gardiner","Boyle","Myers","Turnbull","Wallis","Mahmood","Sims","Swift","Iqbal","Pope","Brady","Chamberlain","Rowley","Tyler","Farmer","Metcalfe","Hilton","Godfrey","Holloway","Parkin","Bray","Talbot","Donnelly","Nixon","Charlton","Benson","Whitehouse","Barry","Hope","Lord","North","Storey","Connor","Potts","Bevan","Hargreaves","Mclean","Mistry","Bruce","Howells","Hyde","Parkes","Wyatt","Fry","Lees","O'donnell","Craig","Forster","Mckenzie","Humphries","Mellor","Carey","Ingram","Summers","Leonard"],de:["Müller","Schmidt","Schneider","Fischer","Weber","Meyer","Wagner","Becker","Schulz","Hoffmann","Schäfer","Koch","Bauer","Richter","Klein","Wolf","Schröder","Neumann","Schwarz","Zimmermann","Braun","Krüger","Hofmann","Hartmann","Lange","Schmitt","Werner","Schmitz","Krause","Meier","Lehmann","Schmid","Schulze","Maier","Köhler","Herrmann","König","Walter","Mayer","Huber","Kaiser","Fuchs","Peters","Lang","Scholz","Möller","Weiß","Jung","Hahn","Schubert","Vogel","Friedrich","Keller","Günther","Frank","Berger","Winkler","Roth","Beck","Lorenz","Baumann","Franke","Albrecht","Schuster","Simon","Ludwig","Böhm","Winter","Kraus","Martin","Schumacher","Krämer","Vogt","Stein","Jäger","Otto","Sommer","Groß","Seidel","Heinrich","Brandt","Haas","Schreiber","Graf","Schulte","Dietrich","Ziegler","Kuhn","Kühn","Pohl","Engel","Horn","Busch","Bergmann","Thomas","Voigt","Sauer","Arnold","Wolff","Pfeiffer"],jp:["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Yamamoto","Nakamura","Kobayashi","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Saito","Matsumoto","Inoue","Kimura","Hayashi","Shimizu","Yamazaki","Mori","Abe","Ikeda","Hashimoto","Yamashita","Ishikawa","Nakajima","Maeda","Fujita","Ogawa","Goto","Okada","Hasegawa","Murakami","Kondo","Ishii","Saito","Sakamoto","Endo","Aoki","Fujii","Nishimura","Fukuda","Ota","Miura","Fujiwara","Okamoto","Matsuda","Nakagawa","Nakano","Harada","Ono","Tamura","Takeuchi","Kaneko","Wada","Nakayama","Ishida","Ueda","Morita","Hara","Shibata","Sakai","Kudo","Yokoyama","Miyazaki","Miyamoto","Uchida","Takagi","Ando","Taniguchi","Ohno","Maruyama","Imai","Takada","Fujimoto","Takeda","Murata","Ueno","Sugiyama","Masuda","Sugawara","Hirano","Kojima","Otsuka","Chiba","Kubo","Matsui","Iwasaki","Sakurai","Kinoshita","Noguchi","Matsuo","Nomura","Kikuchi","Sano","Onishi","Sugimoto","Arai"],es:["Garcia","Fernandez","Lopez","Martinez","Gonzalez","Rodriguez","Sanchez","Perez","Martin","Gomez","Ruiz","Diaz","Hernandez","Alvarez","Jimenez","Moreno","Munoz","Alonso","Romero","Navarro","Gutierrez","Torres","Dominguez","Gil","Vazquez","Blanco","Serrano","Ramos","Castro","Suarez","Sanz","Rubio","Ortega","Molina","Delgado","Ortiz","Morales","Ramirez","Marin","Iglesias","Santos","Castillo","Garrido","Calvo","Pena","Cruz","Cano","Nunez","Prieto","Diez","Lozano","Vidal","Pascual","Ferrer","Medina","Vega","Leon","Herrero","Vicente","Mendez","Guerrero","Fuentes","Campos","Nieto","Cortes","Caballero","Ibanez","Lorenzo","Pastor","Gimenez","Saez","Soler","Marquez","Carrasco","Herrera","Montero","Arias","Crespo","Flores","Andres","Aguilar","Hidalgo","Cabrera","Mora","Duran","Velasco","Rey","Pardo","Roman","Vila","Bravo","Merino","Moya","Soto","Izquierdo","Reyes","Redondo","Marcos","Carmona","Menendez"],fr:["Martin","Bernard","Thomas","Petit","Robert","Richard","Durand","Dubois","Moreau","Laurent","Simon","Michel","Lefèvre","Leroy","Roux","David","Bertrand","Morel","Fournier","Girard","Bonnet","Dupont","Lambert","Fontaine","Rousseau","Vincent","Müller","Lefèvre","Faure","André","Mercier","Blanc","Guérin","Boyer","Garnier","Chevalier","François","Legrand","Gauthier","Garcia","Perrin","Robin","Clément","Morin","Nicolas","Henry","Roussel","Matthieu","Gautier","Masson","Marchand","Duval","Denis","Dumont","Marie","Lemaire","Noël","Meyer","Dufour","Meunier","Brun","Blanchard","Giraud","Joly","Rivière","Lucas","Brunet","Gaillard","Barbier","Arnaud","Martínez","Gérard","Roche","Renard","Schmitt","Roy","Leroux","Colin","Vidal","Caron","Picard","Roger","Fabre","Aubert","Lemoine","Renaud","Dumas","Lacroix","Olivier","Philippe","Bourgeois","Pierre","Benoît","Rey","Leclerc","Payet","Rolland","Leclercq","Guillaume","Lecomte","López","Jean","Dupuy","Guillot","Hubert","Berger","Carpentier","Sánchez","Dupuis","Moulin","Louis","Deschamps","Huet","Vasseur","Perez","Boucher","Fleury","Royer","Klein","Jacquet","Adam","Paris","Poirier","Marty","Aubry","Guyot","Carré","Charles","Renault","Charpentier","Ménard","Maillard","Baron","Bertin","Bailly","Hervé","Schneider","Fernández","Le GallGall","Collet","Léger","Bouvier","Julien","Prévost","Millet","Perrot","Daniel","Le RouxRoux","Cousin","Germain","Breton","Besson","Langlois","Rémi","Le GoffGoff","Pelletier","Lévêque","Perrier","Leblanc","Barré","Lebrun","Marchal","Weber","Mallet","Hamon","Boulanger","Jacob","Monnier","Michaud","Rodríguez","Guichard","Gillet","Étienne","Grondin","Poulain","Tessier","Chevallier","Collin","Chauvin","Da SilvaSilva","Bouchet","Gay","Lemaître","Bénard","Maréchal","Humbert","Reynaud","Antoine","Hoarau","Perret","Barthélemy","Cordier","Pichon","Lejeune","Gilbert","Lamy","Delaunay","Pasquier","Carlier","LaporteLaporte"]},postcodeAreas:[{code:"AB"},{code:"AL"},{code:"B"},{code:"BA"},{code:"BB"},{code:"BD"},{code:"BH"},{code:"BL"},{code:"BN"},{code:"BR"},{code:"BS"},{code:"BT"},{code:"CA"},{code:"CB"},{code:"CF"},{code:"CH"},{code:"CM"},{code:"CO"},{code:"CR"},{code:"CT"},{code:"CV"},{code:"CW"},{code:"DA"},{code:"DD"},{code:"DE"},{code:"DG"},{code:"DH"},{code:"DL"},{code:"DN"},{code:"DT"},{code:"DY"},{code:"E"},{code:"EC"},{code:"EH"},{code:"EN"},{code:"EX"},{code:"FK"},{code:"FY"},{code:"G"},{code:"GL"},{code:"GU"},{code:"GY"},{code:"HA"},{code:"HD"},{code:"HG"},{code:"HP"},{code:"HR"},{code:"HS"},{code:"HU"},{code:"HX"},{code:"IG"},{code:"IM"},{code:"IP"},{code:"IV"},{code:"JE"},{code:"KA"},{code:"KT"},{code:"KW"},{code:"KY"},{code:"L"},{code:"LA"},{code:"LD"},{code:"LE"},{code:"LL"},{code:"LN"},{code:"LS"},{code:"LU"},{code:"M"},{code:"ME"},{code:"MK"},{code:"ML"},{code:"N"},{code:"NE"},{code:"NG"},{code:"NN"},{code:"NP"},{code:"NR"},{code:"NW"},{code:"OL"},{code:"OX"},{code:"PA"},{code:"PE"},{code:"PH"},{code:"PL"},{code:"PO"},{code:"PR"},{code:"RG"},{code:"RH"},{code:"RM"},{code:"S"},{code:"SA"},{code:"SE"},{code:"SG"},{code:"SK"},{code:"SL"},{code:"SM"},{code:"SN"},{code:"SO"},{code:"SP"},{code:"SR"},{code:"SS"},{code:"ST"},{code:"SW"},{code:"SY"},{code:"TA"},{code:"TD"},{code:"TF"},{code:"TN"},{code:"TQ"},{code:"TR"},{code:"TS"},{code:"TW"},{code:"UB"},{code:"W"},{code:"WA"},{code:"WC"},{code:"WD"},{code:"WF"},{code:"WN"},{code:"WR"},{code:"WS"},{code:"WV"},{code:"YO"},{code:"ZE"}],countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Åland Islands",abbreviation:"AX"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua and Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Plurinational State of Bolivia",abbreviation:"BO"},{name:"Bonaire, Sint Eustatius and Saba",abbreviation:"BQ"},{name:"Bosnia and Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Bouvet Island",abbreviation:"BV"},{name:"Brazil",abbreviation:"BR"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"Brunei Darussalam",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cabo Verde",abbreviation:"CV"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos (Keeling) Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo",abbreviation:"CG"},{name:"Democratic Republic of the Congo",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"Côte d'Ivoire",abbreviation:"CI"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"Curaçao",abbreviation:"CW"},{name:"Cyprus",abbreviation:"CY"},{name:"Czechia",abbreviation:"CZ"},{name:"Denmark",abbreviation:"DK"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Eswatini",abbreviation:"SZ"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands (Malvinas)",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Heard Island and McDonald Islands",abbreviation:"HM"},{name:"Holy See",abbreviation:"VA"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Islamic Republic of Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Democratic People's Republic of Korea",abbreviation:"KP"},{name:"Republic of Korea",abbreviation:"KR"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Lao People's Democratic Republic",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macao",abbreviation:"MO"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Mexico",abbreviation:"MX"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Republic of Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Kingdom of the Netherlands",abbreviation:"NL"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Macedonia",abbreviation:"MK"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"State of Palestine",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"Réunion",abbreviation:"RE"},{name:"Romania",abbreviation:"RO"},{name:"Russian Federation",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Saint Barthélemy",abbreviation:"BL"},{name:"Saint Helena, Ascension and Tristan da Cunha",abbreviation:"SH"},{name:"Saint Kitts and Nevis",abbreviation:"KN"},{name:"Saint Lucia",abbreviation:"LC"},{name:"Saint Martin (French part)",abbreviation:"MF"},{name:"Saint Pierre and Miquelon",abbreviation:"PM"},{name:"Saint Vincent and the Grenadines",abbreviation:"VC"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"Sao Tome and Principe",abbreviation:"ST"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Sint Maarten (Dutch part)",abbreviation:"SX"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia and the South Sandwich Islands",abbreviation:"GS"},{name:"South Sudan",abbreviation:"SS"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard and Jan Mayen",abbreviation:"SJ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syrian Arab Republic",abbreviation:"SY"},{name:"Taiwan, Province of China",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"United Republic of Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad and Tobago",abbreviation:"TT"},{name:"Tunisia",abbreviation:"TN"},{name:"Türkiye",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks and Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom of Great Britain and Northern Ireland",abbreviation:"GB"},{name:"United States Minor Outlying Islands",abbreviation:"UM"},{name:"United States of America",abbreviation:"US"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Bolivarian Republic of Venezuela",abbreviation:"VE"},{name:"Viet Nam",abbreviation:"VN"},{name:"Virgin Islands (British)",abbreviation:"VG"},{name:"Virgin Islands (U.S.)",abbreviation:"VI"},{name:"Wallis and Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"}],counties:{uk:[{name:"Bath and North East Somerset"},{name:"Aberdeenshire"},{name:"Anglesey"},{name:"Angus"},{name:"Bedford"},{name:"Blackburn with Darwen"},{name:"Blackpool"},{name:"Bournemouth"},{name:"Bracknell Forest"},{name:"Brighton & Hove"},{name:"Bristol"},{name:"Buckinghamshire"},{name:"Cambridgeshire"},{name:"Carmarthenshire"},{name:"Central Bedfordshire"},{name:"Ceredigion"},{name:"Cheshire East"},{name:"Cheshire West and Chester"},{name:"Clackmannanshire"},{name:"Conwy"},{name:"Cornwall"},{name:"County Antrim"},{name:"County Armagh"},{name:"County Down"},{name:"County Durham"},{name:"County Fermanagh"},{name:"County Londonderry"},{name:"County Tyrone"},{name:"Cumbria"},{name:"Darlington"},{name:"Denbighshire"},{name:"Derby"},{name:"Derbyshire"},{name:"Devon"},{name:"Dorset"},{name:"Dumfries and Galloway"},{name:"Dundee"},{name:"East Lothian"},{name:"East Riding of Yorkshire"},{name:"East Sussex"},{name:"Edinburgh?"},{name:"Essex"},{name:"Falkirk"},{name:"Fife"},{name:"Flintshire"},{name:"Gloucestershire"},{name:"Greater London"},{name:"Greater Manchester"},{name:"Gwent"},{name:"Gwynedd"},{name:"Halton"},{name:"Hampshire"},{name:"Hartlepool"},{name:"Herefordshire"},{name:"Hertfordshire"},{name:"Highlands"},{name:"Hull"},{name:"Isle of Wight"},{name:"Isles of Scilly"},{name:"Kent"},{name:"Lancashire"},{name:"Leicester"},{name:"Leicestershire"},{name:"Lincolnshire"},{name:"Lothian"},{name:"Luton"},{name:"Medway"},{name:"Merseyside"},{name:"Mid Glamorgan"},{name:"Middlesbrough"},{name:"Milton Keynes"},{name:"Monmouthshire"},{name:"Moray"},{name:"Norfolk"},{name:"North East Lincolnshire"},{name:"North Lincolnshire"},{name:"North Somerset"},{name:"North Yorkshire"},{name:"Northamptonshire"},{name:"Northumberland"},{name:"Nottingham"},{name:"Nottinghamshire"},{name:"Oxfordshire"},{name:"Pembrokeshire"},{name:"Perth and Kinross"},{name:"Peterborough"},{name:"Plymouth"},{name:"Poole"},{name:"Portsmouth"},{name:"Powys"},{name:"Reading"},{name:"Redcar and Cleveland"},{name:"Rutland"},{name:"Scottish Borders"},{name:"Shropshire"},{name:"Slough"},{name:"Somerset"},{name:"South Glamorgan"},{name:"South Gloucestershire"},{name:"South Yorkshire"},{name:"Southampton"},{name:"Southend-on-Sea"},{name:"Staffordshire"},{name:"Stirlingshire"},{name:"Stockton-on-Tees"},{name:"Stoke-on-Trent"},{name:"Strathclyde"},{name:"Suffolk"},{name:"Surrey"},{name:"Swindon"},{name:"Telford and Wrekin"},{name:"Thurrock"},{name:"Torbay"},{name:"Tyne and Wear"},{name:"Warrington"},{name:"Warwickshire"},{name:"West Berkshire"},{name:"West Glamorgan"},{name:"West Lothian"},{name:"West Midlands"},{name:"West Sussex"},{name:"West Yorkshire"},{name:"Western Isles"},{name:"Wiltshire"},{name:"Windsor and Maidenhead"},{name:"Wokingham"},{name:"Worcestershire"},{name:"Wrexham"},{name:"York"}]},provinces:{ca:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],it:[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],locale_languages:["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],locale_regions:["agq-CM","asa-TZ","ast-ES","bas-CM","bem-ZM","bez-TZ","brx-IN","cgg-UG","chr-US","dav-KE","dje-NE","dsb-DE","dua-CM","dyo-SN","ebu-KE","ewo-CM","fil-PH","fur-IT","gsw-CH","gsw-FR","gsw-LI","guz-KE","haw-US","hsb-DE","jgo-CM","jmc-TZ","kab-DZ","kam-KE","kde-TZ","kea-CV","khq-ML","kkj-CM","kln-KE","kok-IN","ksb-TZ","ksf-CM","ksh-DE","lag-TZ","lkt-US","luo-KE","luy-KE","mas-KE","mas-TZ","mer-KE","mfe-MU","mgh-MZ","mgo-CM","mua-CM","naq-NA","nmg-CM","nnh-CM","nus-SD","nyn-UG","rof-TZ","rwk-TZ","sah-RU","saq-KE","sbp-TZ","seh-MZ","ses-ML","shi-Latn","shi-Latn-MA","shi-Tfng","shi-Tfng-MA","smn-FI","teo-KE","teo-UG","twq-NE","tzm-Latn","tzm-Latn-MA","vai-Latn","vai-Latn-LR","vai-Vaii","vai-Vaii-LR","vun-TZ","wae-CH","xog-UG","yav-CM","zgh-MA","af-NA","af-ZA","ak-GH","am-ET","ar-001","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","as-IN","az-Cyrl","az-Cyrl-AZ","az-Latn","az-Latn-AZ","be-BY","bg-BG","bm-Latn","bm-Latn-ML","bn-BD","bn-IN","bo-CN","bo-IN","br-FR","bs-Cyrl","bs-Cyrl-BA","bs-Latn","bs-Latn-BA","ca-AD","ca-ES","ca-ES-VALENCIA","ca-FR","ca-IT","cs-CZ","cy-GB","da-DK","da-GL","de-AT","de-BE","de-CH","de-DE","de-LI","de-LU","dz-BT","ee-GH","ee-TG","el-CY","el-GR","en-001","en-150","en-AG","en-AI","en-AS","en-AU","en-BB","en-BE","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CX","en-DG","en-DM","en-ER","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SG","en-SH","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-001","es-419","es-AR","es-BO","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","et-EE","eu-ES","fa-AF","fa-IR","ff-CM","ff-GN","ff-MR","ff-SN","fi-FI","fo-FO","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG","fr-TN","fr-VU","fr-WF","fr-YT","fy-NL","ga-IE","gd-GB","gl-ES","gu-IN","gv-IM","ha-Latn","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","he-IL","hi-IN","hr-BA","hr-HR","hu-HU","hy-AM","id-ID","ig-NG","ii-CN","is-IS","it-CH","it-IT","it-SM","ja-JP","ka-GE","ki-KE","kk-Cyrl","kk-Cyrl-KZ","kl-GL","km-KH","kn-IN","ko-KP","ko-KR","ks-Arab","ks-Arab-IN","kw-GB","ky-Cyrl","ky-Cyrl-KG","lb-LU","lg-UG","ln-AO","ln-CD","ln-CF","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mk-MK","ml-IN","mn-Cyrl","mn-Cyrl-MN","mr-IN","ms-Latn","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","mt-MT","my-MM","nb-NO","nb-SJ","nd-ZW","ne-IN","ne-NP","nl-AW","nl-BE","nl-BQ","nl-CW","nl-NL","nl-SR","nl-SX","nn-NO","om-ET","om-KE","or-IN","os-GE","os-RU","pa-Arab","pa-Arab-PK","pa-Guru","pa-Guru-IN","pl-PL","ps-AF","pt-AO","pt-BR","pt-CV","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-EC","qu-PE","rm-CH","rn-BI","ro-MD","ro-RO","ru-BY","ru-KG","ru-KZ","ru-MD","ru-RU","ru-UA","rw-RW","se-FI","se-NO","se-SE","sg-CF","si-LK","sk-SK","sl-SI","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-MK","sq-XK","sr-Cyrl","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Cyrl-XK","sr-Latn","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","sr-Latn-XK","sv-AX","sv-FI","sv-SE","sw-CD","sw-KE","sw-TZ","sw-UG","ta-IN","ta-LK","ta-MY","ta-SG","te-IN","th-TH","ti-ER","ti-ET","to-TO","tr-CY","tr-TR","ug-Arab","ug-Arab-CN","uk-UA","ur-IN","ur-PK","uz-Arab","uz-Arab-AF","uz-Cyrl","uz-Cyrl-UZ","uz-Latn","uz-Latn-UZ","vi-VN","yi-001","yo-BJ","yo-NG","zh-Hans","zh-Hans-CN","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hant","zh-Hant-HK","zh-Hant-MO","zh-Hant-TW","zu-ZA"],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}],mx:[{name:"Aguascalientes",abbreviation:"AGU"},{name:"Baja California",abbreviation:"BCN"},{name:"Baja California Sur",abbreviation:"BCS"},{name:"Campeche",abbreviation:"CAM"},{name:"Chiapas",abbreviation:"CHP"},{name:"Chihuahua",abbreviation:"CHH"},{name:"Ciudad de México",abbreviation:"DIF"},{name:"Coahuila",abbreviation:"COA"},{name:"Colima",abbreviation:"COL"},{name:"Durango",abbreviation:"DUR"},{name:"Guanajuato",abbreviation:"GUA"},{name:"Guerrero",abbreviation:"GRO"},{name:"Hidalgo",abbreviation:"HID"},{name:"Jalisco",abbreviation:"JAL"},{name:"México",abbreviation:"MEX"},{name:"Michoacán",abbreviation:"MIC"},{name:"Morelos",abbreviation:"MOR"},{name:"Nayarit",abbreviation:"NAY"},{name:"Nuevo León",abbreviation:"NLE"},{name:"Oaxaca",abbreviation:"OAX"},{name:"Puebla",abbreviation:"PUE"},{name:"Querétaro",abbreviation:"QUE"},{name:"Quintana Roo",abbreviation:"ROO"},{name:"San Luis Potosí",abbreviation:"SLP"},{name:"Sinaloa",abbreviation:"SIN"},{name:"Sonora",abbreviation:"SON"},{name:"Tabasco",abbreviation:"TAB"},{name:"Tamaulipas",abbreviation:"TAM"},{name:"Tlaxcala",abbreviation:"TLA"},{name:"Veracruz",abbreviation:"VER"},{name:"Yucatán",abbreviation:"YUC"},{name:"Zacatecas",abbreviation:"ZAC"}]},street_suffixes:{us:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],it:[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"Rondò",abbreviation:"Rondò"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}],uk:[{name:"Avenue",abbreviation:"Ave"},{name:"Close",abbreviation:"Cl"},{name:"Court",abbreviation:"Ct"},{name:"Crescent",abbreviation:"Cr"},{name:"Drive",abbreviation:"Dr"},{name:"Garden",abbreviation:"Gdn"},{name:"Gardens",abbreviation:"Gdns"},{name:"Green",abbreviation:"Gn"},{name:"Grove",abbreviation:"Gr"},{name:"Lane",abbreviation:"Ln"},{name:"Mount",abbreviation:"Mt"},{name:"Place",abbreviation:"Pl"},{name:"Park",abbreviation:"Pk"},{name:"Ridge",abbreviation:"Rdg"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Valley",abbreviation:"Val"}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"São Tomé and Príncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"Communauté Financière Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"Communauté Financière Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs Français du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue","DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse","Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod","PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond","PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],company:["3Com Corp","3M Company","A.G. Edwards Inc.","Abbott Laboratories","Abercrombie & Fitch Co.","ABM Industries Incorporated","Ace Hardware Corporation","ACT Manufacturing Inc.","Acterna Corp.","Adams Resources & Energy, Inc.","ADC Telecommunications, Inc.","Adelphia Communications Corporation","Administaff, Inc.","Adobe Systems Incorporated","Adolph Coors Company","Advance Auto Parts, Inc.","Advanced Micro Devices, Inc.","AdvancePCS, Inc.","Advantica Restaurant Group, Inc.","The AES Corporation","Aetna Inc.","Affiliated Computer Services, Inc.","AFLAC Incorporated","AGCO Corporation","Agilent Technologies, Inc.","Agway Inc.","Apartment Investment and Management Company","Air Products and Chemicals, Inc.","Airborne, Inc.","Airgas, Inc.","AK Steel Holding Corporation","Alaska Air Group, Inc.","Alberto-Culver Company","Albertson's, Inc.","Alcoa Inc.","Alleghany Corporation","Allegheny Energy, Inc.","Allegheny Technologies Incorporated","Allergan, Inc.","ALLETE, Inc.","Alliant Energy Corporation","Allied Waste Industries, Inc.","Allmerica Financial Corporation","The Allstate Corporation","ALLTEL Corporation","The Alpine Group, Inc.","Amazon.com, Inc.","AMC Entertainment Inc.","American Power Conversion Corporation","Amerada Hess Corporation","AMERCO","Ameren Corporation","America West Holdings Corporation","American Axle & Manufacturing Holdings, Inc.","American Eagle Outfitters, Inc.","American Electric Power Company, Inc.","American Express Company","American Financial Group, Inc.","American Greetings Corporation","American International Group, Inc.","American Standard Companies Inc.","American Water Works Company, Inc.","AmerisourceBergen Corporation","Ames Department Stores, Inc.","Amgen Inc.","Amkor Technology, Inc.","AMR Corporation","AmSouth Bancorp.","Amtran, Inc.","Anadarko Petroleum Corporation","Analog Devices, Inc.","Anheuser-Busch Companies, Inc.","Anixter International Inc.","AnnTaylor Inc.","Anthem, Inc.","AOL Time Warner Inc.","Aon Corporation","Apache Corporation","Apple Computer, Inc.","Applera Corporation","Applied Industrial Technologies, Inc.","Applied Materials, Inc.","Aquila, Inc.","ARAMARK Corporation","Arch Coal, Inc.","Archer Daniels Midland Company","Arkansas Best Corporation","Armstrong Holdings, Inc.","Arrow Electronics, Inc.","ArvinMeritor, Inc.","Ashland Inc.","Astoria Financial Corporation","AT&T Corp.","Atmel Corporation","Atmos Energy Corporation","Audiovox Corporation","Autoliv, Inc.","Automatic Data Processing, Inc.","AutoNation, Inc.","AutoZone, Inc.","Avaya Inc.","Avery Dennison Corporation","Avista Corporation","Avnet, Inc.","Avon Products, Inc.","Baker Hughes Incorporated","Ball Corporation","Bank of America Corporation","The Bank of New York Company, Inc.","Bank One Corporation","Banknorth Group, Inc.","Banta Corporation","Barnes & Noble, Inc.","Bausch & Lomb Incorporated","Baxter International Inc.","BB&T Corporation","The Bear Stearns Companies Inc.","Beazer Homes USA, Inc.","Beckman Coulter, Inc.","Becton, Dickinson and Company","Bed Bath & Beyond Inc.","Belk, Inc.","Bell Microproducts Inc.","BellSouth Corporation","Belo Corp.","Bemis Company, Inc.","Benchmark Electronics, Inc.","Berkshire Hathaway Inc.","Best Buy Co., Inc.","Bethlehem Steel Corporation","Beverly Enterprises, Inc.","Big Lots, Inc.","BJ Services Company","BJ's Wholesale Club, Inc.","The Black & Decker Corporation","Black Hills Corporation","BMC Software, Inc.","The Boeing Company","Boise Cascade Corporation","Borders Group, Inc.","BorgWarner Inc.","Boston Scientific Corporation","Bowater Incorporated","Briggs & Stratton Corporation","Brightpoint, Inc.","Brinker International, Inc.","Bristol-Myers Squibb Company","Broadwing, Inc.","Brown Shoe Company, Inc.","Brown-Forman Corporation","Brunswick Corporation","Budget Group, Inc.","Burlington Coat Factory Warehouse Corporation","Burlington Industries, Inc.","Burlington Northern Santa Fe Corporation","Burlington Resources Inc.","C. H. Robinson Worldwide Inc.","Cablevision Systems Corp","Cabot Corp","Cadence Design Systems, Inc.","Calpine Corp.","Campbell Soup Co.","Capital One Financial Corp.","Cardinal Health Inc.","Caremark Rx Inc.","Carlisle Cos. Inc.","Carpenter Technology Corp.","Casey's General Stores Inc.","Caterpillar Inc.","CBRL Group Inc.","CDI Corp.","CDW Computer Centers Inc.","CellStar Corp.","Cendant Corp","Cenex Harvest States Cooperatives","Centex Corp.","CenturyTel Inc.","Ceridian Corp.","CH2M Hill Cos. Ltd.","Champion Enterprises Inc.","Charles Schwab Corp.","Charming Shoppes Inc.","Charter Communications Inc.","Charter One Financial Inc.","ChevronTexaco Corp.","Chiquita Brands International Inc.","Chubb Corp","Ciena Corp.","Cigna Corp","Cincinnati Financial Corp.","Cinergy Corp.","Cintas Corp.","Circuit City Stores Inc.","Cisco Systems Inc.","Citigroup, Inc","Citizens Communications Co.","CKE Restaurants Inc.","Clear Channel Communications Inc.","The Clorox Co.","CMGI Inc.","CMS Energy Corp.","CNF Inc.","Coca-Cola Co.","Coca-Cola Enterprises Inc.","Colgate-Palmolive Co.","Collins & Aikman Corp.","Comcast Corp.","Comdisco Inc.","Comerica Inc.","Comfort Systems USA Inc.","Commercial Metals Co.","Community Health Systems Inc.","Compass Bancshares Inc","Computer Associates International Inc.","Computer Sciences Corp.","Compuware Corp.","Comverse Technology Inc.","ConAgra Foods Inc.","Concord EFS Inc.","Conectiv, Inc","Conoco Inc","Conseco Inc.","Consolidated Freightways Corp.","Consolidated Edison Inc.","Constellation Brands Inc.","Constellation Emergy Group Inc.","Continental Airlines Inc.","Convergys Corp.","Cooper Cameron Corp.","Cooper Industries Ltd.","Cooper Tire & Rubber Co.","Corn Products International Inc.","Corning Inc.","Costco Wholesale Corp.","Countrywide Credit Industries Inc.","Coventry Health Care Inc.","Cox Communications Inc.","Crane Co.","Crompton Corp.","Crown Cork & Seal Co. Inc.","CSK Auto Corp.","CSX Corp.","Cummins Inc.","CVS Corp.","Cytec Industries Inc.","D&K Healthcare Resources, Inc.","D.R. Horton Inc.","Dana Corporation","Danaher Corporation","Darden Restaurants Inc.","DaVita Inc.","Dean Foods Company","Deere & Company","Del Monte Foods Co","Dell Computer Corporation","Delphi Corp.","Delta Air Lines Inc.","Deluxe Corporation","Devon Energy Corporation","Di Giorgio Corporation","Dial Corporation","Diebold Incorporated","Dillard's Inc.","DIMON Incorporated","Dole Food Company, Inc.","Dollar General Corporation","Dollar Tree Stores, Inc.","Dominion Resources, Inc.","Domino's Pizza LLC","Dover Corporation, Inc.","Dow Chemical Company","Dow Jones & Company, Inc.","DPL Inc.","DQE Inc.","Dreyer's Grand Ice Cream, Inc.","DST Systems, Inc.","DTE Energy Co.","E.I. Du Pont de Nemours and Company","Duke Energy Corp","Dun & Bradstreet Inc.","DURA Automotive Systems Inc.","DynCorp","Dynegy Inc.","E*Trade Group, Inc.","E.W. Scripps Company","Earthlink, Inc.","Eastman Chemical Company","Eastman Kodak Company","Eaton Corporation","Echostar Communications Corporation","Ecolab Inc.","Edison International","EGL Inc.","El Paso Corporation","Electronic Arts Inc.","Electronic Data Systems Corp.","Eli Lilly and Company","EMC Corporation","Emcor Group Inc.","Emerson Electric Co.","Encompass Services Corporation","Energizer Holdings Inc.","Energy East Corporation","Engelhard Corporation","Enron Corp.","Entergy Corporation","Enterprise Products Partners L.P.","EOG Resources, Inc.","Equifax Inc.","Equitable Resources Inc.","Equity Office Properties Trust","Equity Residential Properties Trust","Estee Lauder Companies Inc.","Exelon Corporation","Exide Technologies","Expeditors International of Washington Inc.","Express Scripts Inc.","ExxonMobil Corporation","Fairchild Semiconductor International Inc.","Family Dollar Stores Inc.","Farmland Industries Inc.","Federal Mogul Corp.","Federated Department Stores Inc.","Federal Express Corp.","Felcor Lodging Trust Inc.","Ferro Corp.","Fidelity National Financial Inc.","Fifth Third Bancorp","First American Financial Corp.","First Data Corp.","First National of Nebraska Inc.","First Tennessee National Corp.","FirstEnergy Corp.","Fiserv Inc.","Fisher Scientific International Inc.","FleetBoston Financial Co.","Fleetwood Enterprises Inc.","Fleming Companies Inc.","Flowers Foods Inc.","Flowserv Corp","Fluor Corp","FMC Corp","Foamex International Inc","Foot Locker Inc","Footstar Inc.","Ford Motor Co","Forest Laboratories Inc.","Fortune Brands Inc.","Foster Wheeler Ltd.","FPL Group Inc.","Franklin Resources Inc.","Freeport McMoran Copper & Gold Inc.","Frontier Oil Corp","Furniture Brands International Inc.","Gannett Co., Inc.","Gap Inc.","Gateway Inc.","GATX Corporation","Gemstar-TV Guide International Inc.","GenCorp Inc.","General Cable Corporation","General Dynamics Corporation","General Electric Company","General Mills Inc","General Motors Corporation","Genesis Health Ventures Inc.","Gentek Inc.","Gentiva Health Services Inc.","Genuine Parts Company","Genuity Inc.","Genzyme Corporation","Georgia Gulf Corporation","Georgia-Pacific Corporation","Gillette Company","Gold Kist Inc.","Golden State Bancorp Inc.","Golden West Financial Corporation","Goldman Sachs Group Inc.","Goodrich Corporation","The Goodyear Tire & Rubber Company","Granite Construction Incorporated","Graybar Electric Company Inc.","Great Lakes Chemical Corporation","Great Plains Energy Inc.","GreenPoint Financial Corp.","Greif Bros. Corporation","Grey Global Group Inc.","Group 1 Automotive Inc.","Guidant Corporation","H&R Block Inc.","H.B. Fuller Company","H.J. Heinz Company","Halliburton Co.","Harley-Davidson Inc.","Harman International Industries Inc.","Harrah's Entertainment Inc.","Harris Corp.","Harsco Corp.","Hartford Financial Services Group Inc.","Hasbro Inc.","Hawaiian Electric Industries Inc.","HCA Inc.","Health Management Associates Inc.","Health Net Inc.","Healthsouth Corp","Henry Schein Inc.","Hercules Inc.","Herman Miller Inc.","Hershey Foods Corp.","Hewlett-Packard Company","Hibernia Corp.","Hillenbrand Industries Inc.","Hilton Hotels Corp.","Hollywood Entertainment Corp.","Home Depot Inc.","Hon Industries Inc.","Honeywell International Inc.","Hormel Foods Corp.","Host Marriott Corp.","Household International Corp.","Hovnanian Enterprises Inc.","Hub Group Inc.","Hubbell Inc.","Hughes Supply Inc.","Humana Inc.","Huntington Bancshares Inc.","Idacorp Inc.","IDT Corporation","IKON Office Solutions Inc.","Illinois Tool Works Inc.","IMC Global Inc.","Imperial Sugar Company","IMS Health Inc.","Ingles Market Inc","Ingram Micro Inc.","Insight Enterprises Inc.","Integrated Electrical Services Inc.","Intel Corporation","International Paper Co.","Interpublic Group of Companies Inc.","Interstate Bakeries Corporation","International Business Machines Corp.","International Flavors & Fragrances Inc.","International Multifoods Corporation","Intuit Inc.","IT Group Inc.","ITT Industries Inc.","Ivax Corp.","J.B. Hunt Transport Services Inc.","J.C. Penny Co.","J.P. Morgan Chase & Co.","Jabil Circuit Inc.","Jack In The Box Inc.","Jacobs Engineering Group Inc.","JDS Uniphase Corp.","Jefferson-Pilot Co.","John Hancock Financial Services Inc.","Johnson & Johnson","Johnson Controls Inc.","Jones Apparel Group Inc.","KB Home","Kellogg Company","Kellwood Company","Kelly Services Inc.","Kemet Corp.","Kennametal Inc.","Kerr-McGee Corporation","KeyCorp","KeySpan Corp.","Kimball International Inc.","Kimberly-Clark Corporation","Kindred Healthcare Inc.","KLA-Tencor Corporation","K-Mart Corp.","Knight-Ridder Inc.","Kohl's Corp.","KPMG Consulting Inc.","Kroger Co.","L-3 Communications Holdings Inc.","Laboratory Corporation of America Holdings","Lam Research Corporation","LandAmerica Financial Group Inc.","Lands' End Inc.","Landstar System Inc.","La-Z-Boy Inc.","Lear Corporation","Legg Mason Inc.","Leggett & Platt Inc.","Lehman Brothers Holdings Inc.","Lennar Corporation","Lennox International Inc.","Level 3 Communications Inc.","Levi Strauss & Co.","Lexmark International Inc.","Limited Inc.","Lincoln National Corporation","Linens 'n Things Inc.","Lithia Motors Inc.","Liz Claiborne Inc.","Lockheed Martin Corporation","Loews Corporation","Longs Drug Stores Corporation","Louisiana-Pacific Corporation","Lowe's Companies Inc.","LSI Logic Corporation","The LTV Corporation","The Lubrizol Corporation","Lucent Technologies Inc.","Lyondell Chemical Company","M & T Bank Corporation","Magellan Health Services Inc.","Mail-Well Inc.","Mandalay Resort Group","Manor Care Inc.","Manpower Inc.","Marathon Oil Corporation","Mariner Health Care Inc.","Markel Corporation","Marriott International Inc.","Marsh & McLennan Companies Inc.","Marsh Supermarkets Inc.","Marshall & Ilsley Corporation","Martin Marietta Materials Inc.","Masco Corporation","Massey Energy Company","MasTec Inc.","Mattel Inc.","Maxim Integrated Products Inc.","Maxtor Corporation","Maxxam Inc.","The May Department Stores Company","Maytag Corporation","MBNA Corporation","McCormick & Company Incorporated","McDonald's Corporation","The McGraw-Hill Companies Inc.","McKesson Corporation","McLeodUSA Incorporated","M.D.C. Holdings Inc.","MDU Resources Group Inc.","MeadWestvaco Corporation","Medtronic Inc.","Mellon Financial Corporation","The Men's Wearhouse Inc.","Merck & Co., Inc.","Mercury General Corporation","Merrill Lynch & Co. Inc.","Metaldyne Corporation","Metals USA Inc.","MetLife Inc.","Metris Companies Inc","MGIC Investment Corporation","MGM Mirage","Michaels Stores Inc.","Micron Technology Inc.","Microsoft Corporation","Milacron Inc.","Millennium Chemicals Inc.","Mirant Corporation","Mohawk Industries Inc.","Molex Incorporated","The MONY Group Inc.","Morgan Stanley Dean Witter & Co.","Motorola Inc.","MPS Group Inc.","Murphy Oil Corporation","Nabors Industries Inc","Nacco Industries Inc","Nash Finch Company","National City Corp.","National Commerce Financial Corporation","National Fuel Gas Company","National Oilwell Inc","National Rural Utilities Cooperative Finance Corporation","National Semiconductor Corporation","National Service Industries Inc","Navistar International Corporation","NCR Corporation","The Neiman Marcus Group Inc.","New Jersey Resources Corporation","New York Times Company","Newell Rubbermaid Inc","Newmont Mining Corporation","Nextel Communications Inc","Nicor Inc","Nike Inc","NiSource Inc","Noble Energy Inc","Nordstrom Inc","Norfolk Southern Corporation","Nortek Inc","North Fork Bancorporation Inc","Northeast Utilities System","Northern Trust Corporation","Northrop Grumman Corporation","NorthWestern Corporation","Novellus Systems Inc","NSTAR","NTL Incorporated","Nucor Corp","Nvidia Corp","NVR Inc","Northwest Airlines Corp","Occidental Petroleum Corp","Ocean Energy Inc","Office Depot Inc.","OfficeMax Inc","OGE Energy Corp","Oglethorpe Power Corp.","Ohio Casualty Corp.","Old Republic International Corp.","Olin Corp.","OM Group Inc","Omnicare Inc","Omnicom Group","On Semiconductor Corp","ONEOK Inc","Oracle Corp","Oshkosh Truck Corp","Outback Steakhouse Inc.","Owens & Minor Inc.","Owens Corning","Owens-Illinois Inc","Oxford Health Plans Inc","Paccar Inc","PacifiCare Health Systems Inc","Packaging Corp. of America","Pactiv Corp","Pall Corp","Pantry Inc","Park Place Entertainment Corp","Parker Hannifin Corp.","Pathmark Stores Inc.","Paychex Inc","Payless Shoesource Inc","Penn Traffic Co.","Pennzoil-Quaker State Company","Pentair Inc","Peoples Energy Corp.","PeopleSoft Inc","Pep Boys Manny, Moe & Jack","Potomac Electric Power Co.","Pepsi Bottling Group Inc.","PepsiAmericas Inc.","PepsiCo Inc.","Performance Food Group Co.","Perini Corp","PerkinElmer Inc","Perot Systems Corp","Petco Animal Supplies Inc.","Peter Kiewit Sons', Inc.","PETsMART Inc","Pfizer Inc","Pacific Gas & Electric Corp.","Pharmacia Corp","Phar Mor Inc.","Phelps Dodge Corp.","Philip Morris Companies Inc.","Phillips Petroleum Co","Phillips Van Heusen Corp.","Phoenix Companies Inc","Pier 1 Imports Inc.","Pilgrim's Pride Corporation","Pinnacle West Capital Corp","Pioneer-Standard Electronics Inc.","Pitney Bowes Inc.","Pittston Brinks Group","Plains All American Pipeline LP","PNC Financial Services Group Inc.","PNM Resources Inc","Polaris Industries Inc.","Polo Ralph Lauren Corp","PolyOne Corp","Popular Inc","Potlatch Corp","PPG Industries Inc","PPL Corp","Praxair Inc","Precision Castparts Corp","Premcor Inc.","Pride International Inc","Primedia Inc","Principal Financial Group Inc.","Procter & Gamble Co.","Pro-Fac Cooperative Inc.","Progress Energy Inc","Progressive Corporation","Protective Life Corp","Provident Financial Group","Providian Financial Corp.","Prudential Financial Inc.","PSS World Medical Inc","Public Service Enterprise Group Inc.","Publix Super Markets Inc.","Puget Energy Inc.","Pulte Homes Inc","Qualcomm Inc","Quanta Services Inc.","Quantum Corp","Quest Diagnostics Inc.","Questar Corp","Quintiles Transnational","Qwest Communications Intl Inc","R.J. Reynolds Tobacco Company","R.R. Donnelley & Sons Company","Radio Shack Corporation","Raymond James Financial Inc.","Raytheon Company","Reader's Digest Association Inc.","Reebok International Ltd.","Regions Financial Corp.","Regis Corporation","Reliance Steel & Aluminum Co.","Reliant Energy Inc.","Rent A Center Inc","Republic Services Inc","Revlon Inc","RGS Energy Group Inc","Rite Aid Corp","Riverwood Holding Inc.","RoadwayCorp","Robert Half International Inc.","Rock-Tenn Co","Rockwell Automation Inc","Rockwell Collins Inc","Rohm & Haas Co.","Ross Stores Inc","RPM Inc.","Ruddick Corp","Ryder System Inc","Ryerson Tull Inc","Ryland Group Inc.","Sabre Holdings Corp","Safeco Corp","Safeguard Scientifics Inc.","Safeway Inc","Saks Inc","Sanmina-SCI Inc","Sara Lee Corp","SBC Communications Inc","Scana Corp.","Schering-Plough Corp","Scholastic Corp","SCI Systems Onc.","Science Applications Intl. Inc.","Scientific-Atlanta Inc","Scotts Company","Seaboard Corp","Sealed Air Corp","Sears Roebuck & Co","Sempra Energy","Sequa Corp","Service Corp. International","ServiceMaster Co","Shaw Group Inc","Sherwin-Williams Company","Shopko Stores Inc","Siebel Systems Inc","Sierra Health Services Inc","Sierra Pacific Resources","Silgan Holdings Inc.","Silicon Graphics Inc","Simon Property Group Inc","SLM Corporation","Smith International Inc","Smithfield Foods Inc","Smurfit-Stone Container Corp","Snap-On Inc","Solectron Corp","Solutia Inc","Sonic Automotive Inc.","Sonoco Products Co.","Southern Company","Southern Union Company","SouthTrust Corp.","Southwest Airlines Co","Southwest Gas Corp","Sovereign Bancorp Inc.","Spartan Stores Inc","Spherion Corp","Sports Authority Inc","Sprint Corp.","SPX Corp","St. Jude Medical Inc","St. Paul Cos.","Staff Leasing Inc.","StanCorp Financial Group Inc","Standard Pacific Corp.","Stanley Works","Staples Inc","Starbucks Corp","Starwood Hotels & Resorts Worldwide Inc","State Street Corp.","Stater Bros. Holdings Inc.","Steelcase Inc","Stein Mart Inc","Stewart & Stevenson Services Inc","Stewart Information Services Corp","Stilwell Financial Inc","Storage Technology Corporation","Stryker Corp","Sun Healthcare Group Inc.","Sun Microsystems Inc.","SunGard Data Systems Inc.","Sunoco Inc.","SunTrust Banks Inc","Supervalu Inc","Swift Transportation, Co., Inc","Symbol Technologies Inc","Synovus Financial Corp.","Sysco Corp","Systemax Inc.","Target Corp.","Tech Data Corporation","TECO Energy Inc","Tecumseh Products Company","Tektronix Inc","Teleflex Incorporated","Telephone & Data Systems Inc","Tellabs Inc.","Temple-Inland Inc","Tenet Healthcare Corporation","Tenneco Automotive Inc.","Teradyne Inc","Terex Corp","Tesoro Petroleum Corp.","Texas Industries Inc.","Texas Instruments Incorporated","Textron Inc","Thermo Electron Corporation","Thomas & Betts Corporation","Tiffany & Co","Timken Company","TJX Companies Inc","TMP Worldwide Inc","Toll Brothers Inc","Torchmark Corporation","Toro Company","Tower Automotive Inc.","Toys 'R' Us Inc","Trans World Entertainment Corp.","TransMontaigne Inc","Transocean Inc","TravelCenters of America Inc.","Triad Hospitals Inc","Tribune Company","Trigon Healthcare Inc.","Trinity Industries Inc","Trump Hotels & Casino Resorts Inc.","TruServ Corporation","TRW Inc","TXU Corp","Tyson Foods Inc","U.S. Bancorp","U.S. Industries Inc.","UAL Corporation","UGI Corporation","Unified Western Grocers Inc","Union Pacific Corporation","Union Planters Corp","Unisource Energy Corp","Unisys Corporation","United Auto Group Inc","United Defense Industries Inc.","United Parcel Service Inc","United Rentals Inc","United Stationers Inc","United Technologies Corporation","UnitedHealth Group Incorporated","Unitrin Inc","Universal Corporation","Universal Forest Products Inc","Universal Health Services Inc","Unocal Corporation","Unova Inc","UnumProvident Corporation","URS Corporation","US Airways Group Inc","US Oncology Inc","USA Interactive","USFreighways Corporation","USG Corporation","UST Inc","Valero Energy Corporation","Valspar Corporation","Value City Department Stores Inc","Varco International Inc","Vectren Corporation","Veritas Software Corporation","Verizon Communications Inc","VF Corporation","Viacom Inc","Viad Corp","Viasystems Group Inc","Vishay Intertechnology Inc","Visteon Corporation","Volt Information Sciences Inc","Vulcan Materials Company","W.R. Berkley Corporation","W.R. Grace & Co","W.W. Grainger Inc","Wachovia Corporation","Wakenhut Corporation","Walgreen Co","Wallace Computer Services Inc","Wal-Mart Stores Inc","Walt Disney Co","Walter Industries Inc","Washington Mutual Inc","Washington Post Co.","Waste Management Inc","Watsco Inc","Weatherford International Inc","Weis Markets Inc.","Wellpoint Health Networks Inc","Wells Fargo & Company","Wendy's International Inc","Werner Enterprises Inc","WESCO International Inc","Western Digital Inc","Western Gas Resources Inc","WestPoint Stevens Inc","Weyerhauser Company","WGL Holdings Inc","Whirlpool Corporation","Whole Foods Market Inc","Willamette Industries Inc.","Williams Companies Inc","Williams Sonoma Inc","Winn Dixie Stores Inc","Wisconsin Energy Corporation","Wm Wrigley Jr Company","World Fuel Services Corporation","WorldCom Inc","Worthington Industries Inc","WPS Resources Corporation","Wyeth","Wyndham International Inc","Xcel Energy Inc","Xerox Corp","Xilinx Inc","XO Communications Inc","Yellow Corporation","York International Corp","Yum Brands Inc.","Zale Corporation","Zions Bancorporation"],fileExtension:{raster:["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],vector:["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],document:["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]},timezones:[{name:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{name:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{name:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{name:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{name:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{name:"Pacific Daylight Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-07:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse"]},{name:"Pacific Standard Time",abbr:"PST",offset:-8,isdst:!1,text:"(UTC-08:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse","PST8PDT"]},{name:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson_Creek","America/Hermosillo","America/Phoenix","Etc/GMT+7"]},{name:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{name:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{name:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{name:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{name:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{name:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{name:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{name:"Eastern Standard Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto","EST5EDT"]},{name:"US Eastern Standard Time",abbr:"UEDT",offset:-4,isdst:!0,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{name:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{name:"Paraguay Standard Time",abbr:"PYT",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{name:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{name:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{name:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{name:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{name:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{name:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{name:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{name:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{name:"Greenland Standard Time",abbr:"GDT",offset:-3,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{name:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{name:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{name:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{name:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old",utc:[]},{name:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{name:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{name:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{name:"UTC",abbr:"UTC",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{name:"GMT Standard Time",abbr:"GMT",offset:0,isdst:!1,text:"(UTC) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{name:"British Summer Time",abbr:"BST",offset:1,isdst:!0,text:"(UTC+01:00) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{name:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Lisbon",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Lisbon"]},{name:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{name:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{name:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{name:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{name:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{name:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{name:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{name:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{name:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{name:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{name:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{name:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau","Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Nicosia","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{name:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!1,text:"(UTC+03:00) Istanbul",utc:["Europe/Istanbul"]},{name:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{name:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{name:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{name:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{name:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+02:00) Kaliningrad",utc:["Europe/Kaliningrad"]},{name:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{name:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{name:"Moscow Standard Time",abbr:"MSK",offset:3,isdst:!1,text:"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk",utc:["Europe/Kirov","Europe/Moscow","Europe/Simferopol","Europe/Volgograd","Europe/Minsk"]},{name:"Samara Time",abbr:"SAMT",offset:4,isdst:!1,text:"(UTC+04:00) Samara, Ulyanovsk, Saratov",utc:["Europe/Astrakhan","Europe/Samara","Europe/Ulyanovsk"]},{name:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{name:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{name:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{name:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{name:"Georgian Standard Time",abbr:"GET",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{name:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{name:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{name:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{name:"Yekaterinburg Time",abbr:"YEKT",offset:5,isdst:!1,text:"(UTC+05:00) Yekaterinburg",utc:["Asia/Yekaterinburg"]},{name:"Pakistan Standard Time",abbr:"PKT",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{name:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Kolkata"]},{name:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{name:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Kathmandu"]},{name:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Nur-Sultan (Astana)",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{name:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{name:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{name:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{name:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{name:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{name:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{name:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{name:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{name:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{name:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{name:"North Asia East Standard Time",abbr:"NAEST",offset:8,isdst:!1,text:"(UTC+08:00) Irkutsk",utc:["Asia/Irkutsk"]},{name:"Japan Standard Time",abbr:"JST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{name:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{name:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{name:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{name:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{name:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{name:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{name:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{name:"Yakutsk Standard Time",abbr:"YST",offset:9,isdst:!1,text:"(UTC+09:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{name:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{name:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{name:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{name:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{name:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{name:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{name:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",utc:["Asia/Kamchatka"]},{name:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{name:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}],profession:["Airline Pilot","Academic Team","Accountant","Account Executive","Actor","Actuary","Acquisition Analyst","Administrative Asst.","Administrative Analyst","Administrator","Advertising Director","Aerospace Engineer","Agent","Agricultural Inspector","Agricultural Scientist","Air Traffic Controller","Animal Trainer","Anthropologist","Appraiser","Architect","Art Director","Artist","Astronomer","Athletic Coach","Auditor","Author","Baker","Banker","Bankruptcy Attorney","Benefits Manager","Biologist","Bio-feedback Specialist","Biomedical Engineer","Biotechnical Researcher","Broadcaster","Broker","Building Manager","Building Contractor","Building Inspector","Business Analyst","Business Planner","Business Manager","Buyer","Call Center Manager","Career Counselor","Cash Manager","Ceramic Engineer","Chief Executive Officer","Chief Operation Officer","Chef","Chemical Engineer","Chemist","Child Care Manager","Chief Medical Officer","Chiropractor","Cinematographer","City Housing Manager","City Manager","Civil Engineer","Claims Manager","Clinical Research Assistant","Collections Manager","Compliance Manager","Comptroller","Computer Manager","Commercial Artist","Communications Affairs Director","Communications Director","Communications Engineer","Compensation Analyst","Computer Programmer","Computer Ops. Manager","Computer Engineer","Computer Operator","Computer Graphics Specialist","Construction Engineer","Construction Manager","Consultant","Consumer Relations Manager","Contract Administrator","Copyright Attorney","Copywriter","Corporate Planner","Corrections Officer","Cosmetologist","Credit Analyst","Cruise Director","Chief Information Officer","Chief Technology Officer","Customer Service Manager","Cryptologist","Dancer","Data Security Manager","Database Manager","Day Care Instructor","Dentist","Designer","Design Engineer","Desktop Publisher","Developer","Development Officer","Diamond Merchant","Dietitian","Direct Marketer","Director","Distribution Manager","Diversity Manager","Economist","EEO Compliance Manager","Editor","Education Adminator","Electrical Engineer","Electro Optical Engineer","Electronics Engineer","Embassy Management","Employment Agent","Engineer Technician","Entrepreneur","Environmental Analyst","Environmental Attorney","Environmental Engineer","Environmental Specialist","Escrow Officer","Estimator","Executive Assistant","Executive Director","Executive Recruiter","Facilities Manager","Family Counselor","Fashion Events Manager","Fashion Merchandiser","Fast Food Manager","Film Producer","Film Production Assistant","Financial Analyst","Financial Planner","Financier","Fine Artist","Wildlife Specialist","Fitness Consultant","Flight Attendant","Flight Engineer","Floral Designer","Food & Beverage Director","Food Service Manager","Forestry Technician","Franchise Management","Franchise Sales","Fraud Investigator","Freelance Writer","Fund Raiser","General Manager","Geologist","General Counsel","Geriatric Specialist","Gerontologist","Glamour Photographer","Golf Club Manager","Gourmet Chef","Graphic Designer","Grounds Keeper","Hazardous Waste Manager","Health Care Manager","Health Therapist","Health Service Administrator","Hearing Officer","Home Economist","Horticulturist","Hospital Administrator","Hotel Manager","Human Resources Manager","Importer","Industrial Designer","Industrial Engineer","Information Director","Inside Sales","Insurance Adjuster","Interior Decorator","Internal Controls Director","International Acct.","International Courier","International Lawyer","Interpreter","Investigator","Investment Banker","Investment Manager","IT Architect","IT Project Manager","IT Systems Analyst","Jeweler","Joint Venture Manager","Journalist","Labor Negotiator","Labor Organizer","Labor Relations Manager","Lab Services Director","Lab Technician","Land Developer","Landscape Architect","Law Enforcement Officer","Lawyer","Lead Software Engineer","Lead Software Test Engineer","Leasing Manager","Legal Secretary","Library Manager","Litigation Attorney","Loan Officer","Lobbyist","Logistics Manager","Maintenance Manager","Management Consultant","Managed Care Director","Managing Partner","Manufacturing Director","Manpower Planner","Marine Biologist","Market Res. Analyst","Marketing Director","Materials Manager","Mathematician","Membership Chairman","Mechanic","Mechanical Engineer","Media Buyer","Medical Investor","Medical Secretary","Medical Technician","Mental Health Counselor","Merchandiser","Metallurgical Engineering","Meteorologist","Microbiologist","MIS Manager","Motion Picture Director","Multimedia Director","Musician","Network Administrator","Network Specialist","Network Operator","New Product Manager","Novelist","Nuclear Engineer","Nuclear Specialist","Nutritionist","Nursing Administrator","Occupational Therapist","Oceanographer","Office Manager","Operations Manager","Operations Research Director","Optical Technician","Optometrist","Organizational Development Manager","Outplacement Specialist","Paralegal","Park Ranger","Patent Attorney","Payroll Specialist","Personnel Specialist","Petroleum Engineer","Pharmacist","Photographer","Physical Therapist","Physician","Physician Assistant","Physicist","Planning Director","Podiatrist","Political Analyst","Political Scientist","Politician","Portfolio Manager","Preschool Management","Preschool Teacher","Principal","Private Banker","Private Investigator","Probation Officer","Process Engineer","Producer","Product Manager","Product Engineer","Production Engineer","Production Planner","Professional Athlete","Professional Coach","Professor","Project Engineer","Project Manager","Program Manager","Property Manager","Public Administrator","Public Safety Director","PR Specialist","Publisher","Purchasing Agent","Publishing Director","Quality Assurance Specialist","Quality Control Engineer","Quality Control Inspector","Radiology Manager","Railroad Engineer","Real Estate Broker","Recreational Director","Recruiter","Redevelopment Specialist","Regulatory Affairs Manager","Registered Nurse","Rehabilitation Counselor","Relocation Manager","Reporter","Research Specialist","Restaurant Manager","Retail Store Manager","Risk Analyst","Safety Engineer","Sales Engineer","Sales Trainer","Sales Promotion Manager","Sales Representative","Sales Manager","Service Manager","Sanitation Engineer","Scientific Programmer","Scientific Writer","Securities Analyst","Security Consultant","Security Director","Seminar Presenter","Ship's Officer","Singer","Social Director","Social Program Planner","Social Research","Social Scientist","Social Worker","Sociologist","Software Developer","Software Engineer","Software Test Engineer","Soil Scientist","Special Events Manager","Special Education Teacher","Special Projects Director","Speech Pathologist","Speech Writer","Sports Event Manager","Statistician","Store Manager","Strategic Alliance Director","Strategic Planning Director","Stress Reduction Specialist","Stockbroker","Surveyor","Structural Engineer","Superintendent","Supply Chain Director","System Engineer","Systems Analyst","Systems Programmer","System Administrator","Tax Specialist","Teacher","Technical Support Specialist","Technical Illustrator","Technical Writer","Technology Director","Telecom Analyst","Telemarketer","Theatrical Director","Title Examiner","Tour Escort","Tour Guide Director","Traffic Manager","Trainer Translator","Transportation Manager","Travel Agent","Treasurer","TV Programmer","Underwriter","Union Representative","University Administrator","University Dean","Urban Planner","Veterinarian","Vendor Relations Director","Viticulturist","Warehouse Manager"],animals:{ocean:["Acantharea","Anemone","Angelfish King","Ahi Tuna","Albacore","American Oyster","Anchovy","Armored Snail","Arctic Char","Atlantic Bluefin Tuna","Atlantic Cod","Atlantic Goliath Grouper","Atlantic Trumpetfish","Atlantic Wolffish","Baleen Whale","Banded Butterflyfish","Banded Coral Shrimp","Banded Sea Krait","Barnacle","Barndoor Skate","Barracuda","Basking Shark","Bass","Beluga Whale","Bluebanded Goby","Bluehead Wrasse","Bluefish","Bluestreak Cleaner-Wrasse","Blue Marlin","Blue Shark","Blue Spiny Lobster","Blue Tang","Blue Whale","Broadclub Cuttlefish","Bull Shark","Chambered Nautilus","Chilean Basket Star","Chilean Jack Mackerel","Chinook Salmon","Christmas Tree Worm","Clam","Clown Anemonefish","Clown Triggerfish","Cod","Coelacanth","Cockscomb Cup Coral","Common Fangtooth","Conch","Cookiecutter Shark","Copepod","Coral","Corydoras","Cownose Ray","Crab","Crown-of-Thorns Starfish","Cushion Star","Cuttlefish","California Sea Otters","Dolphin","Dolphinfish","Dory","Devil Fish","Dugong","Dumbo Octopus","Dungeness Crab","Eccentric Sand Dollar","Edible Sea Cucumber","Eel","Elephant Seal","Elkhorn Coral","Emperor Shrimp","Estuarine Crocodile","Fathead Sculpin","Fiddler Crab","Fin Whale","Flameback","Flamingo Tongue Snail","Flashlight Fish","Flatback Turtle","Flatfish","Flying Fish","Flounder","Fluke","French Angelfish","Frilled Shark","Fugu (also called Pufferfish)","Gar","Geoduck","Giant Barrel Sponge","Giant Caribbean Sea Anemone","Giant Clam","Giant Isopod","Giant Kingfish","Giant Oarfish","Giant Pacific Octopus","Giant Pyrosome","Giant Sea Star","Giant Squid","Glowing Sucker Octopus","Giant Tube Worm","Goblin Shark","Goosefish","Great White Shark","Greenland Shark","Grey Atlantic Seal","Grouper","Grunion","Guineafowl Puffer","Haddock","Hake","Halibut","Hammerhead Shark","Hapuka","Harbor Porpoise","Harbor Seal","Hatchetfish","Hawaiian Monk Seal","Hawksbill Turtle","Hector's Dolphin","Hermit Crab","Herring","Hoki","Horn Shark","Horseshoe Crab","Humpback Anglerfish","Humpback Whale","Icefish","Imperator Angelfish","Irukandji Jellyfish","Isopod","Ivory Bush Coral","Japanese Spider Crab","Jellyfish","John Dory","Juan Fernandez Fur Seal","Killer Whale","Kiwa Hirsuta","Krill","Lagoon Triggerfish","Lamprey","Leafy Seadragon","Leopard Seal","Limpet","Ling","Lionfish","Lions Mane Jellyfish","Lobe Coral","Lobster","Loggerhead Turtle","Longnose Sawshark","Longsnout Seahorse","Lophelia Coral","Marrus Orthocanna","Manatee","Manta Ray","Marlin","Megamouth Shark","Mexican Lookdown","Mimic Octopus","Moon Jelly","Mollusk","Monkfish","Moray Eel","Mullet","Mussel","Megaladon","Napoleon Wrasse","Nassau Grouper","Narwhal","Nautilus","Needlefish","Northern Seahorse","North Atlantic Right Whale","Northern Red Snapper","Norway Lobster","Nudibranch","Nurse Shark","Oarfish","Ocean Sunfish","Oceanic Whitetip Shark","Octopus","Olive Sea Snake","Orange Roughy","Ostracod","Otter","Oyster","Pacific Angelshark","Pacific Blackdragon","Pacific Halibut","Pacific Sardine","Pacific Sea Nettle Jellyfish","Pacific White Sided Dolphin","Pantropical Spotted Dolphin","Patagonian Toothfish","Peacock Mantis Shrimp","Pelagic Thresher Shark","Penguin","Peruvian Anchoveta","Pilchard","Pink Salmon","Pinniped","Plankton","Porpoise","Polar Bear","Portuguese Man o' War","Pycnogonid Sea Spider","Quahog","Queen Angelfish","Queen Conch","Queen Parrotfish","Queensland Grouper","Ragfish","Ratfish","Rattail Fish","Ray","Red Drum","Red King Crab","Ringed Seal","Risso's Dolphin","Ross Seals","Sablefish","Salmon","Sand Dollar","Sandbar Shark","Sawfish","Sarcastic Fringehead","Scalloped Hammerhead Shark","Seahorse","Sea Cucumber","Sea Lion","Sea Urchin","Seal","Shark","Shortfin Mako Shark","Shovelnose Guitarfish","Shrimp","Silverside Fish","Skipjack Tuna","Slender Snipe Eel","Smalltooth Sawfish","Smelts","Sockeye Salmon","Southern Stingray","Sponge","Spotted Porcupinefish","Spotted Dolphin","Spotted Eagle Ray","Spotted Moray","Squid","Squidworm","Starfish","Stickleback","Stonefish","Stoplight Loosejaw","Sturgeon","Swordfish","Tan Bristlemouth","Tasseled Wobbegong","Terrible Claw Lobster","Threespot Damselfish","Tiger Prawn","Tiger Shark","Tilefish","Toadfish","Tropical Two-Wing Flyfish","Tuna","Umbrella Squid","Velvet Crab","Venus Flytrap Sea Anemone","Vigtorniella Worm","Viperfish","Vampire Squid","Vaquita","Wahoo","Walrus","West Indian Manatee","Whale","Whale Shark","Whiptail Gulper","White-Beaked Dolphin","White-Ring Garden Eel","White Shrimp","Wobbegong","Wrasse","Wreckfish","Xiphosura","Yellowtail Damselfish","Yelloweye Rockfish","Yellow Cup Black Coral","Yellow Tube Sponge","Yellowfin Tuna","Zebrashark","Zooplankton"],desert:["Aardwolf","Addax","African Wild Ass","Ant","Antelope","Armadillo","Baboon","Badger","Bat","Bearded Dragon","Beetle","Bird","Black-footed Cat","Boa","Brown Bear","Bustard","Butterfly","Camel","Caracal","Caracara","Caterpillar","Centipede","Cheetah","Chipmunk","Chuckwalla","Climbing Mouse","Coati","Cobra","Cotton Rat","Cougar","Courser","Crane Fly","Crow","Dassie Rat","Dove","Dunnart","Eagle","Echidna","Elephant","Emu","Falcon","Fly","Fox","Frogmouth","Gecko","Geoffroy's Cat","Gerbil","Grasshopper","Guanaco","Gundi","Hamster","Hawk","Hedgehog","Hyena","Hyrax","Jackal","Kangaroo","Kangaroo Rat","Kestrel","Kowari","Kultarr","Leopard","Lion","Macaw","Meerkat","Mouse","Oryx","Ostrich","Owl","Pronghorn","Python","Rabbit","Raccoon","Rattlesnake","Rhinoceros","Sand Cat","Spectacled Bear","Spiny Mouse","Starling","Stick Bug","Tarantula","Tit","Toad","Tortoise","Tyrant Flycatcher","Viper","Vulture","Waxwing","Xerus","Zebra"],grassland:["Aardvark","Aardwolf","Accentor","African Buffalo","African Wild Dog","Alpaca","Anaconda","Ant","Anteater","Antelope","Armadillo","Baboon","Badger","Bandicoot","Barbet","Bat","Bee","Bee-eater","Beetle","Bird","Bison","Black-footed Cat","Black-footed Ferret","Bluebird","Boa","Bowerbird","Brown Bear","Bush Dog","Bushshrike","Bustard","Butterfly","Buzzard","Caracal","Caracara","Cardinal","Caterpillar","Cheetah","Chipmunk","Civet","Climbing Mouse","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Common Genet","Cotton Rat","Cougar","Courser","Coyote","Crane","Crane Fly","Cricket","Crow","Culpeo","Death Adder","Deer","Deer Mouse","Dingo","Dinosaur","Dove","Drongo","Duck","Duiker","Dunnart","Eagle","Echidna","Elephant","Elk","Emu","Falcon","Finch","Flea","Fly","Flying Frog","Fox","Frog","Frogmouth","Garter Snake","Gazelle","Gecko","Geoffroy's Cat","Gerbil","Giant Tortoise","Giraffe","Grasshopper","Grison","Groundhog","Grouse","Guanaco","Guinea Pig","Hamster","Harrier","Hartebeest","Hawk","Hedgehog","Helmetshrike","Hippopotamus","Hornbill","Hyena","Hyrax","Impala","Jackal","Jaguar","Jaguarundi","Kangaroo","Kangaroo Rat","Kestrel","Kultarr","Ladybug","Leopard","Lion","Macaw","Meerkat","Mouse","Newt","Oryx","Ostrich","Owl","Pangolin","Pheasant","Prairie Dog","Pronghorn","Przewalski's Horse","Python","Quoll","Rabbit","Raven","Rhinoceros","Shelduck","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Tamandua","Tasmanian Devil","Thornbill","Thrush","Toad","Tortoise"],forest:["Agouti","Anaconda","Anoa","Ant","Anteater","Antelope","Armadillo","Asian Black Bear","Aye-aye","Babirusa","Baboon","Badger","Bandicoot","Banteng","Barbet","Basilisk","Bat","Bearded Dragon","Bee","Bee-eater","Beetle","Bettong","Binturong","Bird-of-paradise","Bongo","Bowerbird","Bulbul","Bush Dog","Bushbaby","Bushshrike","Butterfly","Buzzard","Caecilian","Cardinal","Cassowary","Caterpillar","Centipede","Chameleon","Chimpanzee","Cicada","Civet","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Colugo","Cotinga","Cotton Rat","Cougar","Crane Fly","Cricket","Crocodile","Crow","Cuckoo","Cuscus","Death Adder","Deer","Dhole","Dingo","Dinosaur","Drongo","Duck","Duiker","Eagle","Echidna","Elephant","Finch","Flat-headed Cat","Flea","Flowerpecker","Fly","Flying Frog","Fossa","Frog","Frogmouth","Gaur","Gecko","Gorilla","Grison","Hawaiian Honeycreeper","Hawk","Hedgehog","Helmetshrike","Hornbill","Hyrax","Iguana","Jackal","Jaguar","Jaguarundi","Kestrel","Ladybug","Lemur","Leopard","Lion","Macaw","Mandrill","Margay","Monkey","Mouse","Mouse Deer","Newt","Okapi","Old World Flycatcher","Orangutan","Owl","Pangolin","Peafowl","Pheasant","Possum","Python","Quokka","Rabbit","Raccoon","Red Panda","Red River Hog","Rhinoceros","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Sun Bear","Tamandua","Tamarin","Tapir","Tarantula","Thrush","Tiger","Tit","Toad","Tortoise","Toucan","Trogon","Trumpeter","Turaco","Turtle","Tyrant Flycatcher","Viper","Vulture","Wallaby","Warbler","Wasp","Waxwing","Weaver","Weaver-finch","Whistler","White-eye","Whydah","Woodswallow","Worm","Wren","Xenops","Yellowjacket","Accentor","African Buffalo","American Black Bear","Anole","Bird","Bison","Boa","Brown Bear","Chipmunk","Common Genet","Copperhead","Coyote","Deer Mouse","Dormouse","Elk","Emu","Fisher","Fox","Garter Snake","Giant Panda","Giant Tortoise","Groundhog","Grouse","Guanaco","Himalayan Tahr","Kangaroo","Koala","Numbat","Quoll","Raccoon dog","Tasmanian Devil","Thornbill","Turkey","Vole","Weasel","Wildcat","Wolf","Wombat","Woodchuck","Woodpecker"],farm:["Alpaca","Buffalo","Banteng","Cow","Cat","Chicken","Carp","Camel","Donkey","Dog","Duck","Emu","Goat","Gayal","Guinea","Goose","Horse","Honey","Llama","Pig","Pigeon","Rhea","Rabbit","Sheep","Silkworm","Turkey","Yak","Zebu"],pet:["Bearded Dragon","Birds","Burro","Cats","Chameleons","Chickens","Chinchillas","Chinese Water Dragon","Cows","Dogs","Donkey","Ducks","Ferrets","Fish","Geckos","Geese","Gerbils","Goats","Guinea Fowl","Guinea Pigs","Hamsters","Hedgehogs","Horses","Iguanas","Llamas","Lizards","Mice","Mule","Peafowl","Pigs and Hogs","Pigeons","Ponies","Pot Bellied Pig","Rabbits","Rats","Sheep","Skinks","Snakes","Stick Insects","Sugar Gliders","Tarantula","Turkeys","Turtles"],zoo:["Aardvark","African Wild Dog","Aldabra Tortoise","American Alligator","American Bison","Amur Tiger","Anaconda","Andean Condor","Asian Elephant","Baby Doll Sheep","Bald Eagle","Barred Owl","Blue Iguana","Boer Goat","California Sea Lion","Caribbean Flamingo","Chinchilla","Collared Lemur","Coquerel's Sifaka","Cuban Amazon Parrot","Ebony Langur","Fennec Fox","Fossa","Gelada","Giant Anteater","Giraffe","Gorilla","Grizzly Bear","Henkel's Leaf-tailed Gecko","Indian Gharial","Indian Rhinoceros","King Cobra","King Vulture","Komodo Dragon","Linne's Two-toed Sloth","Lion","Little Penguin","Madagascar Tree Boa","Magellanic Penguin","Malayan Tapir","Malayan Tiger","Matschies Tree Kangaroo","Mini Donkey","Monarch Butterfly","Nile crocodile","North American Porcupine","Nubian Ibex","Okapi","Poison Dart Frog","Polar Bear","Pygmy Marmoset","Radiated Tortoise","Red Panda","Red Ruffed Lemur","Ring-tailed Lemur","Ring-tailed Mongoose","Rock Hyrax","Small Clawed Asian Otter","Snow Leopard","Snowy Owl","Southern White-faced Owl","Southern White Rhinocerous","Squirrel Monkey","Tufted Puffin","White Cheeked Gibbon","White-throated Bee Eater","Zebra"]},primes:[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007],emotions:["love","joy","surprise","anger","sadness","fear"],music_genres:{general:["Rock","Pop","Hip-Hop","Jazz","Classical","Electronic","Country","R&B","Reggae","Blues","Metal","Folk","Alternative","Punk","Disco","Funk","Techno","Indie","Gospel","Dance","Children's","World"],alternative:["Art Punk","Alternative Rock","Britpunk","College Rock","Crossover Thrash","Crust Punk","Emo / Emocore","Experimental Rock","Folk Punk","Goth / Gothic Rock","Grunge","Hardcore Punk","Hard Rock","Indie Rock","Lo-fi","Musique Concrète","New Wave","Progressive Rock","Punk","Shoegaze","Steampunk"],blues:["Acoustic Blues","African Blues","Blues Rock","Blues Shouter","British Blues","Canadian Blues","Chicago Blues","Classic Blues","Classic Female Blues","Contemporary Blues","Country Blues","Dark Blues","Delta Blues","Detroit Blues","Doom Blues","Electric Blues","Folk Blues","Gospel Blues","Harmonica Blues","Hill Country Blues","Hokum Blues","Jazz Blues","Jump Blues","Kansas City Blues","Louisiana Blues","Memphis Blues","Modern Blues","New Orlean Blues","NY Blues","Piano Blues","Piedmont Blues","Punk Blues","Ragtime Blues","Rhythm Blues","Soul Blues","St.Louis Blues","Soul Blues","Swamp Blues","Texas Blues","Urban Blues","Vandeville","West Coast Blues"],"children's":["Lullabies","Sing - Along","Stories"],classical:["Avant-Garde","Ballet","Baroque","Cantata","Chamber Music","String Quartet","Chant","Choral","Classical Crossover","Concerto","Concerto Grosso","Contemporary Classical","Early Music","Expressionist","High Classical","Impressionist","Mass Requiem","Medieval","Minimalism","Modern Composition","Modern Classical","Opera","Oratorio","Orchestral","Organum","Renaissance","Romantic (early period)","Romantic (later period)","Sonata","Symphonic","Symphony","Twelve-tone","Wedding Music"],country:["Alternative Country","Americana","Australian Country","Bakersfield Sound","Bluegrass","Blues Country","Cajun Fiddle Tunes","Christian Country","Classic Country","Close Harmony","Contemporary Bluegrass","Contemporary Country","Country Gospel","Country Pop","Country Rap","Country Rock","Country Soul","Cowboy / Western","Cowpunk","Dansband","Honky Tonk","Franco-Country","Gulf and Western","Hellbilly Music","Honky Tonk","Instrumental Country","Lubbock Sound","Nashville Sound","Neotraditional Country","Outlaw Country","Progressive","Psychobilly / Punkabilly","Red Dirt","Sertanejo","Texas County","Traditional Bluegrass","Traditional Country","Truck-Driving Country","Urban Cowboy","Western Swing"],dance:["Club / Club Dance","Breakcore","Breakbeat / Breakstep","Chillstep","Deep House","Dubstep","Dancehall","Electro House","Electroswing","Exercise","Future Garage","Garage","Glitch Hop","Glitch Pop","Grime","Hardcore","Hard Dance","Hi-NRG / Eurodance","Horrorcore","House","Jackin House","Jungle / Drum n bass","Liquid Dub","Regstep","Speedcore","Techno","Trance","Trap"],electronic:["2-Step","8bit","Ambient","Asian Underground","Bassline","Chillwave","Chiptune","Crunk","Downtempo","Drum & Bass","Hard Step","Electro","Electro-swing","Electroacoustic","Electronica","Electronic Rock","Eurodance","Hardstyle","Hi-Nrg","IDM/Experimental","Industrial","Trip Hop","Vaporwave","UK Garage","House","Dubstep","Deep House","EDM","Future Bass","Psychedelic trance"],jazz:["Acid Jazz","Afro-Cuban Jazz","Avant-Garde Jazz","Bebop","Big Band","Blue Note","British Dance Band (Jazz)","Cape Jazz","Chamber Jazz","Contemporary Jazz","Continental Jazz","Cool Jazz","Crossover Jazz","Dark Jazz","Dixieland","Early Jazz","Electro Swing (Jazz)","Ethio-jazz","Ethno-Jazz","European Free Jazz","Free Funk (Avant-Garde / Funk Jazz)","Free Jazz","Fusion","Gypsy Jazz","Hard Bop","Indo Jazz","Jazz Blues","Jazz-Funk (see Free Funk)","Jazz-Fusion","Jazz Rap","Jazz Rock","Kansas City Jazz","Latin Jazz","M-Base Jazz","Mainstream Jazz","Modal Jazz","Neo-Bop","Neo-Swing","Nu Jazz","Orchestral Jazz","Post-Bop","Punk Jazz","Ragtime","Ska Jazz","Skiffle (also Folk)","Smooth Jazz","Soul Jazz","Swing Jazz","Straight-Ahead Jazz","Trad Jazz","Third Stream","Jazz-Funk","Free Jazz","West Coast Jazz"],metal:["Heavy Metal","Speed Metal","Thrash Metal","Power Metal","Death Metal","Black Metal","Pagan Metal","Viking Metal","Folk Metal","Symphonic Metal","Gothic Metal","Glam Metal","Hair Metal","Doom Metal","Groove Metal","Industrial Metal","Modern Metal","Neoclassical Metal","New Wave Of British Heavy Metal","Post Metal","Progressive Metal","Avantgarde Metal","Sludge","Djent","Drone","Kawaii Metal","Pirate Metal","Nu Metal","Neue Deutsche Härte","Math Metal","Crossover","Grindcore","Hardcore","Metalcore","Deathcore","Post Hardcore","Mathcore"],folk:["American Folk Revival","Anti - Folk","British Folk Revival","Contemporary Folk","Filk Music","Freak Folk","Indie Folk","Industrial Folk","Neofolk","Progressive Folk","Psychedelic Folk","Sung Poetry","Techno - Folk","Folk Rock","Old-time Music","Bluegrass","Appalachian","Roots Revival","Celtic","Indie Folk"],pop:["Adult Contemporary","Arab Pop","Baroque","Britpop","Bubblegum Pop","Chamber Pop","Chanson","Christian Pop","Classical Crossover","Europop","Austropop","Balkan Pop","French Pop","Korean Pop","Japanese Pop","Chinese Pop","Latin Pop","Laïkó","Nederpop","Russian Pop","Dance Pop","Dream Pop","Electro Pop","Iranian Pop","Jangle Pop","Latin Ballad","Levenslied","Louisiana Swamp Pop","Mexican Pop","Motorpop","New Romanticism","Orchestral Pop","Pop Rap","Popera","Pop / Rock","Pop Punk","Power Pop","Psychedelic Pop","Russian Pop","Schlager","Soft Rock","Sophisti - Pop","Space Age Pop","Sunshine Pop","Surf Pop","Synthpop","Teen Pop","Traditional Pop Music","Turkish Pop","Vispop","Wonky Pop"],"r&b":["(Carolina) Beach Music","Contemporary R & B","Disco","Doo Wop","Funk","Modern Soul","Motown","Neo - Soul","Northern Soul","Psychedelic Soul","Quiet Storm","Soul","Soul Blues","Southern Soul"],reggae:["2 - Tone","Dub","Roots Reggae","Reggae Fusion","Reggae en Español","Spanish Reggae","Reggae 110","Reggae Bultrón","Romantic Flow","Lovers Rock","Raggamuffin","Ragga","Dancehall","Ska"],rock:["Acid Rock","Adult - Oriented Rock","Afro Punk","Adult Alternative","Alternative Rock","American Traditional Rock","Anatolian Rock","Arena Rock","Art Rock","Blues - Rock","British Invasion","Cock Rock","Death Metal / Black Metal","Doom Metal","Glam Rock","Gothic Metal","Grind Core","Hair Metal","Hard Rock","Math Metal","Math Rock","Metal","Metal Core","Noise Rock","Jam Bands","Post Punk","Post Rock","Prog - Rock / Art Rock","Progressive Metal","Psychedelic","Rock & Roll","Rockabilly","Roots Rock","Singer / Songwriter","Southern Rock","Spazzcore","Stoner Metal","Surf","Technical Death Metal","Tex - Mex","Thrash Metal","Time Lord Rock(Trock)","Trip - hop","Yacht Rock","School House Rock"],"hip-hop":["Alternative Rap","Avant - Garde","Bounce","Chap Hop","Christian Hip Hop","Conscious Hip Hop","Country - Rap","Grunk","Crunkcore","Cumbia Rap","Dirty South","East Coast","Brick City Club","Hardcore Hip Hop","Mafioso Rap","New Jersey Hip Hop","Freestyle Rap","G - Funk","Gangsta Rap","Golden Age","Grime","Hardcore Rap","Hip - Hop","Hip Pop","Horrorcore","Hyphy","Industrial Hip Hop","Instrumental Hip Hop","Jazz Rap","Latin Rap","Low Bap","Lyrical Hip Hop","Merenrap","Midwest Hip Hop","Chicago Hip Hop","Detroit Hip Hop","Horrorcore","St.Louis Hip Hop","Twin Cities Hip Hop","Motswako","Nerdcore","New Jack Swing","New School Hip Hop","Old School Rap","Rap","Trap","Turntablism","Underground Rap","West Coast Rap","East Coast Rap","Trap","UK Grime","Hyphy","Emo-rap","Cloud rap","G-funk","Boom Bap","Mumble","Drill","UK Drill","Soundcloud Rap","Lo-fi"],punk:["Afro-punk","Anarcho punk","Art punk","Christian punk","Crust punk","Deathrock","Egg punk","Garage punk","Glam punk","Hardcore punk","Horror punk","Incelcore/e-punk","Oi!","Peace punk","Punk pathetique","Queercore","Riot Grrrl","Skate punk","Street punk","Taqwacore","Trallpunk"],disco:["Nu-disco","Disco-funk","Hi-NRG","Italo Disco","Eurodisco","Boogie","Space Disco","Post-disco","Electro Disco","Disco House","Disco Pop","Soulful House"],funk:["Funk Rock","P-Funk (Parliament-Funkadelic)","Psychedelic Funk","Funk Metal","Electro-Funk","Go-go","Boogie-Funk","Jazz-Funk","Soul-Funk","Funky Disco","Nu-Funk","Afrobeat","Latin Funk","G-Funk","Acid Jazz","Funktronica","Folk-Funk","Space Funk","Ambient Funk","Hard Funk","Fusion Funk"],techno:["Acid Techno","Ambient Techno","Detroit Techno","Dub Techno","Minimal Techno","Industrial Techno","Hard Techno","Trance","Progressive Techno","Tech House","Electronica","Breakbeat Techno","Electro Techno","Melodic Techno","Experimental Techno","Dark Techno","Ebm","Hypnotic Techno","Psychedelic Techno","Rave Techno","Techno-Pop"],indie:["Indie Rock","Indie Pop","Indie Folk","Indie Electronic","Indie Punk","Indie Hip-Hop","Dream Pop","Shoegaze","Lo-fi","Chillwave","Freak Folk","Noise Pop","Math Rock","Post-Punk","Garage Rock","Experimental Indie","Surf Rock","Alternative Country","Indie Soul","Art Rock","Indie R&B","Indietronica","Emo","Post-Rock","Indie Pop-Rock","Indie Synthpop","Noise Rock","Psych Folk","Indie Blues"],gospel:["Traditional Gospel","Contemporary Gospel","Southern Gospel","Black Gospel","Urban Contemporary Gospel","Gospel Blues","Bluegrass Gospel","Country Gospel","Praise and Worship","Christian Hip-Hop","Gospel Jazz","Reggae Gospel","African Gospel","Latin Gospel","R&B Gospel","Gospel Choir","Acappella Gospel","Instrumental Gospel","Gospel Rap"],world:["African","Arabic","Asian","Caribbean","Celtic","European","Latin American","Middle Eastern","Native American","Polynesian","Reggae","Ska","Salsa","Flamenco","Bossa Nova","Tango","Fado","Klezmer","Balkan","Afrobeat","Mongolian Throat Singing","Indian Classical","Gamelan","Sufi Music","Zydeco","Kora Music","Andean Music","Irish Traditional","Gypsy Jazz","Bollywood","Bhangra","Jawaiian","Hawaiian Slack Key Guitar","Calypso","Cuban Son","Taiko Drumming","African Highlife","Merengue","Tuvan Throat Singing"]},emojis:{smileys_and_emotion:["0x1f600","0x1f603","0x1f604","0x1f601","0x1f606","0x1f605","0x1f923","0x1f602","0x1f642","0x1f643","0x1fae0","0x1f609","0x1f60a","0x1f607","0x1f970","0x1f60d","0x1f929","0x1f618","0x1f617","0x263a","0x1f61a","0x1f619","0x1f972","0x1f60b","0x1f61b","0x1f61c","0x1f92a","0x1f61d","0x1f911","0x1f917","0x1f92d","0x1fae2","0x1fae3","0x1f92b","0x1f914","0x1fae1","0x1f910","0x1f928","0x1f610","0x1f611","0x1f636","0x1fae5","0x1f636","0x200d","0x1f32b","0xfe0f","0x1f60f","0x1f612","0x1f644","0x1f62c","0x1f62e","0x200d","0x1f4a8","0x1f925","0x1fae8","0x1f642","0x200d","0x2194","0xfe0f","0x1f642","0x200d","0x2195","0xfe0f","0x1f60c","0x1f614","0x1f62a","0x1f924","0x1f634","0x1f637","0x1f912","0x1f915","0x1f922","0x1f92e","0x1f927","0x1f975","0x1f976","0x1f974","0x1f635","0x1f635","0x200d","0x1f4ab","0x1f92f","0x1f920","0x1f973","0x1f978","0x1f60e","0x1f913","0x1f9d0","0x1f615","0x1fae4","0x1f61f","0x1f641","0x2639","0x1f62e","0x1f62f","0x1f632","0x1f633","0x1f97a","0x1f979","0x1f626","0x1f627","0x1f628","0x1f630","0x1f625","0x1f622","0x1f62d","0x1f631","0x1f616","0x1f623","0x1f61e","0x1f613","0x1f629","0x1f62b","0x1f971","0x1f624","0x1f621","0x1f620","0x1f92c","0x1f608","0x1f47f","0x1f480","0x2620","0x1f4a9","0x1f921","0x1f479","0x1f47a","0x1f47b","0x1f47d","0x1f47e","0x1f916","0x1f63a","0x1f638","0x1f639","0x1f63b","0x1f63c","0x1f63d","0x1f640","0x1f63f","0x1f63e","0x1f648","0x1f649","0x1f64a","0x1f48c","0x1f498","0x1f49d","0x1f496","0x1f497","0x1f493","0x1f49e","0x1f495","0x1f49f","0x2763","0x1f494","0x2764","0xfe0f","0x200d","0x1f525","0x2764","0xfe0f","0x200d","0x1fa79","0x2764","0x1fa77","0x1f9e1","0x1f49b","0x1f49a","0x1f499","0x1fa75","0x1f49c","0x1f90e","0x1f5a4","0x1fa76","0x1f90d","0x1f48b","0x1f4af","0x1f4a2","0x1f4a5","0x1f4ab","0x1f4a6","0x1f4a8","0x1f573","0x1f4ac","0x1f441","0xfe0f","0x200d","0x1f5e8","0xfe0f","0x1f5e8","0x1f5ef","0x1f4ad","0x1f4a4"],people_and_body:["0x1f44b","0x1f91a","0x1f590","0x270b","0x1f596","0x1faf1","0x1faf2","0x1faf3","0x1faf4","0x1faf7","0x1faf8","0x1f44c","0x1f90c","0x1f90f","0x270c","0x1f91e","0x1faf0","0x1f91f","0x1f918","0x1f919","0x1f448","0x1f449","0x1f446","0x1f595","0x1f447","0x261d","0x1faf5","0x1f44d","0x1f44e","0x270a","0x1f44a","0x1f91b","0x1f91c","0x1f44f","0x1f64c","0x1faf6","0x1f450","0x1f932","0x1f91d","0x1f64f","0x270d","0x1f485","0x1f933","0x1f4aa","0x1f9be","0x1f9bf","0x1f9b5","0x1f9b6","0x1f442","0x1f9bb","0x1f443","0x1f9e0","0x1fac0","0x1fac1","0x1f9b7","0x1f9b4","0x1f440","0x1f441","0x1f445","0x1f444","0x1fae6","0x1f476","0x1f9d2","0x1f466","0x1f467","0x1f9d1","0x1f471","0x1f468","0x1f9d4","0x1f9d4","0x200d","0x2642","0xfe0f","0x1f9d4","0x200d","0x2640","0xfe0f","0x1f468","0x200d","0x1f9b0","0x1f468","0x200d","0x1f9b1","0x1f468","0x200d","0x1f9b3","0x1f468","0x200d","0x1f9b2","0x1f469","0x1f469","0x200d","0x1f9b0","0x1f9d1","0x200d","0x1f9b0","0x1f469","0x200d","0x1f9b1","0x1f9d1","0x200d","0x1f9b1","0x1f469","0x200d","0x1f9b3","0x1f9d1","0x200d","0x1f9b3","0x1f469","0x200d","0x1f9b2","0x1f9d1","0x200d","0x1f9b2","0x1f471","0x200d","0x2640","0xfe0f","0x1f471","0x200d","0x2642","0xfe0f","0x1f9d3","0x1f474","0x1f475","0x1f64d","0x1f64d","0x200d","0x2642","0xfe0f","0x1f64d","0x200d","0x2640","0xfe0f","0x1f64e","0x1f64e","0x200d","0x2642","0xfe0f","0x1f64e","0x200d","0x2640","0xfe0f","0x1f645","0x1f645","0x200d","0x2642","0xfe0f","0x1f645","0x200d","0x2640","0xfe0f","0x1f646","0x1f646","0x200d","0x2642","0xfe0f","0x1f646","0x200d","0x2640","0xfe0f","0x1f481","0x1f481","0x200d","0x2642","0xfe0f","0x1f481","0x200d","0x2640","0xfe0f","0x1f64b","0x1f64b","0x200d","0x2642","0xfe0f","0x1f64b","0x200d","0x2640","0xfe0f","0x1f9cf","0x1f9cf","0x200d","0x2642","0xfe0f","0x1f9cf","0x200d","0x2640","0xfe0f","0x1f647","0x1f647","0x200d","0x2642","0xfe0f","0x1f647","0x200d","0x2640","0xfe0f","0x1f926","0x1f926","0x200d","0x2642","0xfe0f","0x1f926","0x200d","0x2640","0xfe0f","0x1f937","0x1f937","0x200d","0x2642","0xfe0f","0x1f937","0x200d","0x2640","0xfe0f","0x1f9d1","0x200d","0x2695","0xfe0f","0x1f468","0x200d","0x2695","0xfe0f","0x1f469","0x200d","0x2695","0xfe0f","0x1f9d1","0x200d","0x1f393","0x1f468","0x200d","0x1f393","0x1f469","0x200d","0x1f393","0x1f9d1","0x200d","0x1f3eb","0x1f468","0x200d","0x1f3eb","0x1f469","0x200d","0x1f3eb","0x1f9d1","0x200d","0x2696","0xfe0f","0x1f468","0x200d","0x2696","0xfe0f","0x1f469","0x200d","0x2696","0xfe0f","0x1f9d1","0x200d","0x1f33e","0x1f468","0x200d","0x1f33e","0x1f469","0x200d","0x1f33e","0x1f9d1","0x200d","0x1f373","0x1f468","0x200d","0x1f373","0x1f469","0x200d","0x1f373","0x1f9d1","0x200d","0x1f527","0x1f468","0x200d","0x1f527","0x1f469","0x200d","0x1f527","0x1f9d1","0x200d","0x1f3ed","0x1f468","0x200d","0x1f3ed","0x1f469","0x200d","0x1f3ed","0x1f9d1","0x200d","0x1f4bc","0x1f468","0x200d","0x1f4bc","0x1f469","0x200d","0x1f4bc","0x1f9d1","0x200d","0x1f52c","0x1f468","0x200d","0x1f52c","0x1f469","0x200d","0x1f52c","0x1f9d1","0x200d","0x1f4bb","0x1f468","0x200d","0x1f4bb","0x1f469","0x200d","0x1f4bb","0x1f9d1","0x200d","0x1f3a4","0x1f468","0x200d","0x1f3a4","0x1f469","0x200d","0x1f3a4","0x1f9d1","0x200d","0x1f3a8","0x1f468","0x200d","0x1f3a8","0x1f469","0x200d","0x1f3a8","0x1f9d1","0x200d","0x2708","0xfe0f","0x1f468","0x200d","0x2708","0xfe0f","0x1f469","0x200d","0x2708","0xfe0f","0x1f9d1","0x200d","0x1f680","0x1f468","0x200d","0x1f680","0x1f469","0x200d","0x1f680","0x1f9d1","0x200d","0x1f692","0x1f468","0x200d","0x1f692","0x1f469","0x200d","0x1f692","0x1f46e","0x1f46e","0x200d","0x2642","0xfe0f","0x1f46e","0x200d","0x2640","0xfe0f","0x1f575","0x1f575","0xfe0f","0x200d","0x2642","0xfe0f","0x1f575","0xfe0f","0x200d","0x2640","0xfe0f","0x1f482","0x1f482","0x200d","0x2642","0xfe0f","0x1f482","0x200d","0x2640","0xfe0f","0x1f977","0x1f477","0x1f477","0x200d","0x2642","0xfe0f","0x1f477","0x200d","0x2640","0xfe0f","0x1fac5","0x1f934","0x1f478","0x1f473","0x1f473","0x200d","0x2642","0xfe0f","0x1f473","0x200d","0x2640","0xfe0f","0x1f472","0x1f9d5","0x1f935","0x1f935","0x200d","0x2642","0xfe0f","0x1f935","0x200d","0x2640","0xfe0f","0x1f470","0x1f470","0x200d","0x2642","0xfe0f","0x1f470","0x200d","0x2640","0xfe0f","0x1f930","0x1fac3","0x1fac4","0x1f931","0x1f469","0x200d","0x1f37c","0x1f468","0x200d","0x1f37c","0x1f9d1","0x200d","0x1f37c","0x1f47c","0x1f385","0x1f936","0x1f9d1","0x200d","0x1f384","0x1f9b8","0x1f9b8","0x200d","0x2642","0xfe0f","0x1f9b8","0x200d","0x2640","0xfe0f","0x1f9b9","0x1f9b9","0x200d","0x2642","0xfe0f","0x1f9b9","0x200d","0x2640","0xfe0f","0x1f9d9","0x1f9d9","0x200d","0x2642","0xfe0f","0x1f9d9","0x200d","0x2640","0xfe0f","0x1f9da","0x1f9da","0x200d","0x2642","0xfe0f","0x1f9da","0x200d","0x2640","0xfe0f","0x1f9db","0x1f9db","0x200d","0x2642","0xfe0f","0x1f9db","0x200d","0x2640","0xfe0f","0x1f9dc","0x1f9dc","0x200d","0x2642","0xfe0f","0x1f9dc","0x200d","0x2640","0xfe0f","0x1f9dd","0x1f9dd","0x200d","0x2642","0xfe0f","0x1f9dd","0x200d","0x2640","0xfe0f","0x1f9de","0x1f9de","0x200d","0x2642","0xfe0f","0x1f9de","0x200d","0x2640","0xfe0f","0x1f9df","0x1f9df","0x200d","0x2642","0xfe0f","0x1f9df","0x200d","0x2640","0xfe0f","0x1f9cc","0x1f486","0x1f486","0x200d","0x2642","0xfe0f","0x1f486","0x200d","0x2640","0xfe0f","0x1f487","0x1f487","0x200d","0x2642","0xfe0f","0x1f487","0x200d","0x2640","0xfe0f","0x1f6b6","0x1f6b6","0x200d","0x2642","0xfe0f","0x1f6b6","0x200d","0x2640","0xfe0f","0x1f6b6","0x200d","0x27a1","0xfe0f","0x1f6b6","0x200d","0x2640","0xfe0f","0x200d","0x27a1","0xfe0f","0x1f6b6","0x200d","0x2642","0xfe0f","0x200d","0x27a1","0xfe0f","0x1f9cd","0x1f9cd","0x200d","0x2642","0xfe0f","0x1f9cd","0x200d","0x2640","0xfe0f","0x1f9ce","0x1f9ce","0x200d","0x2642","0xfe0f","0x1f9ce","0x200d","0x2640","0xfe0f","0x1f9ce","0x200d","0x27a1","0xfe0f","0x1f9ce","0x200d","0x2640","0xfe0f","0x200d","0x27a1","0xfe0f","0x1f9ce","0x200d","0x2642","0xfe0f","0x200d","0x27a1","0xfe0f","0x1f9d1","0x200d","0x1f9af","0x1f9d1","0x200d","0x1f9af","0x200d","0x27a1","0xfe0f","0x1f468","0x200d","0x1f9af","0x1f468","0x200d","0x1f9af","0x200d","0x27a1","0xfe0f","0x1f469","0x200d","0x1f9af","0x1f469","0x200d","0x1f9af","0x200d","0x27a1","0xfe0f","0x1f9d1","0x200d","0x1f9bc","0x1f9d1","0x200d","0x1f9bc","0x200d","0x27a1","0xfe0f","0x1f468","0x200d","0x1f9bc","0x1f468","0x200d","0x1f9bc","0x200d","0x27a1","0xfe0f","0x1f469","0x200d","0x1f9bc","0x1f469","0x200d","0x1f9bc","0x200d","0x27a1","0xfe0f","0x1f9d1","0x200d","0x1f9bd","0x1f9d1","0x200d","0x1f9bd","0x200d","0x27a1","0xfe0f","0x1f468","0x200d","0x1f9bd","0x1f468","0x200d","0x1f9bd","0x200d","0x27a1","0xfe0f","0x1f469","0x200d","0x1f9bd","0x1f469","0x200d","0x1f9bd","0x200d","0x27a1","0xfe0f","0x1f3c3","0x1f3c3","0x200d","0x2642","0xfe0f","0x1f3c3","0x200d","0x2640","0xfe0f","0x1f3c3","0x200d","0x27a1","0xfe0f","0x1f3c3","0x200d","0x2640","0xfe0f","0x200d","0x27a1","0xfe0f","0x1f3c3","0x200d","0x2642","0xfe0f","0x200d","0x27a1","0xfe0f","0x1f483","0x1f57a","0x1f574","0x1f46f","0x1f46f","0x200d","0x2642","0xfe0f","0x1f46f","0x200d","0x2640","0xfe0f","0x1f9d6","0x1f9d6","0x200d","0x2642","0xfe0f","0x1f9d6","0x200d","0x2640","0xfe0f","0x1f9d7","0x1f9d7","0x200d","0x2642","0xfe0f","0x1f9d7","0x200d","0x2640","0xfe0f","0x1f93a","0x1f3c7","0x26f7","0x1f3c2","0x1f3cc","0x1f3cc","0xfe0f","0x200d","0x2642","0xfe0f","0x1f3cc","0xfe0f","0x200d","0x2640","0xfe0f","0x1f3c4","0x1f3c4","0x200d","0x2642","0xfe0f","0x1f3c4","0x200d","0x2640","0xfe0f","0x1f6a3","0x1f6a3","0x200d","0x2642","0xfe0f","0x1f6a3","0x200d","0x2640","0xfe0f","0x1f3ca","0x1f3ca","0x200d","0x2642","0xfe0f","0x1f3ca","0x200d","0x2640","0xfe0f","0x26f9","0x26f9","0xfe0f","0x200d","0x2642","0xfe0f","0x26f9","0xfe0f","0x200d","0x2640","0xfe0f","0x1f3cb","0x1f3cb","0xfe0f","0x200d","0x2642","0xfe0f","0x1f3cb","0xfe0f","0x200d","0x2640","0xfe0f","0x1f6b4","0x1f6b4","0x200d","0x2642","0xfe0f","0x1f6b4","0x200d","0x2640","0xfe0f","0x1f6b5","0x1f6b5","0x200d","0x2642","0xfe0f","0x1f6b5","0x200d","0x2640","0xfe0f","0x1f938","0x1f938","0x200d","0x2642","0xfe0f","0x1f938","0x200d","0x2640","0xfe0f","0x1f93c","0x1f93c","0x200d","0x2642","0xfe0f","0x1f93c","0x200d","0x2640","0xfe0f","0x1f93d","0x1f93d","0x200d","0x2642","0xfe0f","0x1f93d","0x200d","0x2640","0xfe0f","0x1f93e","0x1f93e","0x200d","0x2642","0xfe0f","0x1f93e","0x200d","0x2640","0xfe0f","0x1f939","0x1f939","0x200d","0x2642","0xfe0f","0x1f939","0x200d","0x2640","0xfe0f","0x1f9d8","0x1f9d8","0x200d","0x2642","0xfe0f","0x1f9d8","0x200d","0x2640","0xfe0f","0x1f6c0","0x1f6cc","0x1f9d1","0x200d","0x1f91d","0x200d","0x1f9d1","0x1f46d","0x1f46b","0x1f46c","0x1f48f","0x1f469","0x200d","0x2764","0xfe0f","0x200d","0x1f48b","0x200d","0x1f468","0x1f468","0x200d","0x2764","0xfe0f","0x200d","0x1f48b","0x200d","0x1f468","0x1f469","0x200d","0x2764","0xfe0f","0x200d","0x1f48b","0x200d","0x1f469","0x1f491","0x1f469","0x200d","0x2764","0xfe0f","0x200d","0x1f468","0x1f468","0x200d","0x2764","0xfe0f","0x200d","0x1f468","0x1f469","0x200d","0x2764","0xfe0f","0x200d","0x1f469","0x1f468","0x200d","0x1f469","0x200d","0x1f466","0x1f468","0x200d","0x1f469","0x200d","0x1f467","0x1f468","0x200d","0x1f469","0x200d","0x1f467","0x200d","0x1f466","0x1f468","0x200d","0x1f469","0x200d","0x1f466","0x200d","0x1f466","0x1f468","0x200d","0x1f469","0x200d","0x1f467","0x200d","0x1f467","0x1f468","0x200d","0x1f468","0x200d","0x1f466","0x1f468","0x200d","0x1f468","0x200d","0x1f467","0x1f468","0x200d","0x1f468","0x200d","0x1f467","0x200d","0x1f466","0x1f468","0x200d","0x1f468","0x200d","0x1f466","0x200d","0x1f466","0x1f468","0x200d","0x1f468","0x200d","0x1f467","0x200d","0x1f467","0x1f469","0x200d","0x1f469","0x200d","0x1f466","0x1f469","0x200d","0x1f469","0x200d","0x1f467","0x1f469","0x200d","0x1f469","0x200d","0x1f467","0x200d","0x1f466","0x1f469","0x200d","0x1f469","0x200d","0x1f466","0x200d","0x1f466","0x1f469","0x200d","0x1f469","0x200d","0x1f467","0x200d","0x1f467","0x1f468","0x200d","0x1f466","0x1f468","0x200d","0x1f466","0x200d","0x1f466","0x1f468","0x200d","0x1f467","0x1f468","0x200d","0x1f467","0x200d","0x1f466","0x1f468","0x200d","0x1f467","0x200d","0x1f467","0x1f469","0x200d","0x1f466","0x1f469","0x200d","0x1f466","0x200d","0x1f466","0x1f469","0x200d","0x1f467","0x1f469","0x200d","0x1f467","0x200d","0x1f466","0x1f469","0x200d","0x1f467","0x200d","0x1f467","0x1f5e3","0x1f464","0x1f465","0x1fac2","0x1f46a","0x1f9d1","0x200d","0x1f9d1","0x200d","0x1f9d2","0x1f9d1","0x200d","0x1f9d1","0x200d","0x1f9d2","0x200d","0x1f9d2","0x1f9d1","0x200d","0x1f9d2","0x1f9d1","0x200d","0x1f9d2","0x200d","0x1f9d2","0x1f463"],animals_and_nature:["0x1f435","0x1f412","0x1f98d","0x1f9a7","0x1f436","0x1f415","0x1f9ae","0x1f415","0x200d","0x1f9ba","0x1f429","0x1f43a","0x1f98a","0x1f99d","0x1f431","0x1f408","0x1f408","0x200d","0x2b1b","0x1f981","0x1f42f","0x1f405","0x1f406","0x1f434","0x1face","0x1facf","0x1f40e","0x1f984","0x1f993","0x1f98c","0x1f9ac","0x1f42e","0x1f402","0x1f403","0x1f404","0x1f437","0x1f416","0x1f417","0x1f43d","0x1f40f","0x1f411","0x1f410","0x1f42a","0x1f42b","0x1f999","0x1f992","0x1f418","0x1f9a3","0x1f98f","0x1f99b","0x1f42d","0x1f401","0x1f400","0x1f439","0x1f430","0x1f407","0x1f43f","0x1f9ab","0x1f994","0x1f987","0x1f43b","0x1f43b","0x200d","0x2744","0xfe0f","0x1f428","0x1f43c","0x1f9a5","0x1f9a6","0x1f9a8","0x1f998","0x1f9a1","0x1f43e","0x1f983","0x1f414","0x1f413","0x1f423","0x1f424","0x1f425","0x1f426","0x1f427","0x1f54a","0x1f985","0x1f986","0x1f9a2","0x1f989","0x1f9a4","0x1fab6","0x1f9a9","0x1f99a","0x1f99c","0x1fabd","0x1f426","0x200d","0x2b1b","0x1fabf","0x1f426","0x200d","0x1f525","0x1f438","0x1f40a","0x1f422","0x1f98e","0x1f40d","0x1f432","0x1f409","0x1f995","0x1f996","0x1f433","0x1f40b","0x1f42c","0x1f9ad","0x1f41f","0x1f420","0x1f421","0x1f988","0x1f419","0x1f41a","0x1fab8","0x1fabc","0x1f40c","0x1f98b","0x1f41b","0x1f41c","0x1f41d","0x1fab2","0x1f41e","0x1f997","0x1fab3","0x1f577","0x1f578","0x1f982","0x1f99f","0x1fab0","0x1fab1","0x1f9a0","0x1f490","0x1f338","0x1f4ae","0x1fab7","0x1f3f5","0x1f339","0x1f940","0x1f33a","0x1f33b","0x1f33c","0x1f337","0x1fabb","0x1f331","0x1fab4","0x1f332","0x1f333","0x1f334","0x1f335","0x1f33e","0x1f33f","0x2618","0x1f340","0x1f341","0x1f342","0x1f343","0x1fab9","0x1faba","0x1f344"],food_and_drink:["0x1f347","0x1f348","0x1f349","0x1f34a","0x1f34b","0x1f34b","0x200d","0x1f7e9","0x1f34c","0x1f34d","0x1f96d","0x1f34e","0x1f34f","0x1f350","0x1f351","0x1f352","0x1f353","0x1fad0","0x1f95d","0x1f345","0x1fad2","0x1f965","0x1f951","0x1f346","0x1f954","0x1f955","0x1f33d","0x1f336","0x1fad1","0x1f952","0x1f96c","0x1f966","0x1f9c4","0x1f9c5","0x1f95c","0x1fad8","0x1f330","0x1fada","0x1fadb","0x1f344","0x200d","0x1f7eb","0x1f35e","0x1f950","0x1f956","0x1fad3","0x1f968","0x1f96f","0x1f95e","0x1f9c7","0x1f9c0","0x1f356","0x1f357","0x1f969","0x1f953","0x1f354","0x1f35f","0x1f355","0x1f32d","0x1f96a","0x1f32e","0x1f32f","0x1fad4","0x1f959","0x1f9c6","0x1f95a","0x1f373","0x1f958","0x1f372","0x1fad5","0x1f963","0x1f957","0x1f37f","0x1f9c8","0x1f9c2","0x1f96b","0x1f371","0x1f358","0x1f359","0x1f35a","0x1f35b","0x1f35c","0x1f35d","0x1f360","0x1f362","0x1f363","0x1f364","0x1f365","0x1f96e","0x1f361","0x1f95f","0x1f960","0x1f961","0x1f980","0x1f99e","0x1f990","0x1f991","0x1f9aa","0x1f366","0x1f367","0x1f368","0x1f369","0x1f36a","0x1f382","0x1f370","0x1f9c1","0x1f967","0x1f36b","0x1f36c","0x1f36d","0x1f36e","0x1f36f","0x1f37c","0x1f95b","0x2615","0x1fad6","0x1f375","0x1f376","0x1f37e","0x1f377","0x1f378","0x1f379","0x1f37a","0x1f37b","0x1f942","0x1f943","0x1fad7","0x1f964","0x1f9cb","0x1f9c3","0x1f9c9","0x1f9ca","0x1f962","0x1f37d","0x1f374","0x1f944","0x1f52a","0x1fad9","0x1f3fa"],travel_and_places:["0x1f30d","0x1f30e","0x1f30f","0x1f310","0x1f5fa","0x1f5fe","0x1f9ed","0x1f3d4","0x26f0","0x1f30b","0x1f5fb","0x1f3d5","0x1f3d6","0x1f3dc","0x1f3dd","0x1f3de","0x1f3df","0x1f3db","0x1f3d7","0x1f9f1","0x1faa8","0x1fab5","0x1f6d6","0x1f3d8","0x1f3da","0x1f3e0","0x1f3e1","0x1f3e2","0x1f3e3","0x1f3e4","0x1f3e5","0x1f3e6","0x1f3e8","0x1f3e9","0x1f3ea","0x1f3eb","0x1f3ec","0x1f3ed","0x1f3ef","0x1f3f0","0x1f492","0x1f5fc","0x1f5fd","0x26ea","0x1f54c","0x1f6d5","0x1f54d","0x26e9","0x1f54b","0x26f2","0x26fa","0x1f301","0x1f303","0x1f3d9","0x1f304","0x1f305","0x1f306","0x1f307","0x1f309","0x2668","0x1f3a0","0x1f6dd","0x1f3a1","0x1f3a2","0x1f488","0x1f3aa","0x1f682","0x1f683","0x1f684","0x1f685","0x1f686","0x1f687","0x1f688","0x1f689","0x1f68a","0x1f69d","0x1f69e","0x1f68b","0x1f68c","0x1f68d","0x1f68e","0x1f690","0x1f691","0x1f692","0x1f693","0x1f694","0x1f695","0x1f696","0x1f697","0x1f698","0x1f699","0x1f6fb","0x1f69a","0x1f69b","0x1f69c","0x1f3ce","0x1f3cd","0x1f6f5","0x1f9bd","0x1f9bc","0x1f6fa","0x1f6b2","0x1f6f4","0x1f6f9","0x1f6fc","0x1f68f","0x1f6e3","0x1f6e4","0x1f6e2","0x26fd","0x1f6de","0x1f6a8","0x1f6a5","0x1f6a6","0x1f6d1","0x1f6a7","0x2693","0x1f6df","0x26f5","0x1f6f6","0x1f6a4","0x1f6f3","0x26f4","0x1f6e5","0x1f6a2","0x2708","0x1f6e9","0x1f6eb","0x1f6ec","0x1fa82","0x1f4ba","0x1f681","0x1f69f","0x1f6a0","0x1f6a1","0x1f6f0","0x1f680","0x1f6f8","0x1f6ce","0x1f9f3","0x231b","0x23f3","0x231a","0x23f0","0x23f1","0x23f2","0x1f570","0x1f55b","0x1f567","0x1f550","0x1f55c","0x1f551","0x1f55d","0x1f552","0x1f55e","0x1f553","0x1f55f","0x1f554","0x1f560","0x1f555","0x1f561","0x1f556","0x1f562","0x1f557","0x1f563","0x1f558","0x1f564","0x1f559","0x1f565","0x1f55a","0x1f566","0x1f311","0x1f312","0x1f313","0x1f314","0x1f315","0x1f316","0x1f317","0x1f318","0x1f319","0x1f31a","0x1f31b","0x1f31c","0x1f321","0x2600","0x1f31d","0x1f31e","0x1fa90","0x2b50","0x1f31f","0x1f320","0x1f30c","0x2601","0x26c5","0x26c8","0x1f324","0x1f325","0x1f326","0x1f327","0x1f328","0x1f329","0x1f32a","0x1f32b","0x1f32c","0x1f300","0x1f308","0x1f302","0x2602","0x2614","0x26f1","0x26a1","0x2744","0x2603","0x26c4","0x2604","0x1f525","0x1f4a7","0x1f30a"],activities:["0x1f383","0x1f384","0x1f386","0x1f387","0x1f9e8","0x2728","0x1f388","0x1f389","0x1f38a","0x1f38b","0x1f38d","0x1f38e","0x1f38f","0x1f390","0x1f391","0x1f9e7","0x1f380","0x1f381","0x1f397","0x1f39f","0x1f3ab","0x1f396","0x1f3c6","0x1f3c5","0x1f947","0x1f948","0x1f949","0x26bd","0x26be","0x1f94e","0x1f3c0","0x1f3d0","0x1f3c8","0x1f3c9","0x1f3be","0x1f94f","0x1f3b3","0x1f3cf","0x1f3d1","0x1f3d2","0x1f94d","0x1f3d3","0x1f3f8","0x1f94a","0x1f94b","0x1f945","0x26f3","0x26f8","0x1f3a3","0x1f93f","0x1f3bd","0x1f3bf","0x1f6f7","0x1f94c","0x1f3af","0x1fa80","0x1fa81","0x1f52b","0x1f3b1","0x1f52e","0x1fa84","0x1f3ae","0x1f579","0x1f3b0","0x1f3b2","0x1f9e9","0x1f9f8","0x1fa85","0x1faa9","0x1fa86","0x2660","0x2665","0x2666","0x2663","0x265f","0x1f0cf","0x1f004","0x1f3b4","0x1f3ad","0x1f5bc","0x1f3a8","0x1f9f5","0x1faa1","0x1f9f6","0x1faa2"],objects:["0x1f453","0x1f576","0x1f97d","0x1f97c","0x1f9ba","0x1f454","0x1f455","0x1f456","0x1f9e3","0x1f9e4","0x1f9e5","0x1f9e6","0x1f457","0x1f458","0x1f97b","0x1fa71","0x1fa72","0x1fa73","0x1f459","0x1f45a","0x1faad","0x1f45b","0x1f45c","0x1f45d","0x1f6cd","0x1f392","0x1fa74","0x1f45e","0x1f45f","0x1f97e","0x1f97f","0x1f460","0x1f461","0x1fa70","0x1f462","0x1faae","0x1f451","0x1f452","0x1f3a9","0x1f393","0x1f9e2","0x1fa96","0x26d1","0x1f4ff","0x1f484","0x1f48d","0x1f48e","0x1f507","0x1f508","0x1f509","0x1f50a","0x1f4e2","0x1f4e3","0x1f4ef","0x1f514","0x1f515","0x1f3bc","0x1f3b5","0x1f3b6","0x1f399","0x1f39a","0x1f39b","0x1f3a4","0x1f3a7","0x1f4fb","0x1f3b7","0x1fa97","0x1f3b8","0x1f3b9","0x1f3ba","0x1f3bb","0x1fa95","0x1f941","0x1fa98","0x1fa87","0x1fa88","0x1f4f1","0x1f4f2","0x260e","0x1f4de","0x1f4df","0x1f4e0","0x1f50b","0x1faab","0x1f50c","0x1f4bb","0x1f5a5","0x1f5a8","0x2328","0x1f5b1","0x1f5b2","0x1f4bd","0x1f4be","0x1f4bf","0x1f4c0","0x1f9ee","0x1f3a5","0x1f39e","0x1f4fd","0x1f3ac","0x1f4fa","0x1f4f7","0x1f4f8","0x1f4f9","0x1f4fc","0x1f50d","0x1f50e","0x1f56f","0x1f4a1","0x1f526","0x1f3ee","0x1fa94","0x1f4d4","0x1f4d5","0x1f4d6","0x1f4d7","0x1f4d8","0x1f4d9","0x1f4da","0x1f4d3","0x1f4d2","0x1f4c3","0x1f4dc","0x1f4c4","0x1f4f0","0x1f5de","0x1f4d1","0x1f516","0x1f3f7","0x1f4b0","0x1fa99","0x1f4b4","0x1f4b5","0x1f4b6","0x1f4b7","0x1f4b8","0x1f4b3","0x1f9fe","0x1f4b9","0x2709","0x1f4e7","0x1f4e8","0x1f4e9","0x1f4e4","0x1f4e5","0x1f4e6","0x1f4eb","0x1f4ea","0x1f4ec","0x1f4ed","0x1f4ee","0x1f5f3","0x270f","0x2712","0x1f58b","0x1f58a","0x1f58c","0x1f58d","0x1f4dd","0x1f4bc","0x1f4c1","0x1f4c2","0x1f5c2","0x1f4c5","0x1f4c6","0x1f5d2","0x1f5d3","0x1f4c7","0x1f4c8","0x1f4c9","0x1f4ca","0x1f4cb","0x1f4cc","0x1f4cd","0x1f4ce","0x1f587","0x1f4cf","0x1f4d0","0x2702","0x1f5c3","0x1f5c4","0x1f5d1","0x1f512","0x1f513","0x1f50f","0x1f510","0x1f511","0x1f5dd","0x1f528","0x1fa93","0x26cf","0x2692","0x1f6e0","0x1f5e1","0x2694","0x1f4a3","0x1fa83","0x1f3f9","0x1f6e1","0x1fa9a","0x1f527","0x1fa9b","0x1f529","0x2699","0x1f5dc","0x2696","0x1f9af","0x1f517","0x26d3","0xfe0f","0x200d","0x1f4a5","0x26d3","0x1fa9d","0x1f9f0","0x1f9f2","0x1fa9c","0x2697","0x1f9ea","0x1f9eb","0x1f9ec","0x1f52c","0x1f52d","0x1f4e1","0x1f489","0x1fa78","0x1f48a","0x1fa79","0x1fa7c","0x1fa7a","0x1fa7b","0x1f6aa","0x1f6d7","0x1fa9e","0x1fa9f","0x1f6cf","0x1f6cb","0x1fa91","0x1f6bd","0x1faa0","0x1f6bf","0x1f6c1","0x1faa4","0x1fa92","0x1f9f4","0x1f9f7","0x1f9f9","0x1f9fa","0x1f9fb","0x1faa3","0x1f9fc","0x1fae7","0x1faa5","0x1f9fd","0x1f9ef","0x1f6d2","0x1f6ac","0x26b0","0x1faa6","0x26b1","0x1f9ff","0x1faac","0x1f5ff","0x1faa7","0x1faaa"],symbols:["0x1f3e7","0x1f6ae","0x1f6b0","0x267f","0x1f6b9","0x1f6ba","0x1f6bb","0x1f6bc","0x1f6be","0x1f6c2","0x1f6c3","0x1f6c4","0x1f6c5","0x26a0","0x1f6b8","0x26d4","0x1f6ab","0x1f6b3","0x1f6ad","0x1f6af","0x1f6b1","0x1f6b7","0x1f4f5","0x1f51e","0x2622","0x2623","0x2b06","0x2197","0x27a1","0x2198","0x2b07","0x2199","0x2b05","0x2196","0x2195","0x2194","0x21a9","0x21aa","0x2934","0x2935","0x1f503","0x1f504","0x1f519","0x1f51a","0x1f51b","0x1f51c","0x1f51d","0x1f6d0","0x269b","0x1f549","0x2721","0x2638","0x262f","0x271d","0x2626","0x262a","0x262e","0x1f54e","0x1f52f","0x1faaf","0x2648","0x2649","0x264a","0x264b","0x264c","0x264d","0x264e","0x264f","0x2650","0x2651","0x2652","0x2653","0x26ce","0x1f500","0x1f501","0x1f502","0x25b6","0x23e9","0x23ed","0x23ef","0x25c0","0x23ea","0x23ee","0x1f53c","0x23eb","0x1f53d","0x23ec","0x23f8","0x23f9","0x23fa","0x23cf","0x1f3a6","0x1f505","0x1f506","0x1f4f6","0x1f6dc","0x1f4f3","0x1f4f4","0x2640","0x2642","0x26a7","0x2716","0x2795","0x2796","0x2797","0x1f7f0","0x267e","0x203c","0x2049","0x2753","0x2754","0x2755","0x2757","0x3030","0x1f4b1","0x1f4b2","0x2695","0x267b","0x269c","0x1f531","0x1f4db","0x1f530","0x2b55","0x2705","0x2611","0x2714","0x274c","0x274e","0x27b0","0x27bf","0x303d","0x2733","0x2734","0x2747","0x00a9","0x00ae","0x2122","0x0023","0xfe0f","0x20e3","0x002a","0xfe0f","0x20e3","0x0030","0xfe0f","0x20e3","0x0031","0xfe0f","0x20e3","0x0032","0xfe0f","0x20e3","0x0033","0xfe0f","0x20e3","0x0034","0xfe0f","0x20e3","0x0035","0xfe0f","0x20e3","0x0036","0xfe0f","0x20e3","0x0037","0xfe0f","0x20e3","0x0038","0xfe0f","0x20e3","0x0039","0xfe0f","0x20e3","0x1f51f","0x1f520","0x1f521","0x1f522","0x1f523","0x1f524","0x1f170","0x1f18e","0x1f171","0x1f191","0x1f192","0x1f193","0x2139","0x1f194","0x24c2","0x1f195","0x1f196","0x1f17e","0x1f197","0x1f17f","0x1f198","0x1f199","0x1f19a","0x1f201","0x1f202","0x1f237","0x1f236","0x1f22f","0x1f250","0x1f239","0x1f21a","0x1f232","0x1f251","0x1f238","0x1f234","0x1f233","0x3297","0x3299","0x1f23a","0x1f235","0x1f534","0x1f7e0","0x1f7e1","0x1f7e2","0x1f535","0x1f7e3","0x1f7e4","0x26ab","0x26aa","0x1f7e5","0x1f7e7","0x1f7e8","0x1f7e9","0x1f7e6","0x1f7ea","0x1f7eb","0x2b1b","0x2b1c","0x25fc","0x25fb","0x25fe","0x25fd","0x25aa","0x25ab","0x1f536","0x1f537","0x1f538","0x1f539","0x1f53a","0x1f53b","0x1f4a0","0x1f518","0x1f533","0x1f532"],flags:["0x1f3c1","0x1f6a9","0x1f38c","0x1f3f4","0x1f3f3","0x1f3f3","0xfe0f","0x200d","0x1f308","0x1f3f3","0xfe0f","0x200d","0x26a7","0xfe0f","0x1f3f4","0x200d","0x2620","0xfe0f","0x1f1e6","0x1f1e8","0x1f1e6","0x1f1e9","0x1f1e6","0x1f1ea","0x1f1e6","0x1f1eb","0x1f1e6","0x1f1ec","0x1f1e6","0x1f1ee","0x1f1e6","0x1f1f1","0x1f1e6","0x1f1f2","0x1f1e6","0x1f1f4","0x1f1e6","0x1f1f6","0x1f1e6","0x1f1f7","0x1f1e6","0x1f1f8","0x1f1e6","0x1f1f9","0x1f1e6","0x1f1fa","0x1f1e6","0x1f1fc","0x1f1e6","0x1f1fd","0x1f1e6","0x1f1ff","0x1f1e7","0x1f1e6","0x1f1e7","0x1f1e7","0x1f1e7","0x1f1e9","0x1f1e7","0x1f1ea","0x1f1e7","0x1f1eb","0x1f1e7","0x1f1ec","0x1f1e7","0x1f1ed","0x1f1e7","0x1f1ee","0x1f1e7","0x1f1ef","0x1f1e7","0x1f1f1","0x1f1e7","0x1f1f2","0x1f1e7","0x1f1f3","0x1f1e7","0x1f1f4","0x1f1e7","0x1f1f6","0x1f1e7","0x1f1f7","0x1f1e7","0x1f1f8","0x1f1e7","0x1f1f9","0x1f1e7","0x1f1fb","0x1f1e7","0x1f1fc","0x1f1e7","0x1f1fe","0x1f1e7","0x1f1ff","0x1f1e8","0x1f1e6","0x1f1e8","0x1f1e8","0x1f1e8","0x1f1e9","0x1f1e8","0x1f1eb","0x1f1e8","0x1f1ec","0x1f1e8","0x1f1ed","0x1f1e8","0x1f1ee","0x1f1e8","0x1f1f0","0x1f1e8","0x1f1f1","0x1f1e8","0x1f1f2","0x1f1e8","0x1f1f3","0x1f1e8","0x1f1f4","0x1f1e8","0x1f1f5","0x1f1e8","0x1f1f7","0x1f1e8","0x1f1fa","0x1f1e8","0x1f1fb","0x1f1e8","0x1f1fc","0x1f1e8","0x1f1fd","0x1f1e8","0x1f1fe","0x1f1e8","0x1f1ff","0x1f1e9","0x1f1ea","0x1f1e9","0x1f1ec","0x1f1e9","0x1f1ef","0x1f1e9","0x1f1f0","0x1f1e9","0x1f1f2","0x1f1e9","0x1f1f4","0x1f1e9","0x1f1ff","0x1f1ea","0x1f1e6","0x1f1ea","0x1f1e8","0x1f1ea","0x1f1ea","0x1f1ea","0x1f1ec","0x1f1ea","0x1f1ed","0x1f1ea","0x1f1f7","0x1f1ea","0x1f1f8","0x1f1ea","0x1f1f9","0x1f1ea","0x1f1fa","0x1f1eb","0x1f1ee","0x1f1eb","0x1f1ef","0x1f1eb","0x1f1f0","0x1f1eb","0x1f1f2","0x1f1eb","0x1f1f4","0x1f1eb","0x1f1f7","0x1f1ec","0x1f1e6","0x1f1ec","0x1f1e7","0x1f1ec","0x1f1e9","0x1f1ec","0x1f1ea","0x1f1ec","0x1f1eb","0x1f1ec","0x1f1ec","0x1f1ec","0x1f1ed","0x1f1ec","0x1f1ee","0x1f1ec","0x1f1f1","0x1f1ec","0x1f1f2","0x1f1ec","0x1f1f3","0x1f1ec","0x1f1f5","0x1f1ec","0x1f1f6","0x1f1ec","0x1f1f7","0x1f1ec","0x1f1f8","0x1f1ec","0x1f1f9","0x1f1ec","0x1f1fa","0x1f1ec","0x1f1fc","0x1f1ec","0x1f1fe","0x1f1ed","0x1f1f0","0x1f1ed","0x1f1f2","0x1f1ed","0x1f1f3","0x1f1ed","0x1f1f7","0x1f1ed","0x1f1f9","0x1f1ed","0x1f1fa","0x1f1ee","0x1f1e8","0x1f1ee","0x1f1e9","0x1f1ee","0x1f1ea","0x1f1ee","0x1f1f1","0x1f1ee","0x1f1f2","0x1f1ee","0x1f1f3","0x1f1ee","0x1f1f4","0x1f1ee","0x1f1f6","0x1f1ee","0x1f1f7","0x1f1ee","0x1f1f8","0x1f1ee","0x1f1f9","0x1f1ef","0x1f1ea","0x1f1ef","0x1f1f2","0x1f1ef","0x1f1f4","0x1f1ef","0x1f1f5","0x1f1f0","0x1f1ea","0x1f1f0","0x1f1ec","0x1f1f0","0x1f1ed","0x1f1f0","0x1f1ee","0x1f1f0","0x1f1f2","0x1f1f0","0x1f1f3","0x1f1f0","0x1f1f5","0x1f1f0","0x1f1f7","0x1f1f0","0x1f1fc","0x1f1f0","0x1f1fe","0x1f1f0","0x1f1ff","0x1f1f1","0x1f1e6","0x1f1f1","0x1f1e7","0x1f1f1","0x1f1e8","0x1f1f1","0x1f1ee","0x1f1f1","0x1f1f0","0x1f1f1","0x1f1f7","0x1f1f1","0x1f1f8","0x1f1f1","0x1f1f9","0x1f1f1","0x1f1fa","0x1f1f1","0x1f1fb","0x1f1f1","0x1f1fe","0x1f1f2","0x1f1e6","0x1f1f2","0x1f1e8","0x1f1f2","0x1f1e9","0x1f1f2","0x1f1ea","0x1f1f2","0x1f1eb","0x1f1f2","0x1f1ec","0x1f1f2","0x1f1ed","0x1f1f2","0x1f1f0","0x1f1f2","0x1f1f1","0x1f1f2","0x1f1f2","0x1f1f2","0x1f1f3","0x1f1f2","0x1f1f4","0x1f1f2","0x1f1f5","0x1f1f2","0x1f1f6","0x1f1f2","0x1f1f7","0x1f1f2","0x1f1f8","0x1f1f2","0x1f1f9","0x1f1f2","0x1f1fa","0x1f1f2","0x1f1fb","0x1f1f2","0x1f1fc","0x1f1f2","0x1f1fd","0x1f1f2","0x1f1fe","0x1f1f2","0x1f1ff","0x1f1f3","0x1f1e6","0x1f1f3","0x1f1e8","0x1f1f3","0x1f1ea","0x1f1f3","0x1f1eb","0x1f1f3","0x1f1ec","0x1f1f3","0x1f1ee","0x1f1f3","0x1f1f1","0x1f1f3","0x1f1f4","0x1f1f3","0x1f1f5","0x1f1f3","0x1f1f7","0x1f1f3","0x1f1fa","0x1f1f3","0x1f1ff","0x1f1f4","0x1f1f2","0x1f1f5","0x1f1e6","0x1f1f5","0x1f1ea","0x1f1f5","0x1f1eb","0x1f1f5","0x1f1ec","0x1f1f5","0x1f1ed","0x1f1f5","0x1f1f0","0x1f1f5","0x1f1f1","0x1f1f5","0x1f1f2","0x1f1f5","0x1f1f3","0x1f1f5","0x1f1f7","0x1f1f5","0x1f1f8","0x1f1f5","0x1f1f9","0x1f1f5","0x1f1fc","0x1f1f5","0x1f1fe","0x1f1f6","0x1f1e6","0x1f1f7","0x1f1ea","0x1f1f7","0x1f1f4","0x1f1f7","0x1f1f8","0x1f1f7","0x1f1fa","0x1f1f7","0x1f1fc","0x1f1f8","0x1f1e6","0x1f1f8","0x1f1e7","0x1f1f8","0x1f1e8","0x1f1f8","0x1f1e9","0x1f1f8","0x1f1ea","0x1f1f8","0x1f1ec","0x1f1f8","0x1f1ed","0x1f1f8","0x1f1ee","0x1f1f8","0x1f1ef","0x1f1f8","0x1f1f0","0x1f1f8","0x1f1f1","0x1f1f8","0x1f1f2","0x1f1f8","0x1f1f3","0x1f1f8","0x1f1f4","0x1f1f8","0x1f1f7","0x1f1f8","0x1f1f8","0x1f1f8","0x1f1f9","0x1f1f8","0x1f1fb","0x1f1f8","0x1f1fd","0x1f1f8","0x1f1fe","0x1f1f8","0x1f1ff","0x1f1f9","0x1f1e6","0x1f1f9","0x1f1e8","0x1f1f9","0x1f1e9","0x1f1f9","0x1f1eb","0x1f1f9","0x1f1ec","0x1f1f9","0x1f1ed","0x1f1f9","0x1f1ef","0x1f1f9","0x1f1f0","0x1f1f9","0x1f1f1","0x1f1f9","0x1f1f2","0x1f1f9","0x1f1f3","0x1f1f9","0x1f1f4","0x1f1f9","0x1f1f7","0x1f1f9","0x1f1f9","0x1f1f9","0x1f1fb","0x1f1f9","0x1f1fc","0x1f1f9","0x1f1ff","0x1f1fa","0x1f1e6","0x1f1fa","0x1f1ec","0x1f1fa","0x1f1f2","0x1f1fa","0x1f1f3","0x1f1fa","0x1f1f8","0x1f1fa","0x1f1fe","0x1f1fa","0x1f1ff","0x1f1fb","0x1f1e6","0x1f1fb","0x1f1e8","0x1f1fb","0x1f1ea","0x1f1fb","0x1f1ec","0x1f1fb","0x1f1ee","0x1f1fb","0x1f1f3","0x1f1fb","0x1f1fa","0x1f1fc","0x1f1eb","0x1f1fc","0x1f1f8","0x1f1fd","0x1f1f0","0x1f1fe","0x1f1ea","0x1f1fe","0x1f1f9","0x1f1ff","0x1f1e6","0x1f1ff","0x1f1f2","0x1f1ff","0x1f1fc","0x1f3f4","0xe0067","0xe0062","0xe0065","0xe006e","0xe0067","0xe007f","0x1f3f4","0xe0067","0xe0062","0xe0073","0xe0063","0xe0074","0xe007f","0x1f3f4","0xe0067","0xe0062","0xe0077","0xe006c","0xe0073","0xe007f"]}},ie=Object.prototype.hasOwnProperty,Le=Object.keys||function(a){var t=[];for(var l in a)ie.call(a,l)&&t.push(l);return t};function Ne(a,t){for(var l=Le(a),f,x=0,C=l.length;x<C;x++)f=l[x],t[f]=a[f]||t[f]}function Ge(a,t){for(var l=0,f=a.length;l<f;l++)t[l]=a[l]}function ta(a,t){var l=Array.isArray(a),f=t||(l?new Array(a.length):{});return l?Ge(a,f):Ne(a,f),f}c.prototype.get=function(a){return ta(D[a])},c.prototype.mac_address=function(a){a=b(a),a.separator||(a.separator=a.networkVersion?".":":");var t="ABCDEF1234567890",l="";return a.networkVersion?l=this.n(this.string,3,{pool:t,length:4}).join(a.separator):l=this.n(this.string,6,{pool:t,length:2}).join(a.separator),l},c.prototype.normal=function(a){if(a=b(a,{mean:0,dev:1,pool:[]}),M(a.pool.constructor!==Array,"Chance: The pool option must be a valid array."),M(typeof a.mean!="number","Chance: Mean (mean) must be a number"),M(typeof a.dev!="number","Chance: Standard deviation (dev) must be a number"),a.pool.length>0)return this.normal_pool(a);var t,l,f,x,C=a.mean,v=a.dev;do l=this.random()*2-1,f=this.random()*2-1,t=l*l+f*f;while(t>=1);return x=l*Math.sqrt(-2*Math.log(t)/t),v*x+C},c.prototype.normal_pool=function(a){var t=0;do{var l=Math.round(this.normal({mean:a.mean,dev:a.dev}));if(l<a.pool.length&&l>=0)return a.pool[l];t++}while(t<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.")},c.prototype.radio=function(a){a=b(a,{side:"?"});var t="";switch(a.side.toLowerCase()){case"east":case"e":t="W";break;case"west":case"w":t="K";break;default:t=this.character({pool:"KW"});break}return t+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},c.prototype.set=function(a,t){typeof a=="string"?D[a]=t:D=ta(a,D)},c.prototype.tv=function(a){return this.radio(a)},c.prototype.cnpj=function(){var a=this.n(this.natural,8,{max:9}),t=2+a[7]*6+a[6]*7+a[5]*8+a[4]*9+a[3]*2+a[2]*3+a[1]*4+a[0]*5;t=11-t%11,t>=10&&(t=0);var l=t*2+3+a[7]*7+a[6]*8+a[5]*9+a[4]*2+a[3]*3+a[2]*4+a[1]*5+a[0]*6;return l=11-l%11,l>=10&&(l=0),""+a[0]+a[1]+"."+a[2]+a[3]+a[4]+"."+a[5]+a[6]+a[7]+"/0001-"+t+l},c.prototype.emotion=function(){return this.pick(this.get("emotions"))},c.prototype.mersenne_twister=function(a){return new se(a)},c.prototype.blueimp_md5=function(){return new X};var se=function(a){a===void 0&&(a=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(a)};se.prototype.init_genrand=function(a){for(this.mt[0]=a>>>0,this.mti=1;this.mti<this.N;this.mti++)a=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(((a&4294901760)>>>16)*1812433253<<16)+(a&65535)*1812433253+this.mti,this.mt[this.mti]>>>=0},se.prototype.init_by_array=function(a,t){var l=1,f=0,x,C;for(this.init_genrand(19650218),x=this.N>t?this.N:t;x;x--)C=this.mt[l-1]^this.mt[l-1]>>>30,this.mt[l]=(this.mt[l]^(((C&4294901760)>>>16)*1664525<<16)+(C&65535)*1664525)+a[f]+f,this.mt[l]>>>=0,l++,f++,l>=this.N&&(this.mt[0]=this.mt[this.N-1],l=1),f>=t&&(f=0);for(x=this.N-1;x;x--)C=this.mt[l-1]^this.mt[l-1]>>>30,this.mt[l]=(this.mt[l]^(((C&4294901760)>>>16)*1566083941<<16)+(C&65535)*1566083941)-l,this.mt[l]>>>=0,l++,l>=this.N&&(this.mt[0]=this.mt[this.N-1],l=1);this.mt[0]=2147483648},se.prototype.genrand_int32=function(){var a,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var l;for(this.mti===this.N+1&&this.init_genrand(5489),l=0;l<this.N-this.M;l++)a=this.mt[l]&this.UPPER_MASK|this.mt[l+1]&this.LOWER_MASK,this.mt[l]=this.mt[l+this.M]^a>>>1^t[a&1];for(;l<this.N-1;l++)a=this.mt[l]&this.UPPER_MASK|this.mt[l+1]&this.LOWER_MASK,this.mt[l]=this.mt[l+(this.M-this.N)]^a>>>1^t[a&1];a=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^a>>>1^t[a&1],this.mti=0}return a=this.mt[this.mti++],a^=a>>>11,a^=a<<7&2636928640,a^=a<<15&4022730752,a^=a>>>18,a>>>0},se.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},se.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},se.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},se.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},se.prototype.genrand_res53=function(){var a=this.genrand_int32()>>>5,t=this.genrand_int32()>>>6;return(a*67108864+t)*(1/9007199254740992)};var X=function(){};X.prototype.VERSION="1.0.1",X.prototype.safe_add=function(t,l){var f=(t&65535)+(l&65535),x=(t>>16)+(l>>16)+(f>>16);return x<<16|f&65535},X.prototype.bit_roll=function(a,t){return a<<t|a>>>32-t},X.prototype.md5_cmn=function(a,t,l,f,x,C){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(t,a),this.safe_add(f,C)),x),l)},X.prototype.md5_ff=function(a,t,l,f,x,C,v){return this.md5_cmn(t&l|~t&f,a,t,x,C,v)},X.prototype.md5_gg=function(a,t,l,f,x,C,v){return this.md5_cmn(t&f|l&~f,a,t,x,C,v)},X.prototype.md5_hh=function(a,t,l,f,x,C,v){return this.md5_cmn(t^l^f,a,t,x,C,v)},X.prototype.md5_ii=function(a,t,l,f,x,C,v){return this.md5_cmn(l^(t|~f),a,t,x,C,v)},X.prototype.binl_md5=function(a,t){a[t>>5]|=128<<t%32,a[(t+64>>>9<<4)+14]=t;var l,f,x,C,v,g=1732584193,I=-271733879,T=-1732584194,A=271733878;for(l=0;l<a.length;l+=16)f=g,x=I,C=T,v=A,g=this.md5_ff(g,I,T,A,a[l],7,-680876936),A=this.md5_ff(A,g,I,T,a[l+1],12,-389564586),T=this.md5_ff(T,A,g,I,a[l+2],17,606105819),I=this.md5_ff(I,T,A,g,a[l+3],22,-1044525330),g=this.md5_ff(g,I,T,A,a[l+4],7,-176418897),A=this.md5_ff(A,g,I,T,a[l+5],12,1200080426),T=this.md5_ff(T,A,g,I,a[l+6],17,-1473231341),I=this.md5_ff(I,T,A,g,a[l+7],22,-45705983),g=this.md5_ff(g,I,T,A,a[l+8],7,1770035416),A=this.md5_ff(A,g,I,T,a[l+9],12,-1958414417),T=this.md5_ff(T,A,g,I,a[l+10],17,-42063),I=this.md5_ff(I,T,A,g,a[l+11],22,-1990404162),g=this.md5_ff(g,I,T,A,a[l+12],7,1804603682),A=this.md5_ff(A,g,I,T,a[l+13],12,-40341101),T=this.md5_ff(T,A,g,I,a[l+14],17,-1502002290),I=this.md5_ff(I,T,A,g,a[l+15],22,1236535329),g=this.md5_gg(g,I,T,A,a[l+1],5,-165796510),A=this.md5_gg(A,g,I,T,a[l+6],9,-1069501632),T=this.md5_gg(T,A,g,I,a[l+11],14,643717713),I=this.md5_gg(I,T,A,g,a[l],20,-373897302),g=this.md5_gg(g,I,T,A,a[l+5],5,-701558691),A=this.md5_gg(A,g,I,T,a[l+10],9,38016083),T=this.md5_gg(T,A,g,I,a[l+15],14,-660478335),I=this.md5_gg(I,T,A,g,a[l+4],20,-405537848),g=this.md5_gg(g,I,T,A,a[l+9],5,568446438),A=this.md5_gg(A,g,I,T,a[l+14],9,-1019803690),T=this.md5_gg(T,A,g,I,a[l+3],14,-187363961),I=this.md5_gg(I,T,A,g,a[l+8],20,1163531501),g=this.md5_gg(g,I,T,A,a[l+13],5,-1444681467),A=this.md5_gg(A,g,I,T,a[l+2],9,-51403784),T=this.md5_gg(T,A,g,I,a[l+7],14,1735328473),I=this.md5_gg(I,T,A,g,a[l+12],20,-1926607734),g=this.md5_hh(g,I,T,A,a[l+5],4,-378558),A=this.md5_hh(A,g,I,T,a[l+8],11,-2022574463),T=this.md5_hh(T,A,g,I,a[l+11],16,1839030562),I=this.md5_hh(I,T,A,g,a[l+14],23,-35309556),g=this.md5_hh(g,I,T,A,a[l+1],4,-1530992060),A=this.md5_hh(A,g,I,T,a[l+4],11,1272893353),T=this.md5_hh(T,A,g,I,a[l+7],16,-155497632),I=this.md5_hh(I,T,A,g,a[l+10],23,-1094730640),g=this.md5_hh(g,I,T,A,a[l+13],4,681279174),A=this.md5_hh(A,g,I,T,a[l],11,-358537222),T=this.md5_hh(T,A,g,I,a[l+3],16,-722521979),I=this.md5_hh(I,T,A,g,a[l+6],23,76029189),g=this.md5_hh(g,I,T,A,a[l+9],4,-640364487),A=this.md5_hh(A,g,I,T,a[l+12],11,-421815835),T=this.md5_hh(T,A,g,I,a[l+15],16,530742520),I=this.md5_hh(I,T,A,g,a[l+2],23,-995338651),g=this.md5_ii(g,I,T,A,a[l],6,-198630844),A=this.md5_ii(A,g,I,T,a[l+7],10,1126891415),T=this.md5_ii(T,A,g,I,a[l+14],15,-1416354905),I=this.md5_ii(I,T,A,g,a[l+5],21,-57434055),g=this.md5_ii(g,I,T,A,a[l+12],6,1700485571),A=this.md5_ii(A,g,I,T,a[l+3],10,-1894986606),T=this.md5_ii(T,A,g,I,a[l+10],15,-1051523),I=this.md5_ii(I,T,A,g,a[l+1],21,-2054922799),g=this.md5_ii(g,I,T,A,a[l+8],6,1873313359),A=this.md5_ii(A,g,I,T,a[l+15],10,-30611744),T=this.md5_ii(T,A,g,I,a[l+6],15,-1560198380),I=this.md5_ii(I,T,A,g,a[l+13],21,1309151649),g=this.md5_ii(g,I,T,A,a[l+4],6,-145523070),A=this.md5_ii(A,g,I,T,a[l+11],10,-1120210379),T=this.md5_ii(T,A,g,I,a[l+2],15,718787259),I=this.md5_ii(I,T,A,g,a[l+9],21,-343485551),g=this.safe_add(g,f),I=this.safe_add(I,x),T=this.safe_add(T,C),A=this.safe_add(A,v);return[g,I,T,A]},X.prototype.binl2rstr=function(a){var t,l="";for(t=0;t<a.length*32;t+=8)l+=String.fromCharCode(a[t>>5]>>>t%32&255);return l},X.prototype.rstr2binl=function(a){var t,l=[];for(l[(a.length>>2)-1]=void 0,t=0;t<l.length;t+=1)l[t]=0;for(t=0;t<a.length*8;t+=8)l[t>>5]|=(a.charCodeAt(t/8)&255)<<t%32;return l},X.prototype.rstr_md5=function(a){return this.binl2rstr(this.binl_md5(this.rstr2binl(a),a.length*8))},X.prototype.rstr_hmac_md5=function(a,t){var l,f=this.rstr2binl(a),x=[],C=[],v;for(x[15]=C[15]=void 0,f.length>16&&(f=this.binl_md5(f,a.length*8)),l=0;l<16;l+=1)x[l]=f[l]^909522486,C[l]=f[l]^1549556828;return v=this.binl_md5(x.concat(this.rstr2binl(t)),512+t.length*8),this.binl2rstr(this.binl_md5(C.concat(v),640))},X.prototype.rstr2hex=function(a){var t="0123456789abcdef",l="",f,x;for(x=0;x<a.length;x+=1)f=a.charCodeAt(x),l+=t.charAt(f>>>4&15)+t.charAt(f&15);return l},X.prototype.str2rstr_utf8=function(a){return unescape(encodeURIComponent(a))},X.prototype.raw_md5=function(a){return this.rstr_md5(this.str2rstr_utf8(a))},X.prototype.hex_md5=function(a){return this.rstr2hex(this.raw_md5(a))},X.prototype.raw_hmac_md5=function(a,t){return this.rstr_hmac_md5(this.str2rstr_utf8(a),this.str2rstr_utf8(t))},X.prototype.hex_hmac_md5=function(a,t){return this.rstr2hex(this.raw_hmac_md5(a,t))},X.prototype.md5=function(a,t,l){return t?l?this.raw_hmac_md5(t,a):this.hex_hmac_md5(t,a):l?this.raw_md5(a):this.hex_md5(a)},e.exports&&(n=e.exports=c),n.Chance=c,typeof importScripts<"u"&&(chance=new c,self.Chance=c),typeof window=="object"&&typeof window.document=="object"&&(window.Chance=c,window.chance=new c)})()})(Fn,Fn.exports);var sl=Fn.exports;const cl=ll(sl),dl=(e,n)=>{const i=e.__vccOpts||e;for(const[r,o]of n)i[r]=o;return i},vn=new cl;function fl(e){localStorage.appSavings=JSON.stringify({completed:e})}const ml={name:"Home",data(){return{showAns:!1,clickAns:!1,quesObj:null,roundQues:[],allQues:[],ansPools:[],completed:0,quesbank:Mn}},beforeMount(){if(localStorage.appSavings!==void 0){const e=JSON.parse(localStorage.appSavings);({completed:this.completed}=e)}this.loadAllQues()},mounted(){window.addEventListener("keypress",e=>{const n=e.key.toString();(n==="1"||n==="2"||n==="3"||n==="4")&&this.clickAns===!1&&this.checkAns(parseInt(n,10)-1),(n==="Enter"||n==="j"||n==="J")&&this.getQues(),(n==="a"||n==="A")&&this.loadAllQues()})},methods:{loadAllQues(){this.wrongs=new Set,Object.values(Mn).forEach(e=>delete e.state),this.allQues=Object.values(Mn),this.getQues()},getQues(){if(this.isQuesRoundDone()!==!0){this.showAns=!1,this.clickAns=!1,this.quesObj=vn.pickone(this.allQues.filter(n=>n.state===void 0));const e=vn.pickset(this.allQues.filter(n=>n!==this.quesObj&&n.type===this.quesObj.type),3);this.roundQues=vn.shuffle([this.quesObj,...e]),this.ansPools=this.roundQues.map(n=>n.meaning)}},checkAns(e){this.isQuesRoundDone()!==!0&&(this.ansPools[e]===this.quesObj.meaning?(this.completed+=1,this.quesObj.state=!0):this.quesObj.state=!1,this.clickAns=e,this.showAns=!0,fl(this.completed))},isCorrect(e){return this.ansPools[e]===this.quesObj.meaning},isAnsCorrect(e){return this.isCorrect(e)&&this.showAns===!0},isAnsWrong(e){return this.isCorrect(e)===!1&&this.showAns===!0&&e===this.clickAns},isQuesRoundDone(){return Object.values(this.allQues).every(e=>e.state!==void 0)}}},ul={class:"fw-bolder"},pl={class:"question-block"},hl={class:"answer-block"},xl={key:0},bl={class:"answer-btns"},gl=["onClick"];function Cl(e,n,i,r,o,s){return Je(),Xe(ve,null,[n[3]||(n[3]=fe("h1",{class:"mt-3 mb-3"},[Va("Airman 飛航代碼 "),fe("small",null,"Ver.2024 Nov")],-1)),fe("div",null,[Va(" ✏️ "+ze(o.allQues.filter(d=>d.state===void 0).length)+" / ✔️ "+ze(o.allQues.filter(d=>d.state===!0).length)+" / ❌ "+ze(o.allQues.filter(d=>d.state===!1).length)+" / ",1),fe("span",ul,"🦉 "+ze(o.completed),1),Pr(fe("div",null,"已回答所有的題目，請重新開始作答 😁",512),[[_o,s.isQuesRoundDone()]])]),fe("div",pl,[fe("div",null,ze(o.quesObj.word),1)]),fe("div",hl,[fe("ol",null,[(Je(!0),Xe(ve,null,ci(o.ansPools,(d,m)=>(Je(),Xe("li",{key:Math.random(m),class:Ga(["answer-option",{"correct-answer":s.isAnsCorrect(m),"wrong-answer":s.isAnsWrong(m)}])},[fe("span",null,ze(d),1),n[2]||(n[2]=Va()),o.showAns?(Je(),Xe("span",xl,ze(o.roundQues[m].detailed),1)):gi("",!0)],2))),128))])]),fe("div",bl,[(Je(!0),Xe(ve,null,ci(o.ansPools,(d,m)=>(Je(),Xe("div",{key:Math.random(m),onClick:p=>s.checkAns(m),class:Ga(["btn btn-outline-secondary me-5 answer-btn",{disabled:o.clickAns!==!1}])},ze(m+1),11,gl))),128))]),n[4]||(n[4]=fe("hr",null,null,-1)),s.isQuesRoundDone()?(Je(),Xe("div",{key:0,class:"btn btn-danger me-3 ms-3 mb-2 d-md-inline-block d-block",onClick:n[0]||(n[0]=d=>s.loadAllQues())},"重新開始 (A)")):gi("",!0),fe("div",{class:"btn btn-success me-3 ms-3 mb-2 d-md-inline-block d-block",onClick:n[1]||(n[1]=d=>s.getQues())},"下一題 (Enter)"),n[5]||(n[5]=fe("a",{class:"btn btn-outline-primary me-3 ms-3 mb-2 d-md-inline-block d-block",href:"https://sdwh.dev/about/",target:"_blank"},"關於作者",-1))],64)}const Al=dl(ml,[["render",Cl],["__scopeId","data-v-befa3877"]]),yl={__name:"App",setup(e){return(n,i)=>(Je(),Xe(ve,null,[i[0]||(i[0]=fe("div",null,null,-1)),Ue(Al)],64))}};tl(yl).mount("#app");
